!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var i,r=function(){function e(e){this._id=e}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasExternalCalendar",{get:function(){return this._hasExternalCalendar},set:function(e){this._hasExternalCalendar=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"controlRole",{get:function(){return this._controlRole},set:function(e){this._controlRole=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disCalChannel",{get:function(){return this._disCalChannel},set:function(e){this._disCalChannel=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasSimpleAnnouncements",{get:function(){return this._hasSimpleAnnouncements},set:function(e){this._hasSimpleAnnouncements=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"lang",{get:function(){return this._lang},set:function(e){this._lang=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"prefix",{get:function(){return this._prefix},set:function(e){this._prefix=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isPatronGuild",{get:function(){return this._isPatronGuild},set:function(e){this._isPatronGuild=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDevGuild",{get:function(){return this._isDevGuild},set:function(e){this._isDevGuild=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxCalendars",{get:function(){return this._maxCalendars},set:function(e){this._maxCalendars=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"usingTwelveHour",{get:function(){return this._usingTwelveHour},set:function(e){this._usingTwelveHour=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isBranded",{get:function(){return this._isBranded},set:function(e){this._isBranded=e},enumerable:!0,configurable:!0}),e.prototype.toJson=function(){return{guild_id:this.id,external_calendar:this.hasExternalCalendar,control_role:this.controlRole,discal_channel:this.disCalChannel,simple_announcement:this.hasSimpleAnnouncements,lang:this.lang,prefix:this.prefix,patron_guild:this.isPatronGuild,dev_guild:this.isDevGuild,max_calendars:this.maxCalendars,twelve_hour:this.usingTwelveHour,branded:this.isBranded}},e.prototype.fromJson=function(e){return this._id=e.guild_id,this.hasExternalCalendar=e.external_calendar,this.controlRole=e.control_role,this.disCalChannel=e.discal_channel,this.hasSimpleAnnouncements=e.simple_announcement,this.lang=e.lang,this.prefix=e.prefix,this.isPatronGuild=e.patron_guild,this.isDevGuild=e.dev_guild,this.maxCalendars=e.max_calendars,this.usingTwelveHour=e.twelve_hour,this.isBranded=e.branded,this},e}(),o=function(){function e(){}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},set:function(e){this._id=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isManaged",{get:function(){return this._isManaged},set:function(e){this._isManaged=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isControlRole",{get:function(){return this._isControlRole},set:function(e){this._isControlRole=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isEveryone",{get:function(){return this._isEveryone},set:function(e){this._isEveryone=e},enumerable:!0,configurable:!0}),e.prototype.toJson=function(){return{id:this.id,name:this.name,managed:this.isManaged,control_role:this.isControlRole,everyone:this.isEveryone}},e.prototype.fromJson=function(e){return this.id=e.id,this.name=e.name,this.isManaged=e.managed,this.isControlRole=e.control_role,this.isEveryone=e.everyone,this},e}(),a=function(){function e(){}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},set:function(e){this._id=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDisCalChannel",{get:function(){return this._isDisCalChannel},set:function(e){this._isDisCalChannel=e},enumerable:!0,configurable:!0}),e.prototype.toJson=function(){return{id:this.id,name:this.name,discal_channel:this.isDisCalChannel}},e.prototype.fromJson=function(e){return this.id=e.id,this.name=e.name,this.isDisCalChannel=e.discal_channel,this},e}(),s=function(){function e(e){this._id=e,this._roles=[],this._channels=[],this._announcements=[]}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"icon",{get:function(){return this._icon},set:function(e){this._icon=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"settings",{get:function(){return this._settings},set:function(e){this._settings=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"botNick",{get:function(){return this._botNick},set:function(e){this._botNick=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canManageServer",{get:function(){return this._canManageServer},set:function(e){this._canManageServer=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasDisCalRole",{get:function(){return this._hasDisCalRole},set:function(e){this._hasDisCalRole=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"roles",{get:function(){return this._roles},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"channels",{get:function(){return this._channels},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"announcements",{get:function(){return this._announcements},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"calendar",{get:function(){return this._calendar},set:function(e){this._calendar=e},enumerable:!0,configurable:!0}),e.prototype.toJson=function(){var e={id:this.id,name:this.name,settings:this.settings.toJson(),manage_server:this.canManageServer,discal_role:this.hasDisCalRole,calendar:this.calendar.toJson()};null!=this.icon&&(e.icon=this.icon),null!=this.botNick&&""!==this.botNick&&(e.bot_nick=this.botNick);for(var t=[],n=0;n<this.roles.length;n++){var i=this.roles[n];t.push(i.toJson())}e.roles=t;var r=[];for(n=0;n<this.channels.length;n++){var o=this.channels[n];r.push(o.toJson())}e.channels=r;var a=[];for(n=0;n<this.announcements.length;n++){var s=this.announcements[n];a.push(s.toJson())}return e.announcements=a,e},e.prototype.fromJson=function(e){this.name=e.name,e.hasOwnProperty("icon_url")&&(this.icon=e.icon_url),this.settings=new r(this.id).fromJson(e.settings),e.hasOwnProperty("bot_nick")&&(this.botNick=e.bot_nick),this.canManageServer=e.manage_server,this.hasDisCalRole=e.discal_role;for(var t=0;t<e.roles.length;t++)this.roles.push((new o).fromJson(e.roles[t]));for(t=0;t<e.channels.length;t++)this.channels.push((new a).fromJson(e.channels[t]));for(t=0;t<e.announcements.length;t++)this.roles.push((new o).fromJson(e.roles[t]));return this},e}(),c=function(){function e(){}return e.showSnackbar=function(e){var t=document.getElementById("snackbar");null!=t&&(t.innerHTML=e,t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3))},e}();!function(e){e[e.RSVP_GET=0]="RSVP_GET",e[e.RSVP_UPDATE=1]="RSVP_UPDATE",e[e.GUILD_SETTINGS_GET=2]="GUILD_SETTINGS_GET",e[e.GUILD_SETTINGS_UPDATE=3]="GUILD_SETTINGS_UPDATE",e[e.WEB_GUILD_GET=4]="WEB_GUILD_GET",e[e.WEB_GUILD_UPDATE=5]="WEB_GUILD_UPDATE",e[e.CALENDAR_GET=6]="CALENDAR_GET",e[e.CALENDAR_LIST=7]="CALENDAR_LIST",e[e.CALENDAR_UPDATE=8]="CALENDAR_UPDATE",e[e.CALENDAR_DELETE=9]="CALENDAR_DELETE",e[e.ANNOUNCEMENT_GET=10]="ANNOUNCEMENT_GET",e[e.ANNOUNCEMENT_LIST=11]="ANNOUNCEMENT_LIST",e[e.ANNOUNCEMENT_CREATE=12]="ANNOUNCEMENT_CREATE",e[e.ANNOUNCEMENT_UPDATE=13]="ANNOUNCEMENT_UPDATE",e[e.ANNOUNCEMENT_DELETE=14]="ANNOUNCEMENT_DELETE",e[e.EVENT_LIST_DATE=15]="EVENT_LIST_DATE",e[e.EVENT_LIST_MONTH=16]="EVENT_LIST_MONTH",e[e.EVENT_LIST_RANGE=17]="EVENT_LIST_RANGE",e[e.EVENT_CREATE=18]="EVENT_CREATE",e[e.EVENT_DELETE=19]="EVENT_DELETE",e[e.EVENT_GET=20]="EVENT_GET",e[e.EVENT_UPDATE=21]="EVENT_UPDATE"}(i||(i={}));var d,l,u=function(){function e(){}return e.showLoader=function(){document.getElementsByClassName("loader")[0].setAttribute("hidden","show")},e.hideLoader=function(){document.getElementsByClassName("loader")[0].setAttribute("hidden","hidden")},e.showCalendarContainer=function(){document.getElementById("calendar-container").hidden=!1},e.hideCalendarContainer=function(){document.getElementById("calendar-container").hidden=!0},e.showEventsContainer=function(){document.getElementById("events-container").hidden=!1},e.hideEventsContainer=function(){document.getElementById("events-container").hidden=!0},e}(),p=function(){function e(e,t){this._success=e,this._type=t}return Object.defineProperty(e.prototype,"isSuccess",{get:function(){return this._success},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"type",{get:function(){return this._type},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"code",{get:function(){return this._code},set:function(e){this._code=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"message",{get:function(){return this._message},set:function(e){this._message=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"body",{get:function(){return this._body},set:function(e){this._body=e},enumerable:!0,configurable:!0}),e}(),h=function(){function e(e,t,n){this.guildId=e,this.userId=t,this.callback=n}return e.prototype.provideApiDetails=function(e,t){this.apiKey=e,this.apiUrl=t},e.prototype.execute=function(){var e={guild_id:this.guildId,user_id:this.userId};$.ajax({url:this.apiUrl+"/v2/guild/get",headers:{"Content-Type":"application/json",Authorization:this.apiKey},method:"POST",dataType:"json",data:JSON.stringify(e),success:function(e){var t=new p(!0,i.WEB_GUILD_GET);t.code=200,t.body=e,t.message="Success",this.onComplete(t)}.bind(this),error:function(e){var t=new p(!1,i.WEB_GUILD_GET);t.code=e.status,t.body=e.responseJSON,t.message=e.responseJSON.message,this.onComplete(t)}.bind(this)})},e.prototype.onComplete=function(e){this.callback.onCallback(e)},e}(),m=function(){function e(e,t){this.guildId=e,this.callback=t}return e.prototype.provideApiDetails=function(e,t){this.apiKey=e,this.apiUrl=t},Object.defineProperty(e.prototype,"controlRole",{set:function(e){this._controlRole=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"discalChannel",{set:function(e){this._discalChannel=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"simpleAnnouncements",{set:function(e){this._simpleAnnouncements=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"lang",{set:function(e){this._lang=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"prefix",{set:function(e){this._prefix=e},enumerable:!0,configurable:!0}),e.prototype.execute=function(){var e={guild_id:this.guildId};this.controlRole.length>0&&(e.control_role=this.controlRole),this.discalChannel.length>0&&(e.discal_channel=this.discalChannel),this.updateSimpleAnnouncements&&(e.simple_announcements=this.simpleAnnouncements),this.lang.length>0&&(e.lang=this.lang),this.prefix.length>0&&(e.prefix=this.prefix),$.ajax({url:this.apiUrl+"/v2/guild/settings/update",headers:{"Content-Type":"application/json",Authorization:this.apiKey},method:"POST",dataType:"json",data:JSON.stringify(e),success:function(e){var t=new p(!0,i.GUILD_SETTINGS_UPDATE);t.code=200,t.body=e,t.message=e.message,this.onComplete(t)}.bind(this),error:function(e){var t=new p(!1,i.GUILD_SETTINGS_UPDATE);t.code=e.status,t.body=e.responseJSON,t.message=e.responseJSON.message,this.onComplete(t)}.bind(this)})},e.prototype.onComplete=function(e){this.callback.onCallback(e)},e}(),f=function(){function e(e,t){this.guildId=e,this.callback=t}return e.prototype.provideApiDetails=function(e,t){this.apiKey=e,this.apiUrl=t},Object.defineProperty(e.prototype,"botNick",{set:function(e){this._botNick=e},enumerable:!0,configurable:!0}),e.prototype.execute=function(){var e={guild_id:this.guildId,bot_nick:this._botNick};$.ajax({url:this.apiUrl+"/v2/guild/update",headers:{"Content-Type":"application/json",Authorization:this.apiKey},method:"POST",dataType:"json",data:JSON.stringify(e),success:function(e){var t=new p(!0,i.WEB_GUILD_UPDATE);t.code=200,t.body=e,t.message=e.message,this.onComplete(t)}.bind(this),error:function(e){var t=new p(!1,i.WEB_GUILD_UPDATE);t.code=e.status,t.body=e.responseJSON,t.message=e.responseJSON.message,this.onComplete(t)}.bind(this)})},e.prototype.onComplete=function(e){this.callback.onCallback(e)},e}(),b=function(){function e(e,t,n){this.apiKey=e,this.apiUrl=t,this.userId=n,this.guildId=parseInt(window.location.pathname.split("/")[3])}return e.prototype.startDashboardGuildPage=function(){var e=new h(this.guildId,this.userId,this);e.provideApiDetails(this.apiKey,this.apiUrl),e.execute()},e.prototype.handleWebGuildGet=function(e){this.guild=new s(this.guildId).fromJson(e.body),document.getElementById("nickname-input").value=this.guild.botNick,document.getElementById("nick-update-btn").onclick=function(){this.updateBotNick()}.bind(this),document.getElementById("prefix-input").value=this.guild.settings.prefix,document.getElementById("prefix-update-btn").onclick=function(){this.updatePrefix()}.bind(this),this.guild.settings.isPatronGuild?document.getElementById("patron-display").innerText="This guild is a patron guild":document.getElementById("patron-display").innerText="This guild is NOT a patron guild",this.guild.settings.isDevGuild?document.getElementById("dev-display").innerText="This guild is a dev guild":document.getElementById("dev-display").innerText="This guild is NOT a dev guild",u.hideLoader(),document.getElementById("guild-settings").hidden=!1},e.prototype.updateBotNick=function(){var e=new f(this.guildId,this);e.provideApiDetails(this.apiKey,this.apiUrl),e.botNick=document.getElementById("nickname-input").value,this.guild.botNick=e.botNick,e.execute()},e.prototype.updatePrefix=function(){var e=new m(this.guildId,this);e.provideApiDetails(this.apiKey,this.apiUrl),e.prefix=document.getElementById("prefix-input").value,this.guild.settings.prefix=e.prefix,e.execute()},e.prototype.onCallback=function(e){if(e.isSuccess)switch(e.type){case i.GUILD_SETTINGS_GET:this.handleWebGuildGet(e);break;case i.GUILD_SETTINGS_UPDATE:case i.WEB_GUILD_UPDATE:c.showSnackbar(e.message)}else switch(e.type){case i.WEB_GUILD_GET:404==e.code?(u.hideLoader(),document.getElementById("not-connected").hidden=!1,c.showSnackbar("Guild not Found")):c.showSnackbar("[ERROR] "+e.message);break;default:c.showSnackbar("[ERROR] "+e.message)}},e}();!function(e){e[e.MELROSE=0]="MELROSE",e[e.RIPTIDE=1]="RIPTIDE",e[e.MAUVE=2]="MAUVE",e[e.TANGERINE=3]="TANGERINE",e[e.DANDELION=4]="DANDELION",e[e.MAC_AND_CHEESE=5]="MAC_AND_CHEESE",e[e.TURQUOISE=6]="TURQUOISE",e[e.MERCURY=7]="MERCURY",e[e.BLUE=8]="BLUE",e[e.GREEN=9]="GREEN",e[e.RED=10]="RED",e[e.NONE=11]="NONE"}(d||(d={})),function(e){e[e.DAILY=0]="DAILY",e[e.WEEKLY=1]="WEEKLY",e[e.MONTHLY=2]="MONTHLY",e[e.YEARLY=3]="YEARLY"}(l||(l={}));var y=function(){function e(){}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},set:function(e){this._id=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"address",{get:function(){return this._address},set:function(e){this._address=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"number",{get:function(){return this._number},set:function(e){this._number=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"summary",{get:function(){return this._summary},set:function(e){this._summary=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"description",{get:function(){return this._description},set:function(e){this._description=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"timezone",{get:function(){return this._timezone},set:function(e){this._timezone=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isExternal",{get:function(){return this._external},set:function(e){this._external=e},enumerable:!0,configurable:!0}),e.prototype.toJson=function(){var e={calendar_address:this.address,calendar_id:this.id,calendar_number:this.number,external:this.isExternal,summary:this.summary,description:this.description,timezone:this.timezone};return null!=this.description&&(e.description=this.description),e},e.prototype.fromJson=function(e){return this.address=e.calendar_address,this.id=e.calendar_id,this.number=e.calendar_number,this.isExternal=e.external,this.summary=e.summary,this.description=e.description,this.timezone=e.timezone,this},e}(),g=function(){function e(e,t,n){this.guildId=e,this.calNum=t,this.callback=n}return e.prototype.provideApiDetails=function(e,t){this.apiKey=e,this.apiUrl=t},e.prototype.execute=function(){var e={guild_id:this.guildId,calendar_number:this.calNum};$.ajax({url:this.apiUrl+"/v2/calendar/get",headers:{"Content-Type":"application/json",Authorization:this.apiKey},method:"POST",dataType:"json",data:JSON.stringify(e),success:function(e){var t=new p(!0,i.CALENDAR_GET);t.code=200,t.body=e,t.message="Success",this.onComplete(t)}.bind(this),error:function(e){var t=new p(!1,i.CALENDAR_GET);t.code=e.status,t.body=e.responseJSON,t.message=e.responseJSON.message,this.onComplete(t)}.bind(this)})},e.prototype.onComplete=function(e){this.callback.onCallback(e)},e}(),E=function(){function e(e,t,n,i,r){this.guildId=e,this.calNum=t,this.days=n,this.epochStart=i,this.callback=r}return e.prototype.provideApiDetails=function(e,t){this.apiKey=e,this.apiUrl=t},e.prototype.execute=function(){var e={guild_id:this.guildId,calendar_number:this.calNum,days_in_month:this.days,epoch_start:this.epochStart};$.ajax({url:this.apiUrl+"/v2/events/list/month",headers:{"Content-Type":"application/json",Authorization:this.apiKey},method:"POST",dataType:"json",data:JSON.stringify(e),success:function(e){var t=new p(!0,i.EVENT_LIST_MONTH);t.code=200,t.body=e,t.message=e.message,this.onComplete(t)}.bind(this),error:function(e){var t=new p(!1,i.EVENT_LIST_MONTH);t.code=e.status,t.body=e.responseJSON,t.message=e.responseJSON.message,this.onComplete(t)}.bind(this)})},e.prototype.onComplete=function(e){this.callback.onCallback(e)},e}(),_=function(){function e(e,t,n,i){this.guildId=e,this.calNum=t,this.epochStart=n,this.callback=i}return e.prototype.provideApiDetails=function(e,t){this.apiKey=e,this.apiUrl=t},e.prototype.execute=function(){var e={guild_id:this.guildId,calendar_number:this.calNum,epoch_start:this.epochStart};$.ajax({url:this.apiUrl+"/v2/events/list/date",headers:{"Content-Type":"application/json",Authorization:this.apiKey},method:"POST",dataType:"json",data:JSON.stringify(e),success:function(e){var t=new p(!0,i.EVENT_LIST_DATE);t.code=200,t.body=e,t.message=e.message,this.onComplete(t)}.bind(this),error:function(e){var t=new p(!1,i.EVENT_LIST_DATE);t.code=e.status,t.body=e.responseJSON,t.message=e.responseJSON.message,this.onComplete(t)}.bind(this)})},e.prototype.onComplete=function(e){this.callback.onCallback(e)},e}(),v=function(){function e(){this.frequency=l.DAILY,this.interval=1,this.count=-1}return Object.defineProperty(e.prototype,"frequency",{get:function(){return this._frequency},set:function(e){this._frequency=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"interval",{get:function(){return this._interval},set:function(e){this._interval=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"count",{get:function(){return this._count},set:function(e){this._count=e},enumerable:!0,configurable:!0}),e.prototype.toJson=function(){return{frequency:l[this.frequency],interval:this.interval,count:this.count}},e.prototype.fromJson=function(e){return this.frequency=l[e.frequency],this.interval=e.interval,this.count=e.count,this},e}(),C=function(){function e(){this._eventId="",this._summary="",this._description="",this._location="",this._color=d.NONE,this._image=""}return Object.defineProperty(e.prototype,"eventId",{get:function(){return this._eventId},set:function(e){this._eventId=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"epochStart",{get:function(){return this._epochStart},set:function(e){this._epochStart=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"epochEnd",{get:function(){return this._epochEnd},set:function(e){this._epochEnd=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"summary",{get:function(){return this._summary},set:function(e){this._summary=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"description",{get:function(){return this._description},set:function(e){this._description=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"location",{get:function(){return this._location},set:function(e){this._location=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isParent",{get:function(){return this._isParent},set:function(e){this._isParent=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(e){this._color=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"doesRecur",{get:function(){return this._recur},set:function(e){this._recur=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrence",{get:function(){return this._recurrence},set:function(e){this._recurrence=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"image",{get:function(){return this._image},set:function(e){this._image=e},enumerable:!0,configurable:!0}),e.prototype.toJson=function(){var e={event_id:this.eventId,epoch_start:this.epochStart,epoch_end:this.epochEnd,color:d[this.color],recur:this.doesRecur};return this.summary.length>0&&(e.summary=this.summary),this.description.length&&(e.description=this.description),this.location.length>0&&(e.location=this.location),this.doesRecur&&(e.recurrence=this.recurrence.toJson()),this.image.length>0&&(e.image=this.image),e},e.prototype.fromJson=function(e){return this.eventId=e.event_id,this.epochStart=e.epoch_start,this.epochEnd=e.epoch_end,e.hasOwnProperty("summary")&&(this.summary=e.summary),e.hasOwnProperty("description")&&(this.description=e.description),e.hasOwnProperty("location")&&(this.location=e.location),this.isParent=e.is_parent,this.color=d[e.color],this.doesRecur=e.recur,this.doesRecur&&(this.recurrence=(new v).fromJson(e.recurrence)),e.hasOwnProperty("image")&&(this.image=e.image),this},e}(),T=function(){function e(){this.guildId=parseInt(window.location.pathname.split("/")[3]),this.calNumber=parseInt(window.location.pathname.split("/")[4]),this.todaysDate=new Date,this.selectedDate=new Date,this.displays=[],this.apiKey="",this.apiUrl=""}return e.prototype.init=function(e,t){if(this.apiKey=e,this.apiUrl=t,"internal_error"===this.apiKey)u.hideLoader(),alert("Failed to get a read-only API key to display your calendar. \nIf you keep receiving this error, please contact the developers");else{var n=new g(this.guildId,this.calNumber,this);n.provideApiDetails(this.apiKey,this.apiUrl),this.setMonth(this.selectedDate),n.execute(),this.getEventsForMonth()}return this},e.prototype.getMonthName=function(e){return["January","February","March","April","May","June","July","August","September","October","November","December"][e]},e.prototype.getDayName=function(e){return["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][e]},e.prototype.dateDisplays=function(){return["r1c1","r1c2","r1c3","r1c4","r1c5","r1c6","r1c7","r2c1","r2c2","r2c3","r2c4","r2c5","r2c6","r2c7","r3c1","r3c2","r3c3","r3c4","r3c5","r3c6","r3c7","r4c1","r4c2","r4c3","r4c4","r4c5","r4c6","r4c7","r5c1","r5c2","r5c3","r5c4","r5c5","r5c6","r5c7","r6c1","r6c2","r6c3","r6c4","r6c5","r6c6","r6c7"]},e.prototype.daysInMonth=function(){return new Date(this.selectedDate.getFullYear(),this.selectedDate.getMonth()+1,0).getDate()},e.prototype.dateDisplaysToChange=function(e){return this.dateDisplays().slice(this.dateDisplays().indexOf(e),this.dateDisplays().length-1)},e.prototype.findFirstDayOfMonthPosition=function(){var e=new Date(this.selectedDate.getFullYear(),this.selectedDate.getMonth(),1);switch(this.getDayName(e.getDay())){case"Sunday":return"r1c1";case"Monday":return"r1c2";case"Tuesday":return"r1c3";case"Wednesday":return"r1c4";case"Thursday":return"r1c5";case"Friday":return"r1c6";case"Saturday":return"r1c7"}return"r1c1"},e.prototype.changeRecurrenceEditDisplays=function(e){var t=e.id.split("-")[1];e.checked?(document.getElementById("editFrequency-"+t).disabled=!1,document.getElementById("editCount-"+t).disabled=!1,document.getElementById("editInterval-"+t).disabled=!1):(document.getElementById("editFrequency-"+t).disabled=!0,document.getElementById("editCount-"+t).disabled=!0,document.getElementById("editInterval-"+t).disabled=!0)},e.prototype.setMonth=function(e){document.getElementById("month-display").innerHTML=this.getMonthName(e.getMonth())+" "+e.getFullYear(),this.displays=[];for(var t=this.dateDisplays(),n=0;n<t.length;n++){var i=document.getElementById(t[n]);i.innerHTML="",i.className="cal-date"}for(var r=this.dateDisplaysToChange(this.findFirstDayOfMonthPosition()),o=this.daysInMonth(),a=0;a<r.length;a++){var s=a+1;if(s<=o){var c=document.getElementById(r[a]);c.innerHTML=s+"",this.displays[s]=r[a];var d=new Date(this.selectedDate.getFullYear(),this.selectedDate.getMonth(),s);s===this.selectedDate.getDate()&&(c.className="selected cal-date"),d.getMonth()===this.todaysDate.getMonth()&&d.getFullYear()===this.todaysDate.getFullYear()&&d.getDate()===this.todaysDate.getDate()&&(c.classList.contains("selected")?(c.className="today selected cal-date",this.getEventsForSelectedDate()):c.className="today cal-date")}}},e.prototype.getEventsForMonth=function(){var e=new Date(this.selectedDate.getFullYear(),this.selectedDate.getMonth(),1);e.setHours(0,0,0,0);var t=new E(this.guildId,this.calNumber,this.daysInMonth(),e.getTime(),this);t.provideApiDetails(this.apiKey,this.apiUrl),t.execute()},e.prototype.getEventsForSelectedDate=function(){var e=new Date(this.selectedDate.getFullYear(),this.selectedDate.getMonth(),this.selectedDate.getDate());e.setHours(0,0,0,0),u.hideEventsContainer();var t=new _(this.guildId,this.calNumber,e.getTime(),this);t.provideApiDetails(this.apiKey,this.apiUrl),t.execute()},e.prototype.onCallback=function(t){if(t.isSuccess)switch(t.type){case i.CALENDAR_GET:this.calendarData=(new y).fromJson(t.body),document.getElementById("view-on-google-button").href="https://calendar.google.com/calendar/embed?src="+this.calendarData.address;break;case i.EVENT_LIST_MONTH:for(var n=0;n<t.body.events.length;n++){var r=new Date(t.body.events[n].epoch_start),o=document.getElementById(this.displays[r.getDate()]);-1===o.innerHTML.indexOf("[")?o.innerHTML=r.getDate()+"[1]":o.innerHTML=r.getDate().toString()+"["+(parseInt(o.innerHTML.split("[")[1][0])+1).toString()+"]"}u.hideLoader(),u.showCalendarContainer();break;case i.EVENT_LIST_DATE:e.loadEventDisplay(t)}else c.showSnackbar("ERROR] "+t.message)},e.loadEventDisplay=function(e){for(var t=document.getElementById("events-container");t.firstChild;)t.removeChild(t.firstChild);for(var n=0;n<e.body.events.length;n++){var i=(new C).fromJson(e.body.events[n]),r=document.createElement("button");r.type="button",r.className="btn bg-discord-blurple btn-discord btn-block text-discord-full-white event-view-btn",r.setAttribute("data-toggle","modal"),r.setAttribute("data-target","#modal-"+i.eventId),r.innerHTML="View "+i.summary,t.appendChild(r),t.appendChild(document.createElement("br")),t.appendChild(document.createElement("br"));var o=document.createElement("div");o.className="modal fade",o.id="modal-"+i.eventId,o.role="dialog",t.appendChild(o);var a=document.createElement("div");a.className="modal-dialog",o.appendChild(a);var s=document.createElement("div");s.className="modal-content bg-discal-not-black",a.appendChild(s);var c=document.createElement("div");c.className="modal-header bg-discal-not-black",s.appendChild(c);var p=document.createElement("h4");p.className="modal-title text-discord-blurple text-center",p.innerHTML="Viewing Event",c.appendChild(p);var h=document.createElement("div");h.className="modal-body",s.appendChild(h);var m=document.createElement("form");h.appendChild(m);var f=document.createElement("label");f.innerHTML="Summary",f.className="text-discord-full-white",f.appendChild(document.createElement("br")),m.appendChild(f);var b=document.createElement("input");b.name="summary",b.type="text",b.value=i.summary,b.id="editSummary-"+i.eventId,b.readOnly=!0,f.appendChild(b),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var y=document.createElement("label");y.innerHTML="Description",y.className="text-discord-full-white",y.appendChild(document.createElement("br")),m.appendChild(y);var g=document.createElement("input");g.name="edit-description",g.type="text",g.value=i.description,g.id="editDescription-"+i.eventId,g.readOnly=!0,y.appendChild(g),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var E=new Date(i.epochStart),_=document.createElement("label");_.innerHTML="Start Date and Time",_.className="text-discord-full-white",_.appendChild(document.createElement("br")),m.appendChild(_);var v=document.createElement("input");v.name="start-date",v.type="date",v.valueAsDate=E,v.id="editStartDate-"+i.eventId,v.readOnly=!0,_.appendChild(v);var T=document.createElement("input");T.name="start-time",T.type="time",T.value=(E.getHours()<10?"0":"")+E.getHours()+":"+(E.getMinutes()<10?"0":"")+E.getMinutes(),T.id="editStartTime-"+i.eventId,T.readOnly=!0,_.appendChild(T),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var N=new Date(i.epochEnd),D=document.createElement("label");D.innerHTML="End Date and Time",D.className="text-discord-full-white",D.appendChild(document.createElement("br")),m.appendChild(D);var I=document.createElement("input");I.name="end-date",I.type="date",I.valueAsDate=N,I.id="editEndDate-"+i.eventId,I.readOnly=!0,D.appendChild(I);var O=document.createElement("input");O.name="end-time",O.type="time",O.value=(N.getHours()<10?"0":"")+N.getHours()+":"+(N.getMinutes()<10?"0":"")+N.getMinutes(),O.id="editEndTime-"+i.eventId,O.readOnly=!0,D.appendChild(O),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var P=document.createElement("label");P.innerHTML="Location",P.className="text-discord-full-white",P.appendChild(document.createElement("br")),m.appendChild(P);var S=document.createElement("input");S.name="location",S.type="text",S.value=i.location,S.id="editLocation-"+i.eventId,S.readOnly=!0,P.appendChild(S),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var A=document.createElement("label");A.innerHTML="Color",A.className="text-discord-full-white",A.appendChild(document.createElement("br")),m.appendChild(A);var w=document.createElement("select");for(var M in w.name="color",w.id="editColor-"+i.eventId,w.disabled=!0,A.appendChild(w),d){var x=document.createElement("option");x.value=d[M],x.text=d[M],x.selected=d[i.color]===d[M],w.appendChild(x)}if(m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br")),i.doesRecur){var L=document.createElement("label");if(L.innerHTML="Recurrence",L.className="text-discord-full-white",L.appendChild(document.createElement("br")),m.appendChild(L),i.isParent){var j=document.createElement("input");j.name="enable-recurrence",j.type="checkbox",j.checked=!1,j.readOnly=!0,j.id="editEnableRecur-"+i.eventId,L.appendChild(j),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var R=document.createElement("label");R.innerHTML="Recurrence - Frequency",R.className="text-discord-full-white",R.appendChild(document.createElement("br")),m.appendChild(R);var U=document.createElement("select");for(var k in U.name="frequency",U.id="editFrequency-"+i.eventId,R.appendChild(U),l){var G=document.createElement("option");G.value=l[k],G.text=l[k],G.selected=l[i.recurrence.frequency]===l[k],U.appendChild(G)}U.disabled=!0,R.appendChild(U),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var B=document.createElement("label");B.innerHTML="Recurrence - Count",B.className="text-discord-full-white",B.appendChild(document.createElement("br")),m.appendChild(B);var J=document.createElement("input");J.name="count",J.type="number",J.valueAsNumber=i.recurrence.count,J.min="-1",J.id="editCount-"+i.eventId,J.readOnly=!0,B.appendChild(J),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var H=document.createElement("label");H.innerHTML="Recurrence - Interval",H.className="text-discord-full-white",H.appendChild(document.createElement("br")),m.appendChild(H);var F=document.createElement("input");F.name="interval",F.type="number",F.valueAsNumber=i.recurrence.interval,F.min="1",F.id="editInterval-"+i.eventId,F.readOnly=!0,H.appendChild(F),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"))}else{var K=document.createElement("input");K.name="ignore-cer",K.type="text",K.readOnly=!0,K.value="Cannot edit child",L.appendChild(K)}m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"))}var V=document.createElement("label");V.innerHTML="Image",V.className="text-discord-full-white",V.appendChild(document.createElement("br")),m.appendChild(V);var Y=document.createElement("input");Y.name="image",Y.type="text",Y.value=i.image,Y.id="editImage-"+i.eventId,Y.readOnly=!0,V.appendChild(Y),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var W=document.createElement("label");W.innerHTML="Event ID",W.className="text-discord-full-white",W.appendChild(document.createElement("br")),m.appendChild(W);var q=document.createElement("input");q.type="text",q.name="id",q.value=i.eventId,q.id="editId-"+i.eventId,q.readOnly=!0,W.appendChild(q),m.appendChild(document.createElement("br")),m.appendChild(document.createElement("br"));var z=document.createElement("div");z.className="modal-footer",s.appendChild(z);var $=document.createElement("button");$.type="button",$.className="btn bg-discord-blurple btn-discord btn-block text-discord-full-white",$.setAttribute("data-dismiss","modal"),$.innerHTML="Close",z.appendChild($)}u.showEventsContainer()},e}(),N=function(){function e(){this.embedCalendar=new T}return e.prototype.init=function(e,t){this.embedCalendar.init(e,t),document.getElementById("previous-month").onclick=function(){this.previousMonth()}.bind(this),document.getElementById("next-month").onclick=function(){this.nextMonth()}.bind(this);for(var n=document.getElementsByClassName("cal-date"),i=function(e){var t=n[e];t.onclick=function(){this.selectDate(t.id)}.bind(r)},r=this,o=0;o<n.length;o++)i(o)},e.prototype.previousMonth=function(){this.embedCalendar.selectedDate.setMonth(this.embedCalendar.selectedDate.getMonth()-1),this.embedCalendar.selectedDate.setDate(1),this.embedCalendar.setMonth(this.embedCalendar.selectedDate),this.embedCalendar.getEventsForMonth(),this.embedCalendar.getEventsForSelectedDate()},e.prototype.nextMonth=function(){this.embedCalendar.selectedDate.setMonth(this.embedCalendar.selectedDate.getMonth()+1),this.embedCalendar.selectedDate.setDate(1),this.embedCalendar.setMonth(this.embedCalendar.selectedDate),this.embedCalendar.getEventsForMonth(),this.embedCalendar.getEventsForSelectedDate()},e.prototype.selectDate=function(e){var t=document.getElementById(e),n=t.innerHTML.split("[")[0];if(""!==n){var i=parseInt(n);this.embedCalendar.selectedDate.setDate(i),this.embedCalendar.getEventsForSelectedDate(),document.getElementsByClassName("selected")[0].classList.remove("selected"),t.classList.add("selected")}},e}();var D,I,O=document.getElementById("page-top");null!=O.dataset.embedKey?(D=O.dataset.embedKey,I=O.dataset.apiUrl,(new N).init(D,I)):null!=O.dataset.apiKey&&function(e,t,n){new b(e,t,parseInt(n)).startDashboardGuildPage()}(O.dataset.apiKey,O.dataset.apiUrl,O.dataset.userId),function(e){e("#sidebarToggle, #sidebarToggleTop").on("click",(function(){e("body").toggleClass("sidebar-toggled");var t=e(".sidebar");t.toggleClass("toggled"),t.hasClass("toggled")&&e(".sidebar .collapse").collapse(!0)})),e(window).resize((function(){e(window).width()<768&&e(".sidebar .collapse").collapse(!0)})),e("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel",(function(t){if(e(window).width()>768){var n=t.originalEvent,i=n.wheelDelta||-n.detail;this.scrollTop+=30*(i<0?1:-1),t.preventDefault()}})),e(document).on("scroll",(function(){e(this).scrollTop()>100?e(".scroll-to-top").fadeIn():e(".scroll-to-top").fadeOut()})),e(document).on("click","a.scroll-to-top",(function(t){var n=e(this);e("html, body").stop().animate({scrollTop:e(n.attr("href")).offset().top},1e3,"easeInOutExpo"),t.preventDefault()}))}(jQuery)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vd2ViL3NyYy9tYWluL2phdmFzY3JpcHQvb2JqZWN0cy9ndWlsZC9HdWlsZFNldHRpbmdzLnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L2VudW1zL1Rhc2tUeXBlLnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L29iamVjdHMvZ3VpbGQvV2ViUm9sZS50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9vYmplY3RzL2d1aWxkL1dlYkNoYW5uZWwudHMiLCJ3ZWJwYWNrOi8vLy4vd2ViL3NyYy9tYWluL2phdmFzY3JpcHQvb2JqZWN0cy9ndWlsZC9XZWJHdWlsZC50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC91dGlscy9zbmFja2Jhci50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC91dGlscy9FbGVtZW50VXRpbC50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9lbnVtcy9FdmVudENvbG9yLnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L2VudW1zL0V2ZW50RnJlcXVlbmN5LnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L29iamVjdHMvbmV0d29yay9OZXR3b3JrQ2FsbFN0YXR1cy50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9uZXR3b3JrL2d1aWxkL1dlYkd1aWxkR2V0UmVxdWVzdC50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9uZXR3b3JrL2d1aWxkL3NldHRpbmdzL0d1aWxkU2V0dGluZ3NVcGRhdGVSZXF1ZXN0LnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L25ldHdvcmsvZ3VpbGQvV2ViR3VpbGRVcGRhdGVSZXF1ZXN0LnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L2Rhc2hib2FyZC9ndWlsZC50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9vYmplY3RzL2NhbGVuZGFyL1dlYkNhbGVuZGFyLnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L25ldHdvcmsvY2FsZW5kYXIvQ2FsZW5kYXJHZXRSZXF1ZXN0LnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L25ldHdvcmsvZXZlbnQvbGlzdC9FdmVudExpc3RNb250aFJlcXVlc3QudHMiLCJ3ZWJwYWNrOi8vLy4vd2ViL3NyYy9tYWluL2phdmFzY3JpcHQvbmV0d29yay9ldmVudC9saXN0L0V2ZW50TGlzdERhdGVSZXF1ZXN0LnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L29iamVjdHMvZXZlbnQvUmVjdXJyZW5jZS50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9vYmplY3RzL2V2ZW50L0V2ZW50LnRzIiwid2VicGFjazovLy8uL3dlYi9zcmMvbWFpbi9qYXZhc2NyaXB0L29iamVjdHMvY2FsZW5kYXIvRW1iZWRDYWxlbmRhci50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9lbWJlZC9jYWxlbmRhci50cyIsIndlYnBhY2s6Ly8vLi93ZWIvc3JjL21haW4vamF2YXNjcmlwdC9pbmRleC50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIlRhc2tUeXBlIiwiaWQiLCJ0aGlzIiwiX2lkIiwiX2hhc0V4dGVybmFsQ2FsZW5kYXIiLCJleHRlcm5hbCIsIl9jb250cm9sUm9sZSIsInJvbGUiLCJfZGlzQ2FsQ2hhbm5lbCIsImNoYW5uZWwiLCJfaGFzU2ltcGxlQW5ub3VuY2VtZW50cyIsInNpbXBsZUFubm91bmNlbWVudHMiLCJfbGFuZyIsImxhbmciLCJfcHJlZml4IiwicHJlZml4IiwiX2lzUGF0cm9uR3VpbGQiLCJwYXRyb24iLCJfaXNEZXZHdWlsZCIsImRldiIsIl9tYXhDYWxlbmRhcnMiLCJtYXgiLCJfdXNpbmdUd2VsdmVIb3VyIiwidXNpbmciLCJfaXNCcmFuZGVkIiwiYnJhbmRlZCIsInRvSnNvbiIsImhhc0V4dGVybmFsQ2FsZW5kYXIiLCJjb250cm9sUm9sZSIsImRpc0NhbENoYW5uZWwiLCJoYXNTaW1wbGVBbm5vdW5jZW1lbnRzIiwiaXNQYXRyb25HdWlsZCIsImlzRGV2R3VpbGQiLCJtYXhDYWxlbmRhcnMiLCJ1c2luZ1R3ZWx2ZUhvdXIiLCJpc0JyYW5kZWQiLCJmcm9tSnNvbiIsImpzb24iLCJndWlsZF9pZCIsImV4dGVybmFsX2NhbGVuZGFyIiwiY29udHJvbF9yb2xlIiwiZGlzY2FsX2NoYW5uZWwiLCJzaW1wbGVfYW5ub3VuY2VtZW50IiwicGF0cm9uX2d1aWxkIiwiZGV2X2d1aWxkIiwibWF4X2NhbGVuZGFycyIsInR3ZWx2ZV9ob3VyIiwiX25hbWUiLCJfaXNNYW5hZ2VkIiwibWFuYWdlZCIsIl9pc0NvbnRyb2xSb2xlIiwiX2lzRXZlcnlvbmUiLCJldmVyeW9uZSIsImlzTWFuYWdlZCIsImlzQ29udHJvbFJvbGUiLCJpc0V2ZXJ5b25lIiwiX2lzRGlzQ2FsQ2hhbm5lbCIsImlzRGlzQ2FsQ2hhbm5lbCIsIl9yb2xlcyIsIl9jaGFubmVscyIsIl9hbm5vdW5jZW1lbnRzIiwiX2ljb24iLCJpY29uVXJsIiwiX3NldHRpbmdzIiwic2V0dGluZ3MiLCJfYm90TmljayIsIm5pY2siLCJfY2FuTWFuYWdlU2VydmVyIiwibWFuYWdlIiwiX2hhc0Rpc0NhbFJvbGUiLCJoYXNSb2xlIiwiX2NhbGVuZGFyIiwiY2FsZW5kYXIiLCJjYW5NYW5hZ2VTZXJ2ZXIiLCJoYXNEaXNDYWxSb2xlIiwiaWNvbiIsImJvdE5pY2siLCJib3RfbmljayIsImpSb2xlcyIsInJvbGVzIiwibGVuZ3RoIiwicHVzaCIsImpDaGFubmVscyIsImNoYW5uZWxzIiwiakFubm91bmNlbWVudHMiLCJhbm5vdW5jZW1lbnRzIiwiYW5ub3VuY2VtZW50IiwiaWNvbl91cmwiLCJHdWlsZFNldHRpbmdzIiwibWFuYWdlX3NlcnZlciIsImRpc2NhbF9yb2xlIiwiV2ViUm9sZSIsIldlYkNoYW5uZWwiLCJzaG93U25hY2tiYXIiLCJ0ZXh0VG9EaXNwbGF5IiwieCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJjbGFzc05hbWUiLCJzZXRUaW1lb3V0IiwicmVwbGFjZSIsIkV2ZW50Q29sb3IiLCJFdmVudEZyZXF1ZW5jeSIsInNob3dMb2FkZXIiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic2V0QXR0cmlidXRlIiwiaGlkZUxvYWRlciIsInNob3dDYWxlbmRhckNvbnRhaW5lciIsImhpZGRlbiIsImhpZGVDYWxlbmRhckNvbnRhaW5lciIsInNob3dFdmVudHNDb250YWluZXIiLCJoaWRlRXZlbnRzQ29udGFpbmVyIiwic3VjY2VzcyIsInR5cGUiLCJfc3VjY2VzcyIsIl90eXBlIiwiX2NvZGUiLCJjb2RlIiwiX21lc3NhZ2UiLCJtZXNzYWdlIiwiX2JvZHkiLCJib2R5IiwiZ3VpbGRJZCIsInVzZXJJZCIsImNhbGxiYWNrIiwicHJvdmlkZUFwaURldGFpbHMiLCJhcGlLZXkiLCJhcGlVcmwiLCJleGVjdXRlIiwiYm9keVJhdyIsIiQiLCJhamF4IiwidXJsIiwiaGVhZGVycyIsIm1ldGhvZCIsImRhdGFUeXBlIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdGF0dXMiLCJOZXR3b3JrQ2FsbFN0YXR1cyIsIldFQl9HVUlMRF9HRVQiLCJvbkNvbXBsZXRlIiwiZXJyb3IiLCJqcVhIUiIsInJlc3BvbnNlSlNPTiIsIm9uQ2FsbGJhY2siLCJfZGlzY2FsQ2hhbm5lbCIsInVzZSIsIl9zaW1wbGVBbm5vdW5jZW1lbnRzIiwiZGlzY2FsQ2hhbm5lbCIsInVwZGF0ZVNpbXBsZUFubm91bmNlbWVudHMiLCJzaW1wbGVfYW5ub3VuY2VtZW50cyIsIkdVSUxEX1NFVFRJTkdTX1VQREFURSIsIldFQl9HVUlMRF9VUERBVEUiLCJwYXJzZUludCIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzcGxpdCIsInN0YXJ0RGFzaGJvYXJkR3VpbGRQYWdlIiwid2dyIiwiaGFuZGxlV2ViR3VpbGRHZXQiLCJndWlsZCIsIm9uY2xpY2siLCJ1cGRhdGVCb3ROaWNrIiwidXBkYXRlUHJlZml4IiwiaW5uZXJUZXh0IiwiRWxlbWVudFV0aWwiLCJyZXF1ZXN0IiwiaXNTdWNjZXNzIiwiR1VJTERfU0VUVElOR1NfR0VUIiwiU25hY2tiYXIiLCJfYWRkcmVzcyIsImFkZHJlc3MiLCJfbnVtYmVyIiwibnVtIiwiX3N1bW1hcnkiLCJzdW1tYXJ5IiwiX2Rlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJfdGltZXpvbmUiLCJ0aW1lem9uZSIsIl9leHRlcm5hbCIsIm51bWJlciIsImlzRXh0ZXJuYWwiLCJjYWxlbmRhcl9hZGRyZXNzIiwiY2FsZW5kYXJfaWQiLCJjYWxlbmRhcl9udW1iZXIiLCJjYWxOdW0iLCJDQUxFTkRBUl9HRVQiLCJkYXlzIiwiZXBvY2hTdGFydCIsIkVWRU5UX0xJU1RfTU9OVEgiLCJFVkVOVF9MSVNUX0RBVEUiLCJmcmVxdWVuY3kiLCJEQUlMWSIsImludGVydmFsIiwiY291bnQiLCJfZnJlcXVlbmN5IiwiZnJlcSIsIl9pbnRlcnZhbCIsImludCIsIl9jb3VudCIsIl9ldmVudElkIiwiX2xvY2F0aW9uIiwiX2NvbG9yIiwiTk9ORSIsIl9pbWFnZSIsIl9lcG9jaFN0YXJ0IiwiZXBvY2giLCJfZXBvY2hFbmQiLCJkZXNjIiwibG9jIiwiX2lzUGFyZW50IiwiaXNQYXIiLCJjb2wiLCJfcmVjdXIiLCJkb2VzIiwiX3JlY3VycmVuY2UiLCJyZWMiLCJpbWciLCJldmVudElkIiwiZXBvY2hFbmQiLCJjb2xvciIsImRvZXNSZWN1ciIsInJlY3VycmVuY2UiLCJpbWFnZSIsImV2ZW50X2lkIiwiZXBvY2hfc3RhcnQiLCJlcG9jaF9lbmQiLCJpc1BhcmVudCIsImlzX3BhcmVudCIsInJlY3VyIiwiY2FsTnVtYmVyIiwidG9kYXlzRGF0ZSIsIkRhdGUiLCJzZWxlY3RlZERhdGUiLCJkaXNwbGF5cyIsImluaXQiLCJhbGVydCIsImNhbFJlcSIsInNldE1vbnRoIiwiZ2V0RXZlbnRzRm9yTW9udGgiLCJnZXRNb250aE5hbWUiLCJpbmRleCIsImdldERheU5hbWUiLCJkYXRlRGlzcGxheXMiLCJkYXlzSW5Nb250aCIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZGF0ZURpc3BsYXlzVG9DaGFuZ2UiLCJzdHIiLCJzbGljZSIsImluZGV4T2YiLCJmaW5kRmlyc3REYXlPZk1vbnRoUG9zaXRpb24iLCJmaXJzdERheSIsImdldERheSIsImNoYW5nZVJlY3VycmVuY2VFZGl0RGlzcGxheXMiLCJjaGVja2JveCIsImNoZWNrZWQiLCJkaXNhYmxlZCIsImRhdGUiLCJ0Y2MiLCJpaSIsImUiLCJ0YyIsImVsIiwidGhpc0RhdGUiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImdldEV2ZW50c0ZvclNlbGVjdGVkRGF0ZSIsImRzIiwic2V0SG91cnMiLCJldmVudFJlcSIsImdldFRpbWUiLCJjYWxlbmRhckRhdGEiLCJXZWJDYWxlbmRhciIsImhyZWYiLCJldmVudHMiLCJ0b1N0cmluZyIsIkVtYmVkQ2FsZW5kYXIiLCJsb2FkRXZlbnREaXNwbGF5IiwiY29udGFpbmVyIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwidmlld0J1dHRvbiIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsIm1vZGFsQ29udGFpbmVyIiwibW9kYWxEaWEiLCJtb2RhbENvbiIsIm1vZGFsSGVhZGVyIiwibW9kYWxUaXRsZSIsIm1vZGFsQm9keSIsImZvcm0iLCJzdW1tYXJ5TGFiZWwiLCJyZWFkT25seSIsImRlc2NyaXB0aW9uTGFiZWwiLCJzZCIsInN0YXJ0TGFiZWwiLCJzdGFydERhdGUiLCJ2YWx1ZUFzRGF0ZSIsInN0YXJ0VGltZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImVkIiwiZW5kTGFiZWwiLCJlbmREYXRlIiwiZW5kVGltZSIsImxvY2F0aW9uTGFiZWwiLCJjb2xvckxhYmVsIiwiY29sb3JTZWxlY3QiLCJlYyIsIm9wdGlvbiIsInRleHQiLCJzZWxlY3RlZCIsInJlY3VycmVuY2VMYWJlbCIsImVuYWJsZVJlY3VycmVuY2UiLCJmcmVxdWVuY3lMYWJlbCIsImZyZXFTZWxlY3QiLCJmIiwib3AiLCJjb3VudExhYmVsIiwidmFsdWVBc051bWJlciIsIm1pbiIsImludGVydmFsTGFiZWwiLCJjYW5ub3RFZGl0UmVjdXIiLCJpbWFnZUxhYmVsIiwiaWRMYWJlbCIsImhpZGRlbklkIiwibW9kYWxGb290ZXIiLCJjbG9zZUJ1dHRvbiIsImVtYmVkQ2FsZW5kYXIiLCJwcmV2aW91c01vbnRoIiwibmV4dE1vbnRoIiwic2VsZWN0RGF0ZSIsInNldERhdGUiLCJjbGlja2VkSWQiLCJkYXRlU3RyaW5nIiwiZGF0ZU51bSIsInJlbW92ZSIsImFkZCIsImVtYmVkS2V5IiwiZGF0YXNldCIsImxvYWREYXNoYm9hcmRHdWlsZFBhZ2UiLCJvbiIsInRvZ2dsZUNsYXNzIiwic2lkZWJhciIsImhhc0NsYXNzIiwiY29sbGFwc2UiLCJyZXNpemUiLCJ3aWR0aCIsImUwIiwib3JpZ2luYWxFdmVudCIsImRlbHRhIiwid2hlZWxEZWx0YSIsImRldGFpbCIsInNjcm9sbFRvcCIsInByZXZlbnREZWZhdWx0IiwiZmFkZUluIiwiZmFkZU91dCIsIiRhbmNob3IiLCJzdG9wIiwiYW5pbWF0ZSIsImF0dHIiLCJvZmZzZXQiLCJ0b3AiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2QixHQUZBMUIsRUFBb0JrQixFQUFFTyxHQUN0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TSxRQUFXLElBQUssQ0FDN0IsSUFBTUMsRUFBVXhGLEVBQUV5RixjQUNqQkMsRUFBUUYsRUFBR0csYUFBZUgsRUFBR0ksT0FDOUJyVyxLQUFLc1csV0FBb0MsSUFBdEJILEVBQVEsRUFBSSxHQUFLLEdBQ3BDMUYsRUFBRThGLHFCQUtKdE8sRUFBRW5DLFVBQVU0UCxHQUFHLFVBQVUsV0FDRHpOLEVBQUVqSSxNQUFNc1csWUFDVCxJQUNyQnJPLEVBQUUsa0JBQWtCdU8sU0FFcEJ2TyxFQUFFLGtCQUFrQndPLGFBS3RCeE8sRUFBRW5DLFVBQVU0UCxHQUFHLFFBQVMsbUJBQW1CLFNBQVVqRixHQUNwRCxJQUFNaUcsRUFBZXpPLEVBQUVqSSxNQUN2QmlJLEVBQUUsY0FBYzBPLE9BQU9DLFFBQVEsQ0FDOUJOLFVBQVdyTyxFQUFFeU8sRUFBUUcsS0FBSyxTQUFVQyxTQUFVQyxLQUM1QyxJQUFNLGlCQUNUdEcsRUFBRThGLG9CQTVDSixDQStDR1MiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiZXhwb3J0IGNsYXNzIEd1aWxkU2V0dGluZ3Mge1xuICAgIHByaXZhdGUgX2lkOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfaGFzRXh0ZXJuYWxDYWxlbmRhcjogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9jb250cm9sUm9sZTogc3RyaW5nO1xuICAgIHByaXZhdGUgX2Rpc0NhbENoYW5uZWw6IHN0cmluZztcbiAgICBwcml2YXRlIF9oYXNTaW1wbGVBbm5vdW5jZW1lbnRzOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2xhbmc6IHN0cmluZztcbiAgICBwcml2YXRlIF9wcmVmaXg6IHN0cmluZztcbiAgICBwcml2YXRlIF9pc1BhdHJvbkd1aWxkOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2lzRGV2R3VpbGQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfbWF4Q2FsZW5kYXJzOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfdXNpbmdUd2VsdmVIb3VyOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2lzQnJhbmRlZDogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKGlkOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5faWQgPSBpZDtcbiAgICB9XG5cbiAgICAvL0dldHRlci9zZXR0ZXIgcGFpcnNcbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZDtcbiAgICB9XG5cbiAgICBnZXQgaGFzRXh0ZXJuYWxDYWxlbmRhcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hhc0V4dGVybmFsQ2FsZW5kYXI7XG4gICAgfVxuXG4gICAgc2V0IGhhc0V4dGVybmFsQ2FsZW5kYXIoZXh0ZXJuYWwpIHtcbiAgICAgICAgdGhpcy5faGFzRXh0ZXJuYWxDYWxlbmRhciA9IGV4dGVybmFsO1xuICAgIH1cblxuICAgIGdldCBjb250cm9sUm9sZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbnRyb2xSb2xlO1xuICAgIH1cblxuICAgIHNldCBjb250cm9sUm9sZShyb2xlKSB7XG4gICAgICAgIHRoaXMuX2NvbnRyb2xSb2xlID0gcm9sZTtcbiAgICB9XG5cbiAgICBnZXQgZGlzQ2FsQ2hhbm5lbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc0NhbENoYW5uZWw7XG4gICAgfVxuXG4gICAgc2V0IGRpc0NhbENoYW5uZWwoY2hhbm5lbCkge1xuICAgICAgICB0aGlzLl9kaXNDYWxDaGFubmVsID0gY2hhbm5lbDtcbiAgICB9XG5cbiAgICBnZXQgaGFzU2ltcGxlQW5ub3VuY2VtZW50cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hhc1NpbXBsZUFubm91bmNlbWVudHM7XG4gICAgfVxuXG4gICAgc2V0IGhhc1NpbXBsZUFubm91bmNlbWVudHMoc2ltcGxlQW5ub3VuY2VtZW50cykge1xuICAgICAgICB0aGlzLl9oYXNTaW1wbGVBbm5vdW5jZW1lbnRzID0gc2ltcGxlQW5ub3VuY2VtZW50cztcbiAgICB9XG5cbiAgICBnZXQgbGFuZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xhbmc7XG4gICAgfVxuXG4gICAgc2V0IGxhbmcobGFuZykge1xuICAgICAgICB0aGlzLl9sYW5nID0gbGFuZztcbiAgICB9XG5cbiAgICBnZXQgcHJlZml4KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJlZml4O1xuICAgIH1cblxuICAgIHNldCBwcmVmaXgocHJlZml4KSB7XG4gICAgICAgIHRoaXMuX3ByZWZpeCA9IHByZWZpeDtcbiAgICB9XG5cbiAgICBnZXQgaXNQYXRyb25HdWlsZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzUGF0cm9uR3VpbGQ7XG4gICAgfVxuXG4gICAgc2V0IGlzUGF0cm9uR3VpbGQocGF0cm9uKSB7XG4gICAgICAgIHRoaXMuX2lzUGF0cm9uR3VpbGQgPSBwYXRyb247XG4gICAgfVxuXG4gICAgZ2V0IGlzRGV2R3VpbGQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0Rldkd1aWxkO1xuICAgIH1cblxuICAgIHNldCBpc0Rldkd1aWxkKGRldikge1xuICAgICAgICB0aGlzLl9pc0Rldkd1aWxkID0gZGV2O1xuICAgIH1cblxuICAgIGdldCBtYXhDYWxlbmRhcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tYXhDYWxlbmRhcnM7XG4gICAgfVxuXG4gICAgc2V0IG1heENhbGVuZGFycyhtYXgpIHtcbiAgICAgICAgdGhpcy5fbWF4Q2FsZW5kYXJzID0gbWF4O1xuICAgIH1cblxuICAgIGdldCB1c2luZ1R3ZWx2ZUhvdXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl91c2luZ1R3ZWx2ZUhvdXI7XG4gICAgfVxuXG4gICAgc2V0IHVzaW5nVHdlbHZlSG91cih1c2luZykge1xuICAgICAgICB0aGlzLl91c2luZ1R3ZWx2ZUhvdXIgPSB1c2luZztcbiAgICB9XG5cbiAgICBnZXQgaXNCcmFuZGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXNCcmFuZGVkO1xuICAgIH1cblxuICAgIHNldCBpc0JyYW5kZWQoYnJhbmRlZCkge1xuICAgICAgICB0aGlzLl9pc0JyYW5kZWQgPSBicmFuZGVkO1xuICAgIH1cblxuICAgIC8vSnNvbiBjb252ZXJzaW9uc1xuICAgIHRvSnNvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIFwiZ3VpbGRfaWRcIjogdGhpcy5pZCxcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfY2FsZW5kYXJcIjogdGhpcy5oYXNFeHRlcm5hbENhbGVuZGFyLFxuICAgICAgICAgICAgXCJjb250cm9sX3JvbGVcIjogdGhpcy5jb250cm9sUm9sZSxcbiAgICAgICAgICAgIFwiZGlzY2FsX2NoYW5uZWxcIjogdGhpcy5kaXNDYWxDaGFubmVsLFxuICAgICAgICAgICAgXCJzaW1wbGVfYW5ub3VuY2VtZW50XCI6IHRoaXMuaGFzU2ltcGxlQW5ub3VuY2VtZW50cyxcbiAgICAgICAgICAgIFwibGFuZ1wiOiB0aGlzLmxhbmcsXG4gICAgICAgICAgICBcInByZWZpeFwiOiB0aGlzLnByZWZpeCxcbiAgICAgICAgICAgIFwicGF0cm9uX2d1aWxkXCI6IHRoaXMuaXNQYXRyb25HdWlsZCxcbiAgICAgICAgICAgIFwiZGV2X2d1aWxkXCI6IHRoaXMuaXNEZXZHdWlsZCxcbiAgICAgICAgICAgIFwibWF4X2NhbGVuZGFyc1wiOiB0aGlzLm1heENhbGVuZGFycyxcbiAgICAgICAgICAgIFwidHdlbHZlX2hvdXJcIjogdGhpcy51c2luZ1R3ZWx2ZUhvdXIsXG4gICAgICAgICAgICBcImJyYW5kZWRcIjogdGhpcy5pc0JyYW5kZWRcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmcm9tSnNvbihqc29uOiBhbnkpIHtcbiAgICAgICAgdGhpcy5faWQgPSBqc29uLmd1aWxkX2lkO1xuICAgICAgICB0aGlzLmhhc0V4dGVybmFsQ2FsZW5kYXIgPSBqc29uLmV4dGVybmFsX2NhbGVuZGFyO1xuICAgICAgICB0aGlzLmNvbnRyb2xSb2xlID0ganNvbi5jb250cm9sX3JvbGU7XG4gICAgICAgIHRoaXMuZGlzQ2FsQ2hhbm5lbCA9IGpzb24uZGlzY2FsX2NoYW5uZWw7XG4gICAgICAgIHRoaXMuaGFzU2ltcGxlQW5ub3VuY2VtZW50cyA9IGpzb24uc2ltcGxlX2Fubm91bmNlbWVudDtcbiAgICAgICAgdGhpcy5sYW5nID0ganNvbi5sYW5nO1xuICAgICAgICB0aGlzLnByZWZpeCA9IGpzb24ucHJlZml4O1xuICAgICAgICB0aGlzLmlzUGF0cm9uR3VpbGQgPSBqc29uLnBhdHJvbl9ndWlsZDtcbiAgICAgICAgdGhpcy5pc0Rldkd1aWxkID0ganNvbi5kZXZfZ3VpbGQ7XG4gICAgICAgIHRoaXMubWF4Q2FsZW5kYXJzID0ganNvbi5tYXhfY2FsZW5kYXJzO1xuICAgICAgICB0aGlzLnVzaW5nVHdlbHZlSG91ciA9IGpzb24udHdlbHZlX2hvdXI7XG4gICAgICAgIHRoaXMuaXNCcmFuZGVkID0ganNvbi5icmFuZGVkO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn0iLCJleHBvcnQgZW51bSBUYXNrVHlwZSB7XG4gICAgUlNWUF9HRVQsIFJTVlBfVVBEQVRFLFxuXG5cdEdVSUxEX1NFVFRJTkdTX0dFVCwgR1VJTERfU0VUVElOR1NfVVBEQVRFLFxuXG5cdFdFQl9HVUlMRF9HRVQsIFdFQl9HVUlMRF9VUERBVEUsXG5cblx0Q0FMRU5EQVJfR0VULCBDQUxFTkRBUl9MSVNULCBDQUxFTkRBUl9VUERBVEUsIENBTEVOREFSX0RFTEVURSxcblxuXHRBTk5PVU5DRU1FTlRfR0VULCBBTk5PVU5DRU1FTlRfTElTVCwgQU5OT1VOQ0VNRU5UX0NSRUFURSxcblx0QU5OT1VOQ0VNRU5UX1VQREFURSwgQU5OT1VOQ0VNRU5UX0RFTEVURSxcblxuXHRFVkVOVF9MSVNUX0RBVEUsIEVWRU5UX0xJU1RfTU9OVEgsIEVWRU5UX0xJU1RfUkFOR0UsXG5cdEVWRU5UX0NSRUFURSwgRVZFTlRfREVMRVRFLCBFVkVOVF9HRVQsIEVWRU5UX1VQREFURVxufSIsImV4cG9ydCBjbGFzcyBXZWJSb2xlIHtcbiAgICBwcml2YXRlIF9pZDogbnVtYmVyO1xuICAgIHByaXZhdGUgX25hbWU6IHN0cmluZztcbiAgICBwcml2YXRlIF9pc01hbmFnZWQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfaXNDb250cm9sUm9sZTogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9pc0V2ZXJ5b25lOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgLy9HZXR0ZXIvc2V0dGVyIHBhaXJzXG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfVxuXG4gICAgc2V0IGlkKGlkKSB7XG4gICAgICAgIHRoaXMuX2lkID0gaWQ7XG4gICAgfVxuXG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgIH1cblxuICAgIHNldCBuYW1lKG5hbWUpIHtcbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgfVxuXG4gICAgZ2V0IGlzTWFuYWdlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzTWFuYWdlZDtcbiAgICB9XG5cbiAgICBzZXQgaXNNYW5hZ2VkKG1hbmFnZWQpIHtcbiAgICAgICAgdGhpcy5faXNNYW5hZ2VkID0gbWFuYWdlZDtcbiAgICB9XG5cbiAgICBnZXQgaXNDb250cm9sUm9sZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzQ29udHJvbFJvbGU7XG4gICAgfVxuXG4gICAgc2V0IGlzQ29udHJvbFJvbGUoY29udHJvbFJvbGUpIHtcbiAgICAgICAgdGhpcy5faXNDb250cm9sUm9sZSA9IGNvbnRyb2xSb2xlO1xuICAgIH1cblxuICAgIGdldCBpc0V2ZXJ5b25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXNFdmVyeW9uZTtcbiAgICB9XG5cbiAgICBzZXQgaXNFdmVyeW9uZShldmVyeW9uZSkge1xuICAgICAgICB0aGlzLl9pc0V2ZXJ5b25lID0gZXZlcnlvbmU7XG4gICAgfVxuXG4gICAgLy9Kc29uIGNvbnZlcnNpb25zXG4gICAgdG9Kc29uKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgXCJpZFwiOiB0aGlzLmlkLFxuICAgICAgICAgICAgXCJuYW1lXCI6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIFwibWFuYWdlZFwiOiB0aGlzLmlzTWFuYWdlZCxcbiAgICAgICAgICAgIFwiY29udHJvbF9yb2xlXCI6IHRoaXMuaXNDb250cm9sUm9sZSxcbiAgICAgICAgICAgIFwiZXZlcnlvbmVcIjogdGhpcy5pc0V2ZXJ5b25lXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnJvbUpzb24oanNvbjogYW55KSB7XG4gICAgICAgIHRoaXMuaWQgPSBqc29uLmlkO1xuICAgICAgICB0aGlzLm5hbWUgPSBqc29uLm5hbWU7XG4gICAgICAgIHRoaXMuaXNNYW5hZ2VkID0ganNvbi5tYW5hZ2VkO1xuICAgICAgICB0aGlzLmlzQ29udHJvbFJvbGUgPSBqc29uLmNvbnRyb2xfcm9sZTtcbiAgICAgICAgdGhpcy5pc0V2ZXJ5b25lID0ganNvbi5ldmVyeW9uZTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59IiwiZXhwb3J0IGNsYXNzIFdlYkNoYW5uZWwge1xuICAgIHByaXZhdGUgX2lkOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfbmFtZTogc3RyaW5nO1xuICAgIHByaXZhdGUgX2lzRGlzQ2FsQ2hhbm5lbDogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgIH1cblxuICAgIC8vR2V0dGVyL3NldHRlciBwYWlyc1xuXG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfVxuXG4gICAgc2V0IGlkKGlkKSB7XG4gICAgICAgIHRoaXMuX2lkID0gaWQ7XG4gICAgfVxuXG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgIH1cblxuICAgIHNldCBuYW1lKG5hbWUpIHtcbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgfVxuXG4gICAgZ2V0IGlzRGlzQ2FsQ2hhbm5lbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzRGlzQ2FsQ2hhbm5lbDtcbiAgICB9XG5cbiAgICBzZXQgaXNEaXNDYWxDaGFubmVsKGlzRGlzQ2FsQ2hhbm5lbCkge1xuICAgICAgICB0aGlzLl9pc0Rpc0NhbENoYW5uZWwgPSBpc0Rpc0NhbENoYW5uZWw7XG4gICAgfVxuXG4gICAgLy9Kc29uIGNvbnZlcnNpb25zXG4gICAgdG9Kc29uKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgXCJpZFwiOiB0aGlzLmlkLFxuICAgICAgICAgICAgXCJuYW1lXCI6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIFwiZGlzY2FsX2NoYW5uZWxcIjogdGhpcy5pc0Rpc0NhbENoYW5uZWxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmcm9tSnNvbihqc29uOiBhbnkpIHtcbiAgICAgICAgdGhpcy5pZCA9IGpzb24uaWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IGpzb24ubmFtZTtcbiAgICAgICAgdGhpcy5pc0Rpc0NhbENoYW5uZWwgPSBqc29uLmRpc2NhbF9jaGFubmVsO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn0iLCJpbXBvcnQge0d1aWxkU2V0dGluZ3N9IGZyb20gXCJAL29iamVjdHMvZ3VpbGQvR3VpbGRTZXR0aW5nc1wiO1xuaW1wb3J0IHtXZWJSb2xlfSBmcm9tIFwiQC9vYmplY3RzL2d1aWxkL1dlYlJvbGVcIjtcbmltcG9ydCB7V2ViQ2hhbm5lbH0gZnJvbSBcIkAvb2JqZWN0cy9ndWlsZC9XZWJDaGFubmVsXCI7XG5pbXBvcnQge0Fubm91bmNlbWVudH0gZnJvbSBcIkAvb2JqZWN0cy9hbm5vdW5jZW1lbnQvQW5ub3VuY2VtZW50XCI7XG5pbXBvcnQge1dlYkNhbGVuZGFyfSBmcm9tIFwiQC9vYmplY3RzL2NhbGVuZGFyL1dlYkNhbGVuZGFyXCI7XG5cbmV4cG9ydCBjbGFzcyBXZWJHdWlsZCB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfaWQ6IG51bWJlcjtcbiAgICBwcml2YXRlIF9uYW1lOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfaWNvbjogc3RyaW5nO1xuXG4gICAgcHJpdmF0ZSBfc2V0dGluZ3M6IEd1aWxkU2V0dGluZ3M7XG4gICAgcHJpdmF0ZSBfYm90Tmljazogc3RyaW5nO1xuXG4gICAgcHJpdmF0ZSBfY2FuTWFuYWdlU2VydmVyOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2hhc0Rpc0NhbFJvbGU6IGJvb2xlYW47XG5cbiAgICBwcml2YXRlIHJlYWRvbmx5IF9yb2xlczogV2ViUm9sZVtdO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgX2NoYW5uZWxzOiBXZWJDaGFubmVsW107XG4gICAgcHJpdmF0ZSByZWFkb25seSBfYW5ub3VuY2VtZW50czogQW5ub3VuY2VtZW50W107XG5cbiAgICBwcml2YXRlIF9jYWxlbmRhcjogV2ViQ2FsZW5kYXI7XG5cbiAgICBjb25zdHJ1Y3RvcihpZDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuX2lkID0gaWQ7XG5cbiAgICAgICAgdGhpcy5fcm9sZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fY2hhbm5lbHMgPSBbXTtcbiAgICAgICAgdGhpcy5fYW5ub3VuY2VtZW50cyA9IFtdO1xuICAgIH1cblxuICAgIC8vR2V0dGVyL1NldHRlciBwYWlyc1xuICAgIGdldCBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkO1xuICAgIH1cblxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9XG5cbiAgICBzZXQgbmFtZShuYW1lKSB7XG4gICAgICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIH1cblxuICAgIGdldCBpY29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faWNvbjtcbiAgICB9XG5cbiAgICBzZXQgaWNvbihpY29uVXJsKSB7XG4gICAgICAgIHRoaXMuX2ljb24gPSBpY29uVXJsO1xuICAgIH1cblxuICAgIGdldCBzZXR0aW5ncygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NldHRpbmdzO1xuICAgIH1cblxuICAgIHNldCBzZXR0aW5ncyhzZXR0aW5ncykge1xuICAgICAgICB0aGlzLl9zZXR0aW5ncyA9IHNldHRpbmdzO1xuICAgIH1cblxuICAgIGdldCBib3ROaWNrKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYm90TmljaztcbiAgICB9XG5cbiAgICBzZXQgYm90TmljayhuaWNrKSB7XG4gICAgICAgIHRoaXMuX2JvdE5pY2sgPSBuaWNrO1xuICAgIH1cblxuICAgIGdldCBjYW5NYW5hZ2VTZXJ2ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jYW5NYW5hZ2VTZXJ2ZXI7XG4gICAgfVxuXG4gICAgc2V0IGNhbk1hbmFnZVNlcnZlcihtYW5hZ2UpIHtcbiAgICAgICAgdGhpcy5fY2FuTWFuYWdlU2VydmVyID0gbWFuYWdlO1xuICAgIH1cblxuICAgIGdldCBoYXNEaXNDYWxSb2xlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faGFzRGlzQ2FsUm9sZTtcbiAgICB9XG5cbiAgICBzZXQgaGFzRGlzQ2FsUm9sZShoYXNSb2xlKSB7XG4gICAgICAgIHRoaXMuX2hhc0Rpc0NhbFJvbGUgPSBoYXNSb2xlO1xuICAgIH1cblxuICAgIGdldCByb2xlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JvbGVzO1xuICAgIH1cblxuICAgIGdldCBjaGFubmVscygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NoYW5uZWxzO1xuICAgIH1cblxuICAgIGdldCBhbm5vdW5jZW1lbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYW5ub3VuY2VtZW50cztcbiAgICB9XG5cbiAgICBnZXQgY2FsZW5kYXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jYWxlbmRhcjtcbiAgICB9XG5cbiAgICBzZXQgY2FsZW5kYXIoY2FsZW5kYXIpIHtcbiAgICAgICAgdGhpcy5fY2FsZW5kYXIgPSBjYWxlbmRhcjtcbiAgICB9XG5cbiAgICAvL0pzb24gY29udmVyc2lvbnNcbiAgICB0b0pzb24oKSB7XG4gICAgICAgIGxldCBqc29uOiBhbnkgPSB7XG4gICAgICAgICAgICBcImlkXCI6IHRoaXMuaWQsXG4gICAgICAgICAgICBcIm5hbWVcIjogdGhpcy5uYW1lLFxuICAgICAgICAgICAgXCJzZXR0aW5nc1wiOiB0aGlzLnNldHRpbmdzLnRvSnNvbigpLFxuICAgICAgICAgICAgXCJtYW5hZ2Vfc2VydmVyXCI6IHRoaXMuY2FuTWFuYWdlU2VydmVyLFxuICAgICAgICAgICAgXCJkaXNjYWxfcm9sZVwiOiB0aGlzLmhhc0Rpc0NhbFJvbGUsXG4gICAgICAgICAgICBcImNhbGVuZGFyXCI6IHRoaXMuY2FsZW5kYXIudG9Kc29uKClcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMuaWNvbiAhPSBudWxsKSB7XG4gICAgICAgICAgICBqc29uLmljb24gPSB0aGlzLmljb247XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYm90TmljayAhPSBudWxsICYmIHRoaXMuYm90TmljayAhPT0gXCJcIikge1xuICAgICAgICAgICAganNvbi5ib3RfbmljayA9IHRoaXMuYm90TmljaztcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBqUm9sZXMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJvbGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgcm9sZSA9IHRoaXMucm9sZXNbaV07XG4gICAgICAgICAgICBqUm9sZXMucHVzaChyb2xlLnRvSnNvbigpKTtcbiAgICAgICAgfVxuICAgICAgICBqc29uLnJvbGVzID0galJvbGVzO1xuXG4gICAgICAgIGxldCBqQ2hhbm5lbHMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNoYW5uZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgY2hhbm5lbCA9IHRoaXMuY2hhbm5lbHNbaV07XG4gICAgICAgICAgICBqQ2hhbm5lbHMucHVzaChjaGFubmVsLnRvSnNvbigpKTtcbiAgICAgICAgfVxuICAgICAgICBqc29uLmNoYW5uZWxzID0gakNoYW5uZWxzO1xuXG4gICAgICAgIGxldCBqQW5ub3VuY2VtZW50cyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYW5ub3VuY2VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IGFubm91bmNlbWVudCA9IHRoaXMuYW5ub3VuY2VtZW50c1tpXTtcbiAgICAgICAgICAgIGpBbm5vdW5jZW1lbnRzLnB1c2goYW5ub3VuY2VtZW50LnRvSnNvbigpKTtcbiAgICAgICAgfVxuICAgICAgICBqc29uLmFubm91bmNlbWVudHMgPSBqQW5ub3VuY2VtZW50cztcblxuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG5cbiAgICBmcm9tSnNvbihqc29uOiBhbnkpIHtcbiAgICAgICAgLy9XZSBkb24ndCBuZWVkIHRvIHNldCBJRCwgdGhpcyBpcyBhbHJlYWR5IGRvbmUuLi5cbiAgICAgICAgdGhpcy5uYW1lID0ganNvbi5uYW1lO1xuXG4gICAgICAgIGlmIChqc29uLmhhc093blByb3BlcnR5KFwiaWNvbl91cmxcIikpIHtcbiAgICAgICAgICAgIHRoaXMuaWNvbiA9IGpzb24uaWNvbl91cmw7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldHRpbmdzID0gbmV3IEd1aWxkU2V0dGluZ3ModGhpcy5pZCkuZnJvbUpzb24oanNvbi5zZXR0aW5ncyk7XG5cbiAgICAgICAgaWYgKGpzb24uaGFzT3duUHJvcGVydHkoXCJib3Rfbmlja1wiKSkge1xuICAgICAgICAgICAgdGhpcy5ib3ROaWNrID0ganNvbi5ib3RfbmljaztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY2FuTWFuYWdlU2VydmVyID0ganNvbi5tYW5hZ2Vfc2VydmVyO1xuICAgICAgICB0aGlzLmhhc0Rpc0NhbFJvbGUgPSBqc29uLmRpc2NhbF9yb2xlO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwganNvbi5yb2xlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5yb2xlcy5wdXNoKG5ldyBXZWJSb2xlKCkuZnJvbUpzb24oanNvbi5yb2xlc1tpXSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBqc29uLmNoYW5uZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB0aGlzLmNoYW5uZWxzLnB1c2gobmV3IFdlYkNoYW5uZWwoKS5mcm9tSnNvbihqc29uLmNoYW5uZWxzW2ldKSk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGpzb24uYW5ub3VuY2VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5yb2xlcy5wdXNoKG5ldyBXZWJSb2xlKCkuZnJvbUpzb24oanNvbi5yb2xlc1tpXSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufSIsImV4cG9ydCBjbGFzcyBTbmFja2JhciB7XG4gICAgcHVibGljIHN0YXRpYyBzaG93U25hY2tiYXIodGV4dFRvRGlzcGxheTogc3RyaW5nKSB7XG4gICAgICAgIC8vIEdldCB0aGUgc25hY2tiYXIgRElWXG4gICAgICAgIGxldCB4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzbmFja2JhclwiKSE7XG5cbiAgICAgICAgaWYgKHggPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgeC5pbm5lckhUTUwgPSB0ZXh0VG9EaXNwbGF5O1xuXG4gICAgICAgIC8vIEFkZCB0aGUgXCJzaG93XCIgY2xhc3MgdG8gRElWXG4gICAgICAgIHguY2xhc3NOYW1lID0gXCJzaG93XCI7XG5cbiAgICAgICAgLy8gQWZ0ZXIgMyBzZWNvbmRzLCByZW1vdmUgdGhlIHNob3cgY2xhc3MgZnJvbSBESVZcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB4LmNsYXNzTmFtZSA9IHguY2xhc3NOYW1lLnJlcGxhY2UoXCJzaG93XCIsIFwiXCIpO1xuICAgICAgICB9LCAzMDAwKTtcbiAgICB9XG59IiwiZXhwb3J0IGNsYXNzIEVsZW1lbnRVdGlsIHtcblx0c3RhdGljIHNob3dMb2FkZXIoKSB7XG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImxvYWRlclwiKVswXS5zZXRBdHRyaWJ1dGUoXCJoaWRkZW5cIiwgXCJzaG93XCIpO1xuXHR9XG5cblx0c3RhdGljIGhpZGVMb2FkZXIoKSB7XG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImxvYWRlclwiKVswXS5zZXRBdHRyaWJ1dGUoXCJoaWRkZW5cIiwgXCJoaWRkZW5cIik7XG5cdH1cblxuXHRzdGF0aWMgc2hvd0NhbGVuZGFyQ29udGFpbmVyKCkge1xuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FsZW5kYXItY29udGFpbmVyXCIpIS5oaWRkZW4gPSBmYWxzZTtcblx0fVxuXG5cdHN0YXRpYyBoaWRlQ2FsZW5kYXJDb250YWluZXIoKSB7XG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYWxlbmRhci1jb250YWluZXJcIikhLmhpZGRlbiA9IHRydWU7XG5cdH1cblxuXHRzdGF0aWMgc2hvd0V2ZW50c0NvbnRhaW5lcigpIHtcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImV2ZW50cy1jb250YWluZXJcIikhLmhpZGRlbiA9IGZhbHNlO1xuXHR9XG5cblx0c3RhdGljIGhpZGVFdmVudHNDb250YWluZXIoKSB7XG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJldmVudHMtY29udGFpbmVyXCIpIS5oaWRkZW4gPSB0cnVlO1xuXHR9XG59XG4iLCJleHBvcnQgZW51bSBFdmVudENvbG9yIHtcbiAgICBNRUxST1NFLFxuICAgIFJJUFRJREUsXG4gICAgTUFVVkUsXG4gICAgVEFOR0VSSU5FLFxuICAgIERBTkRFTElPTixcbiAgICBNQUNfQU5EX0NIRUVTRSxcbiAgICBUVVJRVU9JU0UsXG4gICAgTUVSQ1VSWSxcbiAgICBCTFVFLFxuICAgIEdSRUVOLFxuICAgIFJFRCxcbiAgICBOT05FXG59IiwiZXhwb3J0IGVudW0gRXZlbnRGcmVxdWVuY3kge1xuICAgIERBSUxZLFxuICAgIFdFRUtMWSxcbiAgICBNT05USExZLFxuICAgIFlFQVJMWVxufSIsImltcG9ydCB7VGFza1R5cGV9IGZyb20gXCJAL2VudW1zL1Rhc2tUeXBlXCI7XG5cbmV4cG9ydCBjbGFzcyBOZXR3b3JrQ2FsbFN0YXR1cyB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfc3VjY2VzczogYm9vbGVhbjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF90eXBlOiBUYXNrVHlwZTtcbiAgICBwcml2YXRlIF9jb2RlOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfbWVzc2FnZTogc3RyaW5nO1xuXG4gICAgcHJpdmF0ZSBfYm9keTogYW55O1xuXG4gICAgY29uc3RydWN0b3Ioc3VjY2VzczogYm9vbGVhbiwgdHlwZTogVGFza1R5cGUpIHtcbiAgICAgICAgdGhpcy5fc3VjY2VzcyA9IHN1Y2Nlc3M7XG4gICAgICAgIHRoaXMuX3R5cGUgPSB0eXBlO1xuICAgIH1cblxuICAgIC8vR2V0dGVyL3NldHRlciBwYWlyc1xuICAgIGdldCBpc1N1Y2Nlc3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdWNjZXNzO1xuICAgIH1cblxuICAgIGdldCB0eXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdHlwZTtcbiAgICB9XG5cbiAgICBnZXQgY29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvZGU7XG4gICAgfVxuXG4gICAgc2V0IGNvZGUoY29kZSkge1xuICAgICAgICB0aGlzLl9jb2RlID0gY29kZTtcbiAgICB9XG5cbiAgICBnZXQgbWVzc2FnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX21lc3NhZ2U7XG4gICAgfVxuXG4gICAgc2V0IG1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICB0aGlzLl9tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB9XG5cbiAgICBnZXQgYm9keSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2JvZHk7XG4gICAgfVxuXG4gICAgc2V0IGJvZHkoYm9keSkge1xuICAgICAgICB0aGlzLl9ib2R5ID0gYm9keTtcbiAgICB9XG59IiwiaW1wb3J0IHtBc3luY1Rhc2t9IGZyb20gXCJAL29iamVjdHMvdGFzay9Bc3luY1Rhc2tcIjtcbmltcG9ydCB7VGFza0NhbGxiYWNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svVGFza0NhbGxiYWNrXCI7XG5pbXBvcnQge05ldHdvcmtDYWxsU3RhdHVzfSBmcm9tIFwiQC9vYmplY3RzL25ldHdvcmsvTmV0d29ya0NhbGxTdGF0dXNcIjtcbmltcG9ydCB7VGFza1R5cGV9IGZyb20gXCJAL2VudW1zL1Rhc2tUeXBlXCI7XG5pbXBvcnQganFYSFIgPSBKUXVlcnkuanFYSFI7XG5cbmV4cG9ydCBjbGFzcyBXZWJHdWlsZEdldFJlcXVlc3QgaW1wbGVtZW50cyBBc3luY1Rhc2sge1xuXHRwcml2YXRlIHJlYWRvbmx5IGd1aWxkSWQ6IG51bWJlcjtcblx0cHJpdmF0ZSByZWFkb25seSB1c2VySWQ6IG51bWJlcjtcblxuXHRyZWFkb25seSBjYWxsYmFjazogVGFza0NhbGxiYWNrO1xuXG5cdGFwaUtleTogc3RyaW5nO1xuXHRhcGlVcmw6IHN0cmluZztcblxuXG5cdGNvbnN0cnVjdG9yKGd1aWxkSWQ6IG51bWJlciwgdXNlcklkOiBudW1iZXIsIGNhbGxiYWNrOiBUYXNrQ2FsbGJhY2spIHtcblx0XHR0aGlzLmd1aWxkSWQgPSBndWlsZElkO1xuXHRcdHRoaXMudXNlcklkID0gdXNlcklkO1xuXHRcdHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcblx0fVxuXG5cdHByb3ZpZGVBcGlEZXRhaWxzKGFwaUtleTogc3RyaW5nLCBhcGlVcmw6IHN0cmluZyk6IHZvaWQge1xuXHRcdHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuXHRcdHRoaXMuYXBpVXJsID0gYXBpVXJsO1xuXHR9XG5cblx0ZXhlY3V0ZSgpOiB2b2lkIHtcblx0XHRsZXQgYm9keVJhdyA9IHtcblx0XHRcdFwiZ3VpbGRfaWRcIjogdGhpcy5ndWlsZElkLFxuXHRcdFx0XCJ1c2VyX2lkXCI6IHRoaXMudXNlcklkXG5cdFx0fTtcblxuXHRcdCQuYWpheCh7XG5cdFx0XHR1cmw6IHRoaXMuYXBpVXJsICsgXCIvdjIvZ3VpbGQvZ2V0XCIsXG5cdFx0XHRoZWFkZXJzOiB7XG5cdFx0XHRcdFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuXHRcdFx0XHRcIkF1dGhvcml6YXRpb25cIjogdGhpcy5hcGlLZXlcblx0XHRcdH0sXG5cdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwianNvblwiLFxuXHRcdFx0ZGF0YTogSlNPTi5zdHJpbmdpZnkoYm9keVJhdyksXG5cdFx0XHRzdWNjZXNzOiBmdW5jdGlvbiAoanNvbjogYW55KSB7XG5cdFx0XHRcdGxldCBzdGF0dXMgPSBuZXcgTmV0d29ya0NhbGxTdGF0dXModHJ1ZSwgVGFza1R5cGUuV0VCX0dVSUxEX0dFVCk7XG5cdFx0XHRcdHN0YXR1cy5jb2RlID0gMjAwO1xuXHRcdFx0XHRzdGF0dXMuYm9keSA9IGpzb247XG5cdFx0XHRcdHN0YXR1cy5tZXNzYWdlID0gXCJTdWNjZXNzXCI7XG5cblx0XHRcdFx0dGhpcy5vbkNvbXBsZXRlKHN0YXR1cyk7XG5cblx0XHRcdH0uYmluZCh0aGlzKSxcblx0XHRcdGVycm9yOiBmdW5jdGlvbiAoanFYSFI6IGpxWEhSKSB7XG5cdFx0XHRcdGxldCBzdGF0dXMgPSBuZXcgTmV0d29ya0NhbGxTdGF0dXMoZmFsc2UsIFRhc2tUeXBlLldFQl9HVUlMRF9HRVQpO1xuXHRcdFx0XHRzdGF0dXMuY29kZSA9IGpxWEhSLnN0YXR1cztcblx0XHRcdFx0c3RhdHVzLmJvZHkgPSBqcVhIUi5yZXNwb25zZUpTT047XG5cdFx0XHRcdHN0YXR1cy5tZXNzYWdlID0ganFYSFIucmVzcG9uc2VKU09OLm1lc3NhZ2U7XG5cblx0XHRcdFx0dGhpcy5vbkNvbXBsZXRlKHN0YXR1cyk7XG5cdFx0XHR9LmJpbmQodGhpcylcblx0XHR9KTtcblx0fVxuXG5cdG9uQ29tcGxldGUoc3RhdHVzOiBOZXR3b3JrQ2FsbFN0YXR1cyk6IHZvaWQge1xuXHRcdHRoaXMuY2FsbGJhY2sub25DYWxsYmFjayhzdGF0dXMpO1xuXHR9XG59IiwiaW1wb3J0IHtBc3luY1Rhc2t9IGZyb20gXCJAL29iamVjdHMvdGFzay9Bc3luY1Rhc2tcIjtcbmltcG9ydCB7VGFza0NhbGxiYWNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svVGFza0NhbGxiYWNrXCI7XG5pbXBvcnQge05ldHdvcmtDYWxsU3RhdHVzfSBmcm9tIFwiQC9vYmplY3RzL25ldHdvcmsvTmV0d29ya0NhbGxTdGF0dXNcIjtcbmltcG9ydCB7VGFza1R5cGV9IGZyb20gXCJAL2VudW1zL1Rhc2tUeXBlXCI7XG5pbXBvcnQganFYSFIgPSBKUXVlcnkuanFYSFI7XG5cbmV4cG9ydCBjbGFzcyBHdWlsZFNldHRpbmdzVXBkYXRlUmVxdWVzdCBpbXBsZW1lbnRzIEFzeW5jVGFzayB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBndWlsZElkOiBudW1iZXI7XG5cbiAgICByZWFkb25seSBjYWxsYmFjazogVGFza0NhbGxiYWNrO1xuXG4gICAgYXBpS2V5OiBzdHJpbmc7XG4gICAgYXBpVXJsOiBzdHJpbmc7XG5cbiAgICBwcml2YXRlIF9jb250cm9sUm9sZTogc3RyaW5nO1xuICAgIHByaXZhdGUgX2Rpc2NhbENoYW5uZWw6IHN0cmluZztcbiAgICBwcml2YXRlIF9zaW1wbGVBbm5vdW5jZW1lbnRzOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2xhbmc6IHN0cmluZztcbiAgICBwcml2YXRlIF9wcmVmaXg6IHN0cmluZztcblxuICAgIC8vQm9vbGVhbnMgZm9yIGNvbmZpcm1pbmcgd2hhdCBnZXRzIHNlbnQgdG8gQVBJLi4uXG4gICAgcHJpdmF0ZSB1cGRhdGVTaW1wbGVBbm5vdW5jZW1lbnRzOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IoZ3VpbGRJZDogbnVtYmVyLCBjYWxsYmFjazogVGFza0NhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuZ3VpbGRJZCA9IGd1aWxkSWQ7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICBwcm92aWRlQXBpRGV0YWlscyhhcGlLZXk6IHN0cmluZywgYXBpVXJsOiBzdHJpbmcpOiB2b2lkIHtcblx0XHR0aGlzLmFwaUtleSA9IGFwaUtleTtcblx0XHR0aGlzLmFwaVVybCA9IGFwaVVybDtcblx0fVxuXG4gICAgLy9TZXR0ZXJzLi4uXG4gICAgc2V0IGNvbnRyb2xSb2xlKHJvbGU6IHN0cmluZykge1xuICAgICAgICB0aGlzLl9jb250cm9sUm9sZSA9IHJvbGU7XG4gICAgfVxuXG4gICAgc2V0IGRpc2NhbENoYW5uZWwoY2hhbm5lbDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX2Rpc2NhbENoYW5uZWwgPSBjaGFubmVsO1xuICAgIH1cblxuICAgIHNldCBzaW1wbGVBbm5vdW5jZW1lbnRzKHVzZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLl9zaW1wbGVBbm5vdW5jZW1lbnRzID0gdXNlO1xuICAgIH1cblxuICAgIHNldCBsYW5nKGxhbmc6IHN0cmluZykge1xuICAgICAgICB0aGlzLl9sYW5nID0gbGFuZztcbiAgICB9XG5cbiAgICBzZXQgcHJlZml4KHByZWZpeDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX3ByZWZpeCA9IHByZWZpeDtcbiAgICB9XG5cblxuICAgIGV4ZWN1dGUoKTogdm9pZCB7XG5cdFx0bGV0IGJvZHlSYXc6IGFueSA9IHtcblx0XHRcdFwiZ3VpbGRfaWRcIjogdGhpcy5ndWlsZElkLFxuXHRcdH07XG5cblx0XHRpZiAodGhpcy5jb250cm9sUm9sZS5sZW5ndGggPiAwKSB7XG5cdFx0XHRib2R5UmF3LmNvbnRyb2xfcm9sZSA9IHRoaXMuY29udHJvbFJvbGU7XG5cdFx0fVxuXHRcdGlmICh0aGlzLmRpc2NhbENoYW5uZWwubGVuZ3RoID4gMCkge1xuXHRcdFx0Ym9keVJhdy5kaXNjYWxfY2hhbm5lbCA9IHRoaXMuZGlzY2FsQ2hhbm5lbDtcblx0XHR9XG5cdFx0aWYgKHRoaXMudXBkYXRlU2ltcGxlQW5ub3VuY2VtZW50cykge1xuXHRcdFx0Ym9keVJhdy5zaW1wbGVfYW5ub3VuY2VtZW50cyA9IHRoaXMuc2ltcGxlQW5ub3VuY2VtZW50cztcblx0XHR9XG5cdFx0aWYgKHRoaXMubGFuZy5sZW5ndGggPiAwKSB7XG5cdFx0XHRib2R5UmF3LmxhbmcgPSB0aGlzLmxhbmc7XG5cdFx0fVxuXHRcdGlmICh0aGlzLnByZWZpeC5sZW5ndGggPiAwKSB7XG5cdFx0XHRib2R5UmF3LnByZWZpeCA9IHRoaXMucHJlZml4O1xuXHRcdH1cblxuXG5cdFx0JC5hamF4KHtcblx0XHRcdHVybDogdGhpcy5hcGlVcmwgKyBcIi92Mi9ndWlsZC9zZXR0aW5ncy91cGRhdGVcIixcblx0XHRcdGhlYWRlcnM6IHtcblx0XHRcdFx0XCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG5cdFx0XHRcdFwiQXV0aG9yaXphdGlvblwiOiB0aGlzLmFwaUtleVxuXHRcdFx0fSxcblx0XHRcdG1ldGhvZDogXCJQT1NUXCIsXG5cdFx0XHRkYXRhVHlwZTogXCJqc29uXCIsXG5cdFx0XHRkYXRhOiBKU09OLnN0cmluZ2lmeShib2R5UmF3KSxcblx0XHRcdHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc29uOiBhbnkpIHtcblx0XHRcdFx0bGV0IHN0YXR1cyA9IG5ldyBOZXR3b3JrQ2FsbFN0YXR1cyh0cnVlLCBUYXNrVHlwZS5HVUlMRF9TRVRUSU5HU19VUERBVEUpO1xuXHRcdFx0XHRzdGF0dXMuY29kZSA9IDIwMDtcblx0XHRcdFx0c3RhdHVzLmJvZHkgPSBqc29uO1xuXHRcdFx0XHRzdGF0dXMubWVzc2FnZSA9IGpzb24ubWVzc2FnZTtcblxuXHRcdFx0XHR0aGlzLm9uQ29tcGxldGUoc3RhdHVzKTtcblxuICAgICAgICAgICAgfS5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChqcVhIUjoganFYSFIpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gbmV3IE5ldHdvcmtDYWxsU3RhdHVzKGZhbHNlLCBUYXNrVHlwZS5HVUlMRF9TRVRUSU5HU19VUERBVEUpO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5jb2RlID0ganFYSFIuc3RhdHVzO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5ib2R5ID0ganFYSFIucmVzcG9uc2VKU09OO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5tZXNzYWdlID0ganFYSFIucmVzcG9uc2VKU09OLm1lc3NhZ2U7XG5cbiAgICAgICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoc3RhdHVzKTtcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkNvbXBsZXRlKHN0YXR1czogTmV0d29ya0NhbGxTdGF0dXMpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jYWxsYmFjay5vbkNhbGxiYWNrKHN0YXR1cyk7XG4gICAgfVxufSIsImltcG9ydCB7QXN5bmNUYXNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svQXN5bmNUYXNrXCI7XG5pbXBvcnQge1Rhc2tDYWxsYmFja30gZnJvbSBcIkAvb2JqZWN0cy90YXNrL1Rhc2tDYWxsYmFja1wiO1xuaW1wb3J0IHtOZXR3b3JrQ2FsbFN0YXR1c30gZnJvbSBcIkAvb2JqZWN0cy9uZXR3b3JrL05ldHdvcmtDYWxsU3RhdHVzXCI7XG5pbXBvcnQge1Rhc2tUeXBlfSBmcm9tIFwiQC9lbnVtcy9UYXNrVHlwZVwiO1xuaW1wb3J0IGpxWEhSID0gSlF1ZXJ5LmpxWEhSO1xuXG5leHBvcnQgY2xhc3MgV2ViR3VpbGRVcGRhdGVSZXF1ZXN0IGltcGxlbWVudHMgQXN5bmNUYXNrIHtcblx0cHJpdmF0ZSByZWFkb25seSBndWlsZElkOiBudW1iZXI7XG5cblx0cmVhZG9ubHkgY2FsbGJhY2s6IFRhc2tDYWxsYmFjaztcblxuXHRhcGlLZXk6IHN0cmluZztcblx0YXBpVXJsOiBzdHJpbmc7XG5cblx0cHJpdmF0ZSBfYm90Tmljazogc3RyaW5nO1xuXG5cblx0Y29uc3RydWN0b3IoZ3VpbGRJZDogbnVtYmVyLCBjYWxsYmFjazogVGFza0NhbGxiYWNrKSB7XG5cdFx0dGhpcy5ndWlsZElkID0gZ3VpbGRJZDtcblx0XHR0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG5cdH1cblxuXHRwcm92aWRlQXBpRGV0YWlscyhhcGlLZXk6IHN0cmluZywgYXBpVXJsOiBzdHJpbmcpOiB2b2lkIHtcblx0XHR0aGlzLmFwaUtleSA9IGFwaUtleTtcblx0XHR0aGlzLmFwaVVybCA9IGFwaVVybDtcblx0fVxuXG5cdC8vc2V0dGVyc1xuXHRzZXQgYm90TmljayhuaWNrOiBzdHJpbmcpIHtcblx0XHR0aGlzLl9ib3ROaWNrID0gbmljaztcblx0fVxuXG5cdGV4ZWN1dGUoKTogdm9pZCB7XG5cdFx0bGV0IGJvZHlSYXc6IGFueSA9IHtcblx0XHRcdFwiZ3VpbGRfaWRcIjogdGhpcy5ndWlsZElkLFxuXHRcdFx0XCJib3Rfbmlja1wiOiB0aGlzLl9ib3ROaWNrXG5cdFx0fTtcblxuXHRcdCQuYWpheCh7XG5cdFx0XHR1cmw6IHRoaXMuYXBpVXJsICsgXCIvdjIvZ3VpbGQvdXBkYXRlXCIsXG5cdFx0XHRoZWFkZXJzOiB7XG5cdFx0XHRcdFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuXHRcdFx0XHRcIkF1dGhvcml6YXRpb25cIjogdGhpcy5hcGlLZXlcblx0XHRcdH0sXG5cdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwianNvblwiLFxuXHRcdFx0ZGF0YTogSlNPTi5zdHJpbmdpZnkoYm9keVJhdyksXG5cdFx0XHRzdWNjZXNzOiBmdW5jdGlvbiAoanNvbjogYW55KSB7XG5cdFx0XHRcdGxldCBzdGF0dXMgPSBuZXcgTmV0d29ya0NhbGxTdGF0dXModHJ1ZSwgVGFza1R5cGUuV0VCX0dVSUxEX1VQREFURSk7XG5cdFx0XHRcdHN0YXR1cy5jb2RlID0gMjAwO1xuXHRcdFx0XHRzdGF0dXMuYm9keSA9IGpzb247XG5cdFx0XHRcdHN0YXR1cy5tZXNzYWdlID0ganNvbi5tZXNzYWdlO1xuXG5cdFx0XHRcdHRoaXMub25Db21wbGV0ZShzdGF0dXMpO1xuXG5cdFx0XHR9LmJpbmQodGhpcyksXG5cdFx0XHRlcnJvcjogZnVuY3Rpb24gKGpxWEhSOiBqcVhIUikge1xuXHRcdFx0XHRsZXQgc3RhdHVzID0gbmV3IE5ldHdvcmtDYWxsU3RhdHVzKGZhbHNlLCBUYXNrVHlwZS5XRUJfR1VJTERfVVBEQVRFKTtcblx0XHRcdFx0c3RhdHVzLmNvZGUgPSBqcVhIUi5zdGF0dXM7XG5cdFx0XHRcdHN0YXR1cy5ib2R5ID0ganFYSFIucmVzcG9uc2VKU09OO1xuXHRcdFx0XHRzdGF0dXMubWVzc2FnZSA9IGpxWEhSLnJlc3BvbnNlSlNPTi5tZXNzYWdlO1xuXG5cdFx0XHRcdHRoaXMub25Db21wbGV0ZShzdGF0dXMpO1xuXHRcdFx0fS5iaW5kKHRoaXMpXG5cdFx0fSk7XG5cdH1cblxuXHRvbkNvbXBsZXRlKHN0YXR1czogTmV0d29ya0NhbGxTdGF0dXMpOiB2b2lkIHtcblx0XHR0aGlzLmNhbGxiYWNrLm9uQ2FsbGJhY2soc3RhdHVzKTtcblx0fVxufSIsImltcG9ydCB7V2ViR3VpbGR9IGZyb20gXCJAL29iamVjdHMvZ3VpbGQvV2ViR3VpbGRcIjtcbmltcG9ydCB7VGFza0NhbGxiYWNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svVGFza0NhbGxiYWNrXCI7XG5pbXBvcnQge05ldHdvcmtDYWxsU3RhdHVzfSBmcm9tIFwiQC9vYmplY3RzL25ldHdvcmsvTmV0d29ya0NhbGxTdGF0dXNcIjtcbmltcG9ydCB7U25hY2tiYXJ9IGZyb20gXCJAL3V0aWxzL3NuYWNrYmFyXCI7XG5pbXBvcnQge1Rhc2tUeXBlfSBmcm9tIFwiQC9lbnVtcy9UYXNrVHlwZVwiO1xuaW1wb3J0IHtFbGVtZW50VXRpbH0gZnJvbSBcIkAvdXRpbHMvRWxlbWVudFV0aWxcIjtcbmltcG9ydCB7V2ViR3VpbGRHZXRSZXF1ZXN0fSBmcm9tIFwiQC9uZXR3b3JrL2d1aWxkL1dlYkd1aWxkR2V0UmVxdWVzdFwiO1xuaW1wb3J0IHtHdWlsZFNldHRpbmdzVXBkYXRlUmVxdWVzdH0gZnJvbSBcIkAvbmV0d29yay9ndWlsZC9zZXR0aW5ncy9HdWlsZFNldHRpbmdzVXBkYXRlUmVxdWVzdFwiO1xuaW1wb3J0IHtXZWJHdWlsZFVwZGF0ZVJlcXVlc3R9IGZyb20gXCJAL25ldHdvcmsvZ3VpbGQvV2ViR3VpbGRVcGRhdGVSZXF1ZXN0XCI7XG5cbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRHdWlsZFJ1bm5lciBpbXBsZW1lbnRzIFRhc2tDYWxsYmFjayB7XG5cdGd1aWxkOiBXZWJHdWlsZDtcblxuXHRhcGlVcmw6IHN0cmluZztcblx0YXBpS2V5OiBzdHJpbmc7XG5cblx0Z3VpbGRJZDogbnVtYmVyO1xuXHR1c2VySWQ6IG51bWJlcjtcblxuXHRjb25zdHJ1Y3RvcihhcGlLZXk6IHN0cmluZywgYXBpVXJsOiBzdHJpbmcsIHVzZXJJZDogbnVtYmVyKSB7XG5cdFx0dGhpcy5hcGlLZXkgPSBhcGlLZXk7XG5cdFx0dGhpcy5hcGlVcmwgPSBhcGlVcmw7XG5cdFx0dGhpcy51c2VySWQgPSB1c2VySWQ7XG5cblx0XHR0aGlzLmd1aWxkSWQgPSBwYXJzZUludCh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzNdKTtcblx0fVxuXG5cdHN0YXJ0RGFzaGJvYXJkR3VpbGRQYWdlKCkge1xuXHRcdC8vRmlyc3QgdGhpbmcgd2UgbmVlZCB0byBkbyBpcyBsb2FkIHRoZSB3ZWIgZ3VpbGQgZGF0YSBzbyB3ZSBjYW4gZGlzcGxheSBpdCBmb3IgZWRpdGluZy5cblx0XHRsZXQgd2dyID0gbmV3IFdlYkd1aWxkR2V0UmVxdWVzdCh0aGlzLmd1aWxkSWQsIHRoaXMudXNlcklkLCB0aGlzKTtcblx0XHR3Z3IucHJvdmlkZUFwaURldGFpbHModGhpcy5hcGlLZXksIHRoaXMuYXBpVXJsKTtcblxuXHRcdHdnci5leGVjdXRlKCk7XG5cdH1cblxuXHRwcml2YXRlIGhhbmRsZVdlYkd1aWxkR2V0KHN0YXR1czogTmV0d29ya0NhbGxTdGF0dXMpIHtcblx0XHR0aGlzLmd1aWxkID0gbmV3IFdlYkd1aWxkKHRoaXMuZ3VpbGRJZCkuZnJvbUpzb24oc3RhdHVzLmJvZHkpO1xuXG5cdFx0Ly9UT0RPOiBsb2FkIGluIHNldHRpbmdzIGRhdGFcblx0XHQoPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuaWNrbmFtZS1pbnB1dFwiKSkudmFsdWUgPSB0aGlzLmd1aWxkLmJvdE5pY2s7XG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuaWNrLXVwZGF0ZS1idG5cIikhLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aGlzLnVwZGF0ZUJvdE5pY2soKVxuXHRcdH0uYmluZCh0aGlzKTtcblxuXHRcdCg8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByZWZpeC1pbnB1dFwiKSkudmFsdWUgPSB0aGlzLmd1aWxkLnNldHRpbmdzLnByZWZpeDtcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByZWZpeC11cGRhdGUtYnRuXCIpIS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhpcy51cGRhdGVQcmVmaXgoKVxuXHRcdH0uYmluZCh0aGlzKTtcblxuXHRcdC8vbG9hZCBkYXRhIHRoYXQgY2Fubm90IGJlIGVkaXRlZFxuXHRcdGlmICh0aGlzLmd1aWxkLnNldHRpbmdzLmlzUGF0cm9uR3VpbGQpIHtcblx0XHRcdCg8SFRNTFBhcmFncmFwaEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXRyb24tZGlzcGxheVwiKSkuaW5uZXJUZXh0ID0gXCJUaGlzIGd1aWxkIGlzIGEgcGF0cm9uIGd1aWxkXCI7XG5cdFx0fSBlbHNlIHtcblx0XHRcdCg8SFRNTFBhcmFncmFwaEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXRyb24tZGlzcGxheVwiKSkuaW5uZXJUZXh0ID0gXCJUaGlzIGd1aWxkIGlzIE5PVCBhIHBhdHJvbiBndWlsZFwiO1xuXHRcdH1cblx0XHRpZiAodGhpcy5ndWlsZC5zZXR0aW5ncy5pc0Rldkd1aWxkKSB7XG5cdFx0XHQoPEhUTUxQYXJhZ3JhcGhFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGV2LWRpc3BsYXlcIikpLmlubmVyVGV4dCA9IFwiVGhpcyBndWlsZCBpcyBhIGRldiBndWlsZFwiO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQoPEhUTUxQYXJhZ3JhcGhFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGV2LWRpc3BsYXlcIikpLmlubmVyVGV4dCA9IFwiVGhpcyBndWlsZCBpcyBOT1QgYSBkZXYgZ3VpbGRcIjtcblx0XHR9XG5cdFx0Ly9kaXNwbGF5IHdoYXQgc2hhcmQgdGhlIHNlcnZlciBpcyBvbiB3aGVuIHdlIHN1cHBvcnQgdGhhdC4uLlxuXG5cblx0XHQvL0hpZGUgbG9hZGVyIGFuZCBzaG93IHRoZSBkYXRhIGNvbnRhaW5lci4uLlxuXHRcdEVsZW1lbnRVdGlsLmhpZGVMb2FkZXIoKTtcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImd1aWxkLXNldHRpbmdzXCIpIS5oaWRkZW4gPSBmYWxzZTtcblx0fVxuXG5cdHByaXZhdGUgdXBkYXRlQm90TmljaygpIHtcblx0XHRsZXQgcmVxdWVzdCA9IG5ldyBXZWJHdWlsZFVwZGF0ZVJlcXVlc3QodGhpcy5ndWlsZElkLCB0aGlzKTtcblx0XHRyZXF1ZXN0LnByb3ZpZGVBcGlEZXRhaWxzKHRoaXMuYXBpS2V5LCB0aGlzLmFwaVVybCk7XG5cblx0XHRyZXF1ZXN0LmJvdE5pY2sgPSAoPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuaWNrbmFtZS1pbnB1dFwiKSkudmFsdWU7XG5cdFx0dGhpcy5ndWlsZC5ib3ROaWNrID0gcmVxdWVzdC5ib3ROaWNrO1xuXG5cdFx0cmVxdWVzdC5leGVjdXRlKCk7XG5cdH1cblxuXHRwcml2YXRlIHVwZGF0ZVByZWZpeCgpIHtcblx0XHRsZXQgcmVxdWVzdCA9IG5ldyBHdWlsZFNldHRpbmdzVXBkYXRlUmVxdWVzdCh0aGlzLmd1aWxkSWQsIHRoaXMpO1xuXHRcdHJlcXVlc3QucHJvdmlkZUFwaURldGFpbHModGhpcy5hcGlLZXksIHRoaXMuYXBpVXJsKTtcblxuXHRcdHJlcXVlc3QucHJlZml4ID0gKDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJlZml4LWlucHV0XCIpKS52YWx1ZTtcblx0XHR0aGlzLmd1aWxkLnNldHRpbmdzLnByZWZpeCA9IHJlcXVlc3QucHJlZml4O1xuXG5cdFx0cmVxdWVzdC5leGVjdXRlKCk7XG5cblx0fVxuXG5cdG9uQ2FsbGJhY2soc3RhdHVzOiBOZXR3b3JrQ2FsbFN0YXR1cyk6IHZvaWQge1xuXHRcdGlmIChzdGF0dXMuaXNTdWNjZXNzKSB7XG5cdFx0XHRzd2l0Y2ggKHN0YXR1cy50eXBlKSB7XG5cdFx0XHRcdGNhc2UgVGFza1R5cGUuR1VJTERfU0VUVElOR1NfR0VUOlxuXHRcdFx0XHRcdHRoaXMuaGFuZGxlV2ViR3VpbGRHZXQoc3RhdHVzKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBUYXNrVHlwZS5HVUlMRF9TRVRUSU5HU19VUERBVEU6XG5cdFx0XHRcdFx0U25hY2tiYXIuc2hvd1NuYWNrYmFyKHN0YXR1cy5tZXNzYWdlKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBUYXNrVHlwZS5XRUJfR1VJTERfVVBEQVRFOlxuXHRcdFx0XHRcdFNuYWNrYmFyLnNob3dTbmFja2JhcihzdGF0dXMubWVzc2FnZSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN3aXRjaCAoc3RhdHVzLnR5cGUpIHtcblx0XHRcdFx0Y2FzZSBUYXNrVHlwZS5XRUJfR1VJTERfR0VUOlxuXHRcdFx0XHRcdGlmIChzdGF0dXMuY29kZSA9PSA0MDQpIHtcblx0XHRcdFx0XHRcdEVsZW1lbnRVdGlsLmhpZGVMb2FkZXIoKTtcblx0XHRcdFx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibm90LWNvbm5lY3RlZFwiKSEuaGlkZGVuID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRTbmFja2Jhci5zaG93U25hY2tiYXIoXCJHdWlsZCBub3QgRm91bmRcIik7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFNuYWNrYmFyLnNob3dTbmFja2JhcihcIltFUlJPUl0gXCIgKyBzdGF0dXMubWVzc2FnZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFNuYWNrYmFyLnNob3dTbmFja2JhcihcIltFUlJPUl0gXCIgKyBzdGF0dXMubWVzc2FnZSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59IiwiZXhwb3J0IGNsYXNzIFdlYkNhbGVuZGFyIHtcblx0cHJpdmF0ZSBfaWQ6IHN0cmluZztcblx0cHJpdmF0ZSBfYWRkcmVzczogc3RyaW5nO1xuXHRwcml2YXRlIF9udW1iZXI6IG51bWJlcjtcblx0cHJpdmF0ZSBfZXh0ZXJuYWw6IGJvb2xlYW47XG5cdHByaXZhdGUgX3N1bW1hcnk6IHN0cmluZztcblx0cHJpdmF0ZSBfZGVzY3JpcHRpb246IHN0cmluZztcblx0cHJpdmF0ZSBfdGltZXpvbmU6IHN0cmluZztcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0fVxuXG5cdC8vR2V0dGVyL3NldHRlciBwYWlyc1xuXHRnZXQgaWQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2lkO1xuXHR9XG5cbiAgICBzZXQgaWQoaWQpIHtcbiAgICAgICAgdGhpcy5faWQgPSBpZDtcblx0fVxuXG5cdGdldCBhZGRyZXNzKCkge1xuXHRcdHJldHVybiB0aGlzLl9hZGRyZXNzO1xuXHR9XG5cblx0c2V0IGFkZHJlc3MoYWRkcmVzcykge1xuXHRcdHRoaXMuX2FkZHJlc3MgPSBhZGRyZXNzO1xuXHR9XG5cblx0Z2V0IG51bWJlcigpIHtcblx0XHRyZXR1cm4gdGhpcy5fbnVtYmVyO1xuXHR9XG5cblx0c2V0IG51bWJlcihudW0pIHtcblx0XHR0aGlzLl9udW1iZXIgPSBudW07XG5cdH1cblxuXHRnZXQgc3VtbWFyeSgpIHtcblx0XHRyZXR1cm4gdGhpcy5fc3VtbWFyeTtcblx0fVxuXG5cdHNldCBzdW1tYXJ5KHN1bW1hcnkpIHtcblx0XHR0aGlzLl9zdW1tYXJ5ID0gc3VtbWFyeTtcblx0fVxuXG5cdGdldCBkZXNjcmlwdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5fZGVzY3JpcHRpb247XG5cdH1cblxuXHRzZXQgZGVzY3JpcHRpb24oZGVzY3JpcHRpb24pIHtcblx0XHR0aGlzLl9kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuXHR9XG5cblx0Z2V0IHRpbWV6b25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdGltZXpvbmU7XG4gICAgfVxuXG4gICAgc2V0IHRpbWV6b25lKHRpbWV6b25lKSB7XG4gICAgICAgIHRoaXMuX3RpbWV6b25lID0gdGltZXpvbmU7XG4gICAgfVxuXG4gICAgZ2V0IGlzRXh0ZXJuYWwoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2V4dGVybmFsO1xuICAgIH1cblxuICAgIHNldCBpc0V4dGVybmFsKGV4dGVybmFsKSB7XG5cdFx0dGhpcy5fZXh0ZXJuYWwgPSBleHRlcm5hbDtcbiAgICB9XG5cbiAgICAvL0pzb24gY29udmVyc2lvbnNcbiAgICB0b0pzb24oKSB7XG4gICAgICAgIGxldCBqc29uOiBhbnkgPSB7XG5cdFx0XHRcImNhbGVuZGFyX2FkZHJlc3NcIjogdGhpcy5hZGRyZXNzLFxuXHRcdFx0XCJjYWxlbmRhcl9pZFwiOiB0aGlzLmlkLFxuXHRcdFx0XCJjYWxlbmRhcl9udW1iZXJcIjogdGhpcy5udW1iZXIsXG5cdFx0XHRcImV4dGVybmFsXCI6IHRoaXMuaXNFeHRlcm5hbCxcblx0XHRcdFwic3VtbWFyeVwiOiB0aGlzLnN1bW1hcnksXG5cdFx0XHRcImRlc2NyaXB0aW9uXCI6IHRoaXMuZGVzY3JpcHRpb24sXG5cdFx0XHRcInRpbWV6b25lXCI6IHRoaXMudGltZXpvbmVcblx0XHR9O1xuXG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uICE9IG51bGwpIHtcbiAgICAgICAgICAgIGpzb24uZGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuXG4gICAgZnJvbUpzb24oanNvbjogYW55KSB7XG5cdFx0dGhpcy5hZGRyZXNzID0ganNvbi5jYWxlbmRhcl9hZGRyZXNzO1xuXHRcdHRoaXMuaWQgPSBqc29uLmNhbGVuZGFyX2lkO1xuXHRcdHRoaXMubnVtYmVyID0ganNvbi5jYWxlbmRhcl9udW1iZXI7XG5cdFx0dGhpcy5pc0V4dGVybmFsID0ganNvbi5leHRlcm5hbDtcblx0XHR0aGlzLnN1bW1hcnkgPSBqc29uLnN1bW1hcnk7XG5cdFx0dGhpcy5kZXNjcmlwdGlvbiA9IGpzb24uZGVzY3JpcHRpb247XG5cdFx0dGhpcy50aW1lem9uZSA9IGpzb24udGltZXpvbmU7XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxufSIsImltcG9ydCB7QXN5bmNUYXNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svQXN5bmNUYXNrXCI7XG5pbXBvcnQge1Rhc2tDYWxsYmFja30gZnJvbSBcIkAvb2JqZWN0cy90YXNrL1Rhc2tDYWxsYmFja1wiO1xuaW1wb3J0IHtOZXR3b3JrQ2FsbFN0YXR1c30gZnJvbSBcIkAvb2JqZWN0cy9uZXR3b3JrL05ldHdvcmtDYWxsU3RhdHVzXCI7XG5pbXBvcnQge1Rhc2tUeXBlfSBmcm9tIFwiQC9lbnVtcy9UYXNrVHlwZVwiO1xuaW1wb3J0IGpxWEhSID0gSlF1ZXJ5LmpxWEhSO1xuXG5leHBvcnQgY2xhc3MgQ2FsZW5kYXJHZXRSZXF1ZXN0IGltcGxlbWVudHMgQXN5bmNUYXNrIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGd1aWxkSWQ6IG51bWJlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGNhbE51bTogbnVtYmVyO1xuXG4gICAgcmVhZG9ubHkgY2FsbGJhY2s6IFRhc2tDYWxsYmFjaztcblxuICAgIGFwaUtleTogc3RyaW5nO1xuICAgIGFwaVVybDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZ3VpbGRJZDogbnVtYmVyLCBjYWxOdW06IG51bWJlciwgY2FsbGJhY2s6IFRhc2tDYWxsYmFjaykge1xuICAgICAgICB0aGlzLmd1aWxkSWQgPSBndWlsZElkO1xuICAgICAgICB0aGlzLmNhbE51bSA9IGNhbE51bTtcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIH1cblxuICAgIHByb3ZpZGVBcGlEZXRhaWxzKGFwaUtleTogc3RyaW5nLCBhcGlVcmw6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmFwaUtleSA9IGFwaUtleTtcblx0XHR0aGlzLmFwaVVybCA9IGFwaVVybDtcbiAgICB9XG5cblxuICAgIGV4ZWN1dGUoKTogdm9pZCB7XG4gICAgICAgIGxldCBib2R5UmF3OiBhbnkgPSB7XG4gICAgICAgICAgICBcImd1aWxkX2lkXCI6IHRoaXMuZ3VpbGRJZCxcbiAgICAgICAgICAgIFwiY2FsZW5kYXJfbnVtYmVyXCI6IHRoaXMuY2FsTnVtXG4gICAgICAgIH07XG5cblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiB0aGlzLmFwaVVybCArIFwiL3YyL2NhbGVuZGFyL2dldFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIFwiQXV0aG9yaXphdGlvblwiOiB0aGlzLmFwaUtleVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShib2R5UmF3KSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc29uOiBhbnkpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gbmV3IE5ldHdvcmtDYWxsU3RhdHVzKHRydWUsIFRhc2tUeXBlLkNBTEVOREFSX0dFVCk7XG4gICAgICAgICAgICAgICAgc3RhdHVzLmNvZGUgPSAyMDA7XG4gICAgICAgICAgICAgICAgc3RhdHVzLmJvZHkgPSBqc29uO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5tZXNzYWdlID0gXCJTdWNjZXNzXCI7XG5cbiAgICAgICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoc3RhdHVzKTtcblxuICAgICAgICAgICAgfS5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChqcVhIUjoganFYSFIpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gbmV3IE5ldHdvcmtDYWxsU3RhdHVzKGZhbHNlLCBUYXNrVHlwZS5DQUxFTkRBUl9HRVQpO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5jb2RlID0ganFYSFIuc3RhdHVzO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5ib2R5ID0ganFYSFIucmVzcG9uc2VKU09OO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5tZXNzYWdlID0ganFYSFIucmVzcG9uc2VKU09OLm1lc3NhZ2U7XG5cbiAgICAgICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoc3RhdHVzKTtcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkNvbXBsZXRlKHN0YXR1czogTmV0d29ya0NhbGxTdGF0dXMpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jYWxsYmFjay5vbkNhbGxiYWNrKHN0YXR1cyk7XG4gICAgfVxufSIsImltcG9ydCB7QXN5bmNUYXNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svQXN5bmNUYXNrXCI7XG5pbXBvcnQge1Rhc2tDYWxsYmFja30gZnJvbSBcIkAvb2JqZWN0cy90YXNrL1Rhc2tDYWxsYmFja1wiO1xuaW1wb3J0IHtOZXR3b3JrQ2FsbFN0YXR1c30gZnJvbSBcIkAvb2JqZWN0cy9uZXR3b3JrL05ldHdvcmtDYWxsU3RhdHVzXCI7XG5pbXBvcnQge1Rhc2tUeXBlfSBmcm9tIFwiQC9lbnVtcy9UYXNrVHlwZVwiO1xuaW1wb3J0IGpxWEhSID0gSlF1ZXJ5LmpxWEhSO1xuXG5leHBvcnQgY2xhc3MgRXZlbnRMaXN0TW9udGhSZXF1ZXN0IGltcGxlbWVudHMgQXN5bmNUYXNrIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGd1aWxkSWQ6IG51bWJlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGNhbE51bTogbnVtYmVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZGF5czogbnVtYmVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZXBvY2hTdGFydDogbnVtYmVyO1xuXG4gICAgcmVhZG9ubHkgY2FsbGJhY2s6IFRhc2tDYWxsYmFjaztcblxuICAgIGFwaUtleTogc3RyaW5nO1xuICAgIGFwaVVybDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZ3VpbGRJZDogbnVtYmVyLCBjYWxOdW06IG51bWJlciwgZGF5czogbnVtYmVyLCBlcG9jaFN0YXJ0OiBudW1iZXIsIGNhbGxiYWNrOiBUYXNrQ2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5ndWlsZElkID0gZ3VpbGRJZDtcbiAgICAgICAgdGhpcy5jYWxOdW0gPSBjYWxOdW07XG4gICAgICAgIHRoaXMuZGF5cyA9IGRheXM7XG4gICAgICAgIHRoaXMuZXBvY2hTdGFydCA9IGVwb2NoU3RhcnQ7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICBwcm92aWRlQXBpRGV0YWlscyhhcGlLZXk6IHN0cmluZywgYXBpVXJsOiBzdHJpbmcpOiB2b2lkIHtcblx0XHR0aGlzLmFwaUtleSA9IGFwaUtleTtcblx0XHR0aGlzLmFwaVVybCA9IGFwaVVybDtcblx0fVxuXG5cbiAgICBleGVjdXRlKCk6IHZvaWQge1xuICAgICAgICBsZXQgYm9keVJhdzogYW55ID0ge1xuICAgICAgICAgICAgXCJndWlsZF9pZFwiOiB0aGlzLmd1aWxkSWQsXG4gICAgICAgICAgICBcImNhbGVuZGFyX251bWJlclwiOiB0aGlzLmNhbE51bSxcbiAgICAgICAgICAgIFwiZGF5c19pbl9tb250aFwiOiB0aGlzLmRheXMsXG4gICAgICAgICAgICBcImVwb2NoX3N0YXJ0XCI6IHRoaXMuZXBvY2hTdGFydFxuICAgICAgICB9O1xuXG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogdGhpcy5hcGlVcmwgKyBcIi92Mi9ldmVudHMvbGlzdC9tb250aFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIFwiQXV0aG9yaXphdGlvblwiOiB0aGlzLmFwaUtleVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShib2R5UmF3KSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc29uOiBhbnkpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gbmV3IE5ldHdvcmtDYWxsU3RhdHVzKHRydWUsIFRhc2tUeXBlLkVWRU5UX0xJU1RfTU9OVEgpO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5jb2RlID0gMjAwO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5ib2R5ID0ganNvbjtcbiAgICAgICAgICAgICAgICBzdGF0dXMubWVzc2FnZSA9IGpzb24ubWVzc2FnZTtcblxuICAgICAgICAgICAgICAgIHRoaXMub25Db21wbGV0ZShzdGF0dXMpO1xuXG4gICAgICAgICAgICB9LmJpbmQodGhpcyksXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGpxWEhSOiBqcVhIUikge1xuICAgICAgICAgICAgICAgIGxldCBzdGF0dXMgPSBuZXcgTmV0d29ya0NhbGxTdGF0dXMoZmFsc2UsIFRhc2tUeXBlLkVWRU5UX0xJU1RfTU9OVEgpO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5jb2RlID0ganFYSFIuc3RhdHVzO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5ib2R5ID0ganFYSFIucmVzcG9uc2VKU09OO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5tZXNzYWdlID0ganFYSFIucmVzcG9uc2VKU09OLm1lc3NhZ2U7XG5cbiAgICAgICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoc3RhdHVzKTtcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkNvbXBsZXRlKHN0YXR1czogTmV0d29ya0NhbGxTdGF0dXMpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jYWxsYmFjay5vbkNhbGxiYWNrKHN0YXR1cyk7XG4gICAgfVxufSIsImltcG9ydCB7QXN5bmNUYXNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svQXN5bmNUYXNrXCI7XG5pbXBvcnQge1Rhc2tDYWxsYmFja30gZnJvbSBcIkAvb2JqZWN0cy90YXNrL1Rhc2tDYWxsYmFja1wiO1xuaW1wb3J0IHtOZXR3b3JrQ2FsbFN0YXR1c30gZnJvbSBcIkAvb2JqZWN0cy9uZXR3b3JrL05ldHdvcmtDYWxsU3RhdHVzXCI7XG5pbXBvcnQge1Rhc2tUeXBlfSBmcm9tIFwiQC9lbnVtcy9UYXNrVHlwZVwiO1xuaW1wb3J0IGpxWEhSID0gSlF1ZXJ5LmpxWEhSO1xuXG5leHBvcnQgY2xhc3MgRXZlbnRMaXN0RGF0ZVJlcXVlc3QgaW1wbGVtZW50cyBBc3luY1Rhc2sge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZ3VpbGRJZDogbnVtYmVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgY2FsTnVtOiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBlcG9jaFN0YXJ0OiBudW1iZXI7XG5cbiAgICByZWFkb25seSBjYWxsYmFjazogVGFza0NhbGxiYWNrO1xuXG4gICAgYXBpS2V5OiBzdHJpbmc7XG4gICAgYXBpVXJsOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihndWlsZElkOiBudW1iZXIsIGNhbE51bTogbnVtYmVyLCBlcG9jaFN0YXJ0OiBudW1iZXIsIGNhbGxiYWNrOiBUYXNrQ2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5ndWlsZElkID0gZ3VpbGRJZDtcbiAgICAgICAgdGhpcy5jYWxOdW0gPSBjYWxOdW07XG4gICAgICAgIHRoaXMuZXBvY2hTdGFydCA9IGVwb2NoU3RhcnQ7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICBwcm92aWRlQXBpRGV0YWlscyhhcGlLZXk6IHN0cmluZywgYXBpVXJsOiBzdHJpbmcpOiB2b2lkIHtcblx0XHR0aGlzLmFwaUtleSA9IGFwaUtleTtcblx0XHR0aGlzLmFwaVVybCA9IGFwaVVybDtcblx0fVxuXG5cbiAgICBleGVjdXRlKCk6IHZvaWQge1xuICAgICAgICBsZXQgYm9keVJhdzogYW55ID0ge1xuICAgICAgICAgICAgXCJndWlsZF9pZFwiOiB0aGlzLmd1aWxkSWQsXG4gICAgICAgICAgICBcImNhbGVuZGFyX251bWJlclwiOiB0aGlzLmNhbE51bSxcbiAgICAgICAgICAgIFwiZXBvY2hfc3RhcnRcIjogdGhpcy5lcG9jaFN0YXJ0XG4gICAgICAgIH07XG5cblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiB0aGlzLmFwaVVybCArIFwiL3YyL2V2ZW50cy9saXN0L2RhdGVcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICBcIkF1dGhvcml6YXRpb25cIjogdGhpcy5hcGlLZXlcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoYm9keVJhdyksXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoanNvbjogYW55KSB7XG4gICAgICAgICAgICAgICAgbGV0IHN0YXR1cyA9IG5ldyBOZXR3b3JrQ2FsbFN0YXR1cyh0cnVlLCBUYXNrVHlwZS5FVkVOVF9MSVNUX0RBVEUpO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5jb2RlID0gMjAwO1xuICAgICAgICAgICAgICAgIHN0YXR1cy5ib2R5ID0ganNvbjtcbiAgICAgICAgICAgICAgICBzdGF0dXMubWVzc2FnZSA9IGpzb24ubWVzc2FnZTtcblxuICAgICAgICAgICAgICAgIHRoaXMub25Db21wbGV0ZShzdGF0dXMpO1xuXG4gICAgICAgICAgICB9LmJpbmQodGhpcyksXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGpxWEhSOiBqcVhIUikge1xuICAgICAgICAgICAgICAgIGxldCBzdGF0dXMgPSBuZXcgTmV0d29ya0NhbGxTdGF0dXMoZmFsc2UsIFRhc2tUeXBlLkVWRU5UX0xJU1RfREFURSk7XG4gICAgICAgICAgICAgICAgc3RhdHVzLmNvZGUgPSBqcVhIUi5zdGF0dXM7XG4gICAgICAgICAgICAgICAgc3RhdHVzLmJvZHkgPSBqcVhIUi5yZXNwb25zZUpTT047XG4gICAgICAgICAgICAgICAgc3RhdHVzLm1lc3NhZ2UgPSBqcVhIUi5yZXNwb25zZUpTT04ubWVzc2FnZTtcblxuICAgICAgICAgICAgICAgIHRoaXMub25Db21wbGV0ZShzdGF0dXMpO1xuICAgICAgICAgICAgfS5iaW5kKHRoaXMpXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uQ29tcGxldGUoc3RhdHVzOiBOZXR3b3JrQ2FsbFN0YXR1cyk6IHZvaWQge1xuICAgICAgICB0aGlzLmNhbGxiYWNrLm9uQ2FsbGJhY2soc3RhdHVzKTtcbiAgICB9XG59IiwiaW1wb3J0IHtFdmVudEZyZXF1ZW5jeX0gZnJvbSBcIkAvZW51bXMvRXZlbnRGcmVxdWVuY3lcIjtcblxuZXhwb3J0IGNsYXNzIFJlY3VycmVuY2Uge1xuICAgIHByaXZhdGUgX2ZyZXF1ZW5jeTogRXZlbnRGcmVxdWVuY3k7XG4gICAgcHJpdmF0ZSBfaW50ZXJ2YWw6IG51bWJlcjtcbiAgICBwcml2YXRlIF9jb3VudDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZnJlcXVlbmN5ID0gRXZlbnRGcmVxdWVuY3kuREFJTFk7XG4gICAgICAgIHRoaXMuaW50ZXJ2YWwgPSAxO1xuICAgICAgICB0aGlzLmNvdW50ID0gLTE7XG4gICAgfVxuXG4gICAgLy9HZXR0ZXIvc2V0dGVyIHBhaXJzXG4gICAgZ2V0IGZyZXF1ZW5jeSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZyZXF1ZW5jeTtcbiAgICB9XG5cbiAgICBzZXQgZnJlcXVlbmN5KGZyZXEpIHtcbiAgICAgICAgdGhpcy5fZnJlcXVlbmN5ID0gZnJlcTtcbiAgICB9XG5cbiAgICBnZXQgaW50ZXJ2YWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnRlcnZhbDtcbiAgICB9XG5cbiAgICBzZXQgaW50ZXJ2YWwoaW50KSB7XG4gICAgICAgIHRoaXMuX2ludGVydmFsID0gaW50O1xuICAgIH1cblxuICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvdW50O1xuICAgIH1cblxuICAgIHNldCBjb3VudChjKSB7XG4gICAgICAgIHRoaXMuX2NvdW50ID0gYztcbiAgICB9XG5cbiAgICAvL0pzb24gY29udmVyc2lvbnNcbiAgICB0b0pzb24oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBcImZyZXF1ZW5jeVwiOiBFdmVudEZyZXF1ZW5jeVt0aGlzLmZyZXF1ZW5jeV0sXG4gICAgICAgICAgICBcImludGVydmFsXCI6IHRoaXMuaW50ZXJ2YWwsXG4gICAgICAgICAgICBcImNvdW50XCI6IHRoaXMuY291bnRcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZyb21Kc29uKGpzb246IGFueSkge1xuICAgICAgICB0aGlzLmZyZXF1ZW5jeSA9ICg8YW55PkV2ZW50RnJlcXVlbmN5KVtqc29uLmZyZXF1ZW5jeV07XG4gICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBqc29uLmludGVydmFsO1xuICAgICAgICB0aGlzLmNvdW50ID0ganNvbi5jb3VudDtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59IiwiaW1wb3J0IHtFdmVudENvbG9yfSBmcm9tIFwiQC9lbnVtcy9FdmVudENvbG9yXCI7XG5pbXBvcnQge1JlY3VycmVuY2V9IGZyb20gXCJAL29iamVjdHMvZXZlbnQvUmVjdXJyZW5jZVwiO1xuXG5leHBvcnQgY2xhc3MgRXZlbnQge1xuICAgIHByaXZhdGUgX2V2ZW50SWQ6IHN0cmluZyA9IFwiXCI7XG4gICAgcHJpdmF0ZSBfZXBvY2hTdGFydDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2Vwb2NoRW5kOiBudW1iZXI7XG5cbiAgICBwcml2YXRlIF9zdW1tYXJ5OiBzdHJpbmcgPSBcIlwiO1xuICAgIHByaXZhdGUgX2Rlc2NyaXB0aW9uOiBzdHJpbmcgPSBcIlwiO1xuICAgIHByaXZhdGUgX2xvY2F0aW9uOiBzdHJpbmcgPSBcIlwiO1xuXG4gICAgcHJpdmF0ZSBfaXNQYXJlbnQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfY29sb3I6IEV2ZW50Q29sb3IgPSBFdmVudENvbG9yLk5PTkU7XG5cbiAgICBwcml2YXRlIF9yZWN1cjogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9yZWN1cnJlbmNlOiBSZWN1cnJlbmNlO1xuXG4gICAgcHJpdmF0ZSBfaW1hZ2U6IHN0cmluZyA9IFwiXCI7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICB9XG5cbiAgICAvL1NldHRlci9nZXR0ZXIgcGFpcnNcbiAgICBnZXQgZXZlbnRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V2ZW50SWQ7XG4gICAgfVxuXG4gICAgc2V0IGV2ZW50SWQoaWQpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRJZCA9IGlkO1xuICAgIH1cblxuICAgIGdldCBlcG9jaFN0YXJ0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXBvY2hTdGFydDtcbiAgICB9XG5cbiAgICBzZXQgZXBvY2hTdGFydChlcG9jaCkge1xuICAgICAgICB0aGlzLl9lcG9jaFN0YXJ0ID0gZXBvY2g7XG4gICAgfVxuXG4gICAgZ2V0IGVwb2NoRW5kKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXBvY2hFbmQ7XG4gICAgfVxuXG4gICAgc2V0IGVwb2NoRW5kKGVwb2NoKSB7XG4gICAgICAgIHRoaXMuX2Vwb2NoRW5kID0gZXBvY2g7XG4gICAgfVxuXG4gICAgZ2V0IHN1bW1hcnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdW1tYXJ5O1xuICAgIH1cblxuICAgIHNldCBzdW1tYXJ5KHN1bW1hcnkpIHtcbiAgICAgICAgdGhpcy5fc3VtbWFyeSA9IHN1bW1hcnk7XG4gICAgfVxuXG4gICAgZ2V0IGRlc2NyaXB0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb247XG4gICAgfVxuXG4gICAgc2V0IGRlc2NyaXB0aW9uKGRlc2MpIHtcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb24gPSBkZXNjO1xuICAgIH1cblxuICAgIGdldCBsb2NhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvY2F0aW9uO1xuICAgIH1cblxuICAgIHNldCBsb2NhdGlvbihsb2MpIHtcbiAgICAgICAgdGhpcy5fbG9jYXRpb24gPSBsb2M7XG4gICAgfVxuXG4gICAgZ2V0IGlzUGFyZW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXNQYXJlbnQ7XG4gICAgfVxuXG4gICAgc2V0IGlzUGFyZW50KGlzUGFyKSB7XG4gICAgICAgIHRoaXMuX2lzUGFyZW50ID0gaXNQYXI7XG4gICAgfVxuXG4gICAgZ2V0IGNvbG9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29sb3I7XG4gICAgfVxuXG4gICAgc2V0IGNvbG9yKGNvbCkge1xuICAgICAgICB0aGlzLl9jb2xvciA9IGNvbDtcbiAgICB9XG5cbiAgICBnZXQgZG9lc1JlY3VyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVjdXI7XG4gICAgfVxuXG4gICAgc2V0IGRvZXNSZWN1cihkb2VzKSB7XG4gICAgICAgIHRoaXMuX3JlY3VyID0gZG9lcztcbiAgICB9XG5cbiAgICBnZXQgcmVjdXJyZW5jZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlY3VycmVuY2U7XG4gICAgfVxuXG4gICAgc2V0IHJlY3VycmVuY2UocmVjKSB7XG4gICAgICAgIHRoaXMuX3JlY3VycmVuY2UgPSByZWM7XG4gICAgfVxuXG4gICAgZ2V0IGltYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faW1hZ2U7XG4gICAgfVxuXG4gICAgc2V0IGltYWdlKGltZykge1xuICAgICAgICB0aGlzLl9pbWFnZSA9IGltZztcbiAgICB9XG5cblxuICAgIC8vSnNvbiBjb252ZXJzaW9uXG4gICAgdG9Kc29uKCkge1xuICAgICAgICBsZXQganNvbjogYW55ID0ge1xuICAgICAgICAgICAgXCJldmVudF9pZFwiOiB0aGlzLmV2ZW50SWQsXG4gICAgICAgICAgICBcImVwb2NoX3N0YXJ0XCI6IHRoaXMuZXBvY2hTdGFydCxcbiAgICAgICAgICAgIFwiZXBvY2hfZW5kXCI6IHRoaXMuZXBvY2hFbmQsXG4gICAgICAgICAgICBcImNvbG9yXCI6IEV2ZW50Q29sb3JbdGhpcy5jb2xvcl0sXG4gICAgICAgICAgICBcInJlY3VyXCI6IHRoaXMuZG9lc1JlY3VyXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHRoaXMuc3VtbWFyeS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBqc29uLnN1bW1hcnkgPSB0aGlzLnN1bW1hcnk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZGVzY3JpcHRpb24ubGVuZ3RoKSB7XG4gICAgICAgICAgICBqc29uLmRlc2NyaXB0aW9uID0gdGhpcy5kZXNjcmlwdGlvbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sb2NhdGlvbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBqc29uLmxvY2F0aW9uID0gdGhpcy5sb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5kb2VzUmVjdXIpIHtcbiAgICAgICAgICAgIGpzb24ucmVjdXJyZW5jZSA9IHRoaXMucmVjdXJyZW5jZS50b0pzb24oKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pbWFnZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBqc29uLmltYWdlID0gdGhpcy5pbWFnZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cblxuICAgIGZyb21Kc29uKGpzb246IGFueSkge1xuICAgICAgICB0aGlzLmV2ZW50SWQgPSBqc29uLmV2ZW50X2lkO1xuICAgICAgICB0aGlzLmVwb2NoU3RhcnQgPSBqc29uLmVwb2NoX3N0YXJ0O1xuICAgICAgICB0aGlzLmVwb2NoRW5kID0ganNvbi5lcG9jaF9lbmQ7XG5cbiAgICAgICAgaWYgKGpzb24uaGFzT3duUHJvcGVydHkoXCJzdW1tYXJ5XCIpKSB7XG4gICAgICAgICAgICB0aGlzLnN1bW1hcnkgPSBqc29uLnN1bW1hcnk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGpzb24uaGFzT3duUHJvcGVydHkoXCJkZXNjcmlwdGlvblwiKSkge1xuICAgICAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGpzb24uZGVzY3JpcHRpb247XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGpzb24uaGFzT3duUHJvcGVydHkoXCJsb2NhdGlvblwiKSkge1xuICAgICAgICAgICAgdGhpcy5sb2NhdGlvbiA9IGpzb24ubG9jYXRpb247XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmlzUGFyZW50ID0ganNvbi5pc19wYXJlbnQ7XG4gICAgICAgIHRoaXMuY29sb3IgPSAoPGFueT5FdmVudENvbG9yKVtqc29uLmNvbG9yXTtcblxuICAgICAgICB0aGlzLmRvZXNSZWN1ciA9IGpzb24ucmVjdXI7XG4gICAgICAgIGlmICh0aGlzLmRvZXNSZWN1cikge1xuICAgICAgICAgICAgdGhpcy5yZWN1cnJlbmNlID0gbmV3IFJlY3VycmVuY2UoKS5mcm9tSnNvbihqc29uLnJlY3VycmVuY2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGpzb24uaGFzT3duUHJvcGVydHkoXCJpbWFnZVwiKSkge1xuICAgICAgICAgICAgdGhpcy5pbWFnZSA9IGpzb24uaW1hZ2U7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59IiwiaW1wb3J0IHtTbmFja2Jhcn0gZnJvbSBcIkAvdXRpbHMvc25hY2tiYXJcIjtcbmltcG9ydCB7RXZlbnRDb2xvcn0gZnJvbSBcIkAvZW51bXMvRXZlbnRDb2xvclwiO1xuaW1wb3J0IHtFdmVudEZyZXF1ZW5jeX0gZnJvbSBcIkAvZW51bXMvRXZlbnRGcmVxdWVuY3lcIjtcbmltcG9ydCB7VGFza0NhbGxiYWNrfSBmcm9tIFwiQC9vYmplY3RzL3Rhc2svVGFza0NhbGxiYWNrXCI7XG5pbXBvcnQge05ldHdvcmtDYWxsU3RhdHVzfSBmcm9tIFwiQC9vYmplY3RzL25ldHdvcmsvTmV0d29ya0NhbGxTdGF0dXNcIjtcbmltcG9ydCB7VGFza1R5cGV9IGZyb20gXCJAL2VudW1zL1Rhc2tUeXBlXCI7XG5pbXBvcnQge1dlYkNhbGVuZGFyfSBmcm9tIFwiQC9vYmplY3RzL2NhbGVuZGFyL1dlYkNhbGVuZGFyXCI7XG5pbXBvcnQge0NhbGVuZGFyR2V0UmVxdWVzdH0gZnJvbSBcIkAvbmV0d29yay9jYWxlbmRhci9DYWxlbmRhckdldFJlcXVlc3RcIjtcbmltcG9ydCB7RXZlbnRMaXN0TW9udGhSZXF1ZXN0fSBmcm9tIFwiQC9uZXR3b3JrL2V2ZW50L2xpc3QvRXZlbnRMaXN0TW9udGhSZXF1ZXN0XCI7XG5pbXBvcnQge0V2ZW50TGlzdERhdGVSZXF1ZXN0fSBmcm9tIFwiQC9uZXR3b3JrL2V2ZW50L2xpc3QvRXZlbnRMaXN0RGF0ZVJlcXVlc3RcIjtcbmltcG9ydCB7RXZlbnR9IGZyb20gXCJAL29iamVjdHMvZXZlbnQvRXZlbnRcIjtcbmltcG9ydCB7RWxlbWVudFV0aWx9IGZyb20gXCJAL3V0aWxzL0VsZW1lbnRVdGlsXCI7XG5cblxuLy9UaGUgY2FsZW5kYXIgY2xhc3MuIFRoaXMganVzdCBoYW5kbGVzIGFsbCB0aGUgc3R1ZmYgaW5zaWRlIG9mIHRoZSBjYWxlbmRhciwgYW5kIGtlZXBzIGl0IGlzb2xhdGVkLlxuZXhwb3J0IGNsYXNzIEVtYmVkQ2FsZW5kYXIgaW1wbGVtZW50cyBUYXNrQ2FsbGJhY2sge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZ3VpbGRJZDogbnVtYmVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgY2FsTnVtYmVyOiBudW1iZXI7XG4gICAgcHJpdmF0ZSB0b2RheXNEYXRlOiBEYXRlO1xuICAgIHByaXZhdGUgZGlzcGxheXM6IHN0cmluZ1tdO1xuICAgIHByaXZhdGUgYXBpS2V5OiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBhcGlVcmw6IHN0cmluZztcblxuICAgIHB1YmxpYyBzZWxlY3RlZERhdGU6IERhdGU7XG5cbiAgICBwcml2YXRlIGNhbGVuZGFyRGF0YTogV2ViQ2FsZW5kYXI7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmd1aWxkSWQgPSBwYXJzZUludCh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzNdKTtcblx0XHR0aGlzLmNhbE51bWJlciA9IHBhcnNlSW50KHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIilbNF0pO1xuXHRcdHRoaXMudG9kYXlzRGF0ZSA9IG5ldyBEYXRlKCk7XG5cdFx0dGhpcy5zZWxlY3RlZERhdGUgPSBuZXcgRGF0ZSgpO1xuXHRcdHRoaXMuZGlzcGxheXMgPSBbXTtcblx0XHR0aGlzLmFwaUtleSA9IFwiXCI7XG5cdFx0dGhpcy5hcGlVcmwgPSBcIlwiO1xuXHR9XG5cbiAgICBpbml0KGtleTogc3RyaW5nLCB1cmw6IHN0cmluZykge1xuICAgICAgICB0aGlzLmFwaUtleSA9IGtleTtcbiAgICAgICAgdGhpcy5hcGlVcmwgPSB1cmw7XG5cbiAgICAgICAgaWYgKHRoaXMuYXBpS2V5ID09PSBcImludGVybmFsX2Vycm9yXCIpIHtcblx0XHRcdEVsZW1lbnRVdGlsLmhpZGVMb2FkZXIoKTtcblx0XHRcdGFsZXJ0KFwiRmFpbGVkIHRvIGdldCBhIHJlYWQtb25seSBBUEkga2V5IHRvIGRpc3BsYXkgeW91ciBjYWxlbmRhci4gXFxuXCIgK1xuXHRcdFx0XHRcIklmIHlvdSBrZWVwIHJlY2VpdmluZyB0aGlzIGVycm9yLCBwbGVhc2UgY29udGFjdCB0aGUgZGV2ZWxvcGVyc1wiKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHQvL1JlcXVlc3QgY2FsZW5kYXIgaW5mb3JtYXRpb25cblx0XHRcdGxldCBjYWxSZXEgPSBuZXcgQ2FsZW5kYXJHZXRSZXF1ZXN0KHRoaXMuZ3VpbGRJZCwgdGhpcy5jYWxOdW1iZXIsIHRoaXMpO1xuXHRcdFx0Y2FsUmVxLnByb3ZpZGVBcGlEZXRhaWxzKHRoaXMuYXBpS2V5LCB0aGlzLmFwaVVybCk7XG5cblx0XHRcdC8vRXhlY3V0ZSB0aGUgY2FsbHNcblx0XHRcdHRoaXMuc2V0TW9udGgodGhpcy5zZWxlY3RlZERhdGUpO1xuXG5cdFx0XHRjYWxSZXEuZXhlY3V0ZSgpO1xuXHRcdFx0dGhpcy5nZXRFdmVudHNGb3JNb250aCgpO1xuXHRcdH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cblxuICAgIC8vVXRpbGl0eSBtZXRob2RzIGZvciBkYXRhIHRvIGh1bWFuIHJlYWRhYmxlIGNvbnZlcnNpb25zXG4gICAgZ2V0TW9udGhOYW1lKGluZGV4OiBudW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIFtcIkphbnVhcnlcIiwgXCJGZWJydWFyeVwiLCBcIk1hcmNoXCIsXG4gICAgICAgICAgICBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLFxuICAgICAgICAgICAgXCJKdWx5XCIsIFwiQXVndXN0XCIsIFwiU2VwdGVtYmVyXCIsXG4gICAgICAgICAgICBcIk9jdG9iZXJcIiwgXCJOb3ZlbWJlclwiLCBcIkRlY2VtYmVyXCJdW2luZGV4XTtcbiAgICB9XG5cbiAgICBnZXREYXlOYW1lKGluZGV4OiBudW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIFtcIlN1bmRheVwiLCBcIk1vbmRheVwiLFxuICAgICAgICAgICAgXCJUdWVzZGF5XCIsIFwiV2VkbmVzZGF5XCIsXG4gICAgICAgICAgICBcIlRodXJzZGF5XCIsIFwiRnJpZGF5XCIsXG4gICAgICAgICAgICBcIlNhdHVyZGF5XCJdW2luZGV4XTtcbiAgICB9XG5cbiAgICBkYXRlRGlzcGxheXMoKSB7XG4gICAgICAgIC8vVGhpcyBpcyBhbGwgb2YgdGhlIElEcyBmb3IgdGhlIGRhdGUgZGlzcGxheXMsIGluIHJvdyBOLCBjb2x1bW4gWCBzaG9ydGhhbmQuXG4gICAgICAgIHJldHVybiBbXCJyMWMxXCIsIFwicjFjMlwiLCBcInIxYzNcIiwgXCJyMWM0XCIsIFwicjFjNVwiLCBcInIxYzZcIiwgXCJyMWM3XCIsXG4gICAgICAgICAgICBcInIyYzFcIiwgXCJyMmMyXCIsIFwicjJjM1wiLCBcInIyYzRcIiwgXCJyMmM1XCIsIFwicjJjNlwiLCBcInIyYzdcIixcbiAgICAgICAgICAgIFwicjNjMVwiLCBcInIzYzJcIiwgXCJyM2MzXCIsIFwicjNjNFwiLCBcInIzYzVcIiwgXCJyM2M2XCIsIFwicjNjN1wiLFxuICAgICAgICAgICAgXCJyNGMxXCIsIFwicjRjMlwiLCBcInI0YzNcIiwgXCJyNGM0XCIsIFwicjRjNVwiLCBcInI0YzZcIiwgXCJyNGM3XCIsXG4gICAgICAgICAgICBcInI1YzFcIiwgXCJyNWMyXCIsIFwicjVjM1wiLCBcInI1YzRcIiwgXCJyNWM1XCIsIFwicjVjNlwiLCBcInI1YzdcIixcbiAgICAgICAgICAgIFwicjZjMVwiLCBcInI2YzJcIiwgXCJyNmMzXCIsIFwicjZjNFwiLCBcInI2YzVcIiwgXCJyNmM2XCIsIFwicjZjN1wiXTtcbiAgICB9XG5cbiAgICBkYXlzSW5Nb250aCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMuc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCksIHRoaXMuc2VsZWN0ZWREYXRlLmdldE1vbnRoKCkgKyAxLCAwKS5nZXREYXRlKCk7XG4gICAgfVxuXG4gICAgLy9IYW5kbGluZyBzb21lIGRpc3BsYXkgbm9uc2Vuc2VcbiAgICBkYXRlRGlzcGxheXNUb0NoYW5nZShzdHI6IHN0cmluZykge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRlRGlzcGxheXMoKS5zbGljZSh0aGlzLmRhdGVEaXNwbGF5cygpLmluZGV4T2Yoc3RyKSwgdGhpcy5kYXRlRGlzcGxheXMoKS5sZW5ndGggLSAxKTtcbiAgICB9XG5cbiAgICBmaW5kRmlyc3REYXlPZk1vbnRoUG9zaXRpb24oKSB7XG4gICAgICAgIGxldCBmaXJzdERheSA9IG5ldyBEYXRlKHRoaXMuc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCksIHRoaXMuc2VsZWN0ZWREYXRlLmdldE1vbnRoKCksIDEpO1xuXG4gICAgICAgIGxldCBmaXJzdERheU5hbWUgPSB0aGlzLmdldERheU5hbWUoZmlyc3REYXkuZ2V0RGF5KCkpO1xuXG4gICAgICAgIHN3aXRjaCAoZmlyc3REYXlOYW1lKSB7XG4gICAgICAgICAgICBjYXNlIFwiU3VuZGF5XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwicjFjMVwiO1xuICAgICAgICAgICAgY2FzZSBcIk1vbmRheVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBcInIxYzJcIjtcbiAgICAgICAgICAgIGNhc2UgXCJUdWVzZGF5XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwicjFjM1wiO1xuICAgICAgICAgICAgY2FzZSBcIldlZG5lc2RheVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBcInIxYzRcIjtcbiAgICAgICAgICAgIGNhc2UgXCJUaHVyc2RheVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBcInIxYzVcIjtcbiAgICAgICAgICAgIGNhc2UgXCJGcmlkYXlcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJyMWM2XCI7XG4gICAgICAgICAgICBjYXNlIFwiU2F0dXJkYXlcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJyMWM3XCI7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gXCJyMWMxXCI7XG4gICAgfVxuXG4gICAgY2hhbmdlUmVjdXJyZW5jZUVkaXREaXNwbGF5cyhjaGVja2JveDogSFRNTElucHV0RWxlbWVudCkge1xuICAgICAgICBsZXQgZXZlbnRJZCA9IGNoZWNrYm94LmlkLnNwbGl0KFwiLVwiKVsxXTtcbiAgICAgICAgaWYgKGNoZWNrYm94LmNoZWNrZWQpIHtcbiAgICAgICAgICAgIC8vRW5hYmxlIHJlY3VyIGlucHV0XG4gICAgICAgICAgICAoPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlZGl0RnJlcXVlbmN5LVwiICsgZXZlbnRJZCkpLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAoPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlZGl0Q291bnQtXCIgKyBldmVudElkKSkuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICg8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVkaXRJbnRlcnZhbC1cIiArIGV2ZW50SWQpKS5kaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvL0Rpc2FibGUgcmVjdXIgaW5wdXRcbiAgICAgICAgICAgICg8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVkaXRGcmVxdWVuY3ktXCIgKyBldmVudElkKSkuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgKDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWRpdENvdW50LVwiICsgZXZlbnRJZCkpLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICg8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVkaXRJbnRlcnZhbC1cIiArIGV2ZW50SWQpKS5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvL0FjdHVhbGx5IGhhbmRsaW5nIGNhbGVuZGFyIGFjdGl2aXRpZXNcbiAgICBzZXRNb250aChkYXRlOiBEYXRlKSB7XG5cbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb250aC1kaXNwbGF5XCIpIS5pbm5lckhUTUwgPSB0aGlzLmdldE1vbnRoTmFtZShkYXRlLmdldE1vbnRoKCkpICsgXCIgXCIgKyBkYXRlLmdldEZ1bGxZZWFyKCk7XG5cbiAgICAgICAgdGhpcy5kaXNwbGF5cyA9IFtdO1xuXG4gICAgICAgIGxldCB0Y2MgPSB0aGlzLmRhdGVEaXNwbGF5cygpO1xuICAgICAgICBmb3IgKGxldCBpaSA9IDA7IGlpIDwgdGNjLmxlbmd0aDsgaWkrKykge1xuICAgICAgICAgICAgbGV0IGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0Y2NbaWldKSE7XG4gICAgICAgICAgICBlLmlubmVySFRNTCA9IFwiXCI7XG5cdFx0XHRlLmNsYXNzTmFtZSA9IFwiY2FsLWRhdGVcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB0YyA9IHRoaXMuZGF0ZURpc3BsYXlzVG9DaGFuZ2UodGhpcy5maW5kRmlyc3REYXlPZk1vbnRoUG9zaXRpb24oKSk7XG4gICAgICAgIGxldCBjb3VudCA9IHRoaXMuZGF5c0luTW9udGgoKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0Yy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IGQgPSBpICsgMTtcbiAgICAgICAgICAgIGlmIChkIDw9IGNvdW50KSB7XG4gICAgICAgICAgICAgICAgbGV0IGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGNbaV0pITtcbiAgICAgICAgICAgICAgICBlbC5pbm5lckhUTUwgPSBkICsgXCJcIjtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXlzW2RdID0gdGNbaV07XG5cbiAgICAgICAgICAgICAgICBsZXQgdGhpc0RhdGUgPSBuZXcgRGF0ZSh0aGlzLnNlbGVjdGVkRGF0ZS5nZXRGdWxsWWVhcigpLCB0aGlzLnNlbGVjdGVkRGF0ZS5nZXRNb250aCgpLCBkKTtcbiAgICAgICAgICAgICAgICBpZiAoZCA9PT0gdGhpcy5zZWxlY3RlZERhdGUuZ2V0RGF0ZSgpKSB7XG5cdFx0XHRcdFx0ZWwuY2xhc3NOYW1lID0gXCJzZWxlY3RlZCBjYWwtZGF0ZVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpc0RhdGUuZ2V0TW9udGgoKSA9PT0gdGhpcy50b2RheXNEYXRlLmdldE1vbnRoKClcbiAgICAgICAgICAgICAgICAgICAgJiYgdGhpc0RhdGUuZ2V0RnVsbFllYXIoKSA9PT0gdGhpcy50b2RheXNEYXRlLmdldEZ1bGxZZWFyKClcbiAgICAgICAgICAgICAgICAgICAgJiYgdGhpc0RhdGUuZ2V0RGF0ZSgpID09PSB0aGlzLnRvZGF5c0RhdGUuZ2V0RGF0ZSgpKSB7XG5cdFx0XHRcdFx0aWYgKGVsLmNsYXNzTGlzdC5jb250YWlucyhcInNlbGVjdGVkXCIpKSB7XG5cdFx0XHRcdFx0XHRlbC5jbGFzc05hbWUgPSBcInRvZGF5IHNlbGVjdGVkIGNhbC1kYXRlXCI7XG5cdFx0XHRcdFx0XHQvL2dldCBldmVudHMgZm9yIGl0XG5cdFx0XHRcdFx0XHR0aGlzLmdldEV2ZW50c0ZvclNlbGVjdGVkRGF0ZSgpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRlbC5jbGFzc05hbWUgPSBcInRvZGF5IGNhbC1kYXRlXCI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXRFdmVudHNGb3JNb250aCgpIHtcbiAgICAgICAgbGV0IGRzID0gbmV3IERhdGUodGhpcy5zZWxlY3RlZERhdGUuZ2V0RnVsbFllYXIoKSwgdGhpcy5zZWxlY3RlZERhdGUuZ2V0TW9udGgoKSwgMSk7XG4gICAgICAgIGRzLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuXG4gICAgICAgIGxldCBldmVudFJlcSA9IG5ldyBFdmVudExpc3RNb250aFJlcXVlc3QodGhpcy5ndWlsZElkLCB0aGlzLmNhbE51bWJlcixcbiAgICAgICAgICAgIHRoaXMuZGF5c0luTW9udGgoKSwgZHMuZ2V0VGltZSgpLCB0aGlzKTtcblxuICAgICAgICBldmVudFJlcS5wcm92aWRlQXBpRGV0YWlscyh0aGlzLmFwaUtleSwgdGhpcy5hcGlVcmwpO1xuXG4gICAgICAgIGV2ZW50UmVxLmV4ZWN1dGUoKTtcbiAgICB9XG5cbiAgICBnZXRFdmVudHNGb3JTZWxlY3RlZERhdGUoKSB7XG5cdFx0bGV0IGRzID0gbmV3IERhdGUodGhpcy5zZWxlY3RlZERhdGUuZ2V0RnVsbFllYXIoKSwgdGhpcy5zZWxlY3RlZERhdGUuZ2V0TW9udGgoKSwgdGhpcy5zZWxlY3RlZERhdGUuZ2V0RGF0ZSgpKTtcblx0XHRkcy5zZXRIb3VycygwLCAwLCAwLCAwKTtcblxuXHRcdEVsZW1lbnRVdGlsLmhpZGVFdmVudHNDb250YWluZXIoKTtcblxuXHRcdGxldCBldmVudFJlcSA9IG5ldyBFdmVudExpc3REYXRlUmVxdWVzdCh0aGlzLmd1aWxkSWQsIHRoaXMuY2FsTnVtYmVyLCBkcy5nZXRUaW1lKCksIHRoaXMpO1xuXHRcdGV2ZW50UmVxLnByb3ZpZGVBcGlEZXRhaWxzKHRoaXMuYXBpS2V5LCB0aGlzLmFwaVVybCk7XG5cblx0XHRldmVudFJlcS5leGVjdXRlKCk7XG5cdH1cblxuICAgIG9uQ2FsbGJhY2soc3RhdHVzOiBOZXR3b3JrQ2FsbFN0YXR1cyk6IHZvaWQge1xuICAgICAgICBpZiAoc3RhdHVzLmlzU3VjY2Vzcykge1xuICAgICAgICAgICAgc3dpdGNoIChzdGF0dXMudHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgVGFza1R5cGUuQ0FMRU5EQVJfR0VUOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGVuZGFyRGF0YSA9IG5ldyBXZWJDYWxlbmRhcigpLmZyb21Kc29uKHN0YXR1cy5ib2R5KTtcblxuICAgICAgICAgICAgICAgICAgICAoPEhUTUxMaW5rRWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXctb24tZ29vZ2xlLWJ1dHRvblwiKSlcblx0XHRcdFx0XHRcdC5ocmVmID0gXCJodHRwczovL2NhbGVuZGFyLmdvb2dsZS5jb20vY2FsZW5kYXIvZW1iZWQ/c3JjPVwiXG5cdFx0XHRcdFx0XHQrIHRoaXMuY2FsZW5kYXJEYXRhLmFkZHJlc3M7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgVGFza1R5cGUuRVZFTlRfTElTVF9NT05USDpcblx0XHRcdFx0XHQvL0Rpc3BsYXkgdGhlIGV2ZW50IGNvdW50cyBvbiB0aGUgY2FsZW5kYXIuLi5cblx0XHRcdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHN0YXR1cy5ib2R5LmV2ZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdFx0bGV0IGQgPSBuZXcgRGF0ZShzdGF0dXMuYm9keS5ldmVudHNbaV0uZXBvY2hfc3RhcnQpO1xuXG5cdFx0XHRcdFx0XHRsZXQgZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuZGlzcGxheXNbZC5nZXREYXRlKCldKSE7XG5cblx0XHRcdFx0XHRcdGlmIChlLmlubmVySFRNTC5pbmRleE9mKFwiW1wiKSA9PT0gLTEpIHtcblx0XHRcdFx0XHRcdFx0ZS5pbm5lckhUTUwgPSBkLmdldERhdGUoKSArIFwiWzFdXCI7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRlLmlubmVySFRNTCA9IGQuZ2V0RGF0ZSgpLnRvU3RyaW5nKClcblx0XHRcdFx0XHRcdFx0XHQrIFwiW1wiICsgKHBhcnNlSW50KGUuaW5uZXJIVE1MLnNwbGl0KFwiW1wiKVsxXVswXSkgKyAxKS50b1N0cmluZygpICsgXCJdXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdEVsZW1lbnRVdGlsLmhpZGVMb2FkZXIoKTtcblx0XHRcdFx0XHRFbGVtZW50VXRpbC5zaG93Q2FsZW5kYXJDb250YWluZXIoKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBUYXNrVHlwZS5FVkVOVF9MSVNUX0RBVEU6XG5cdFx0XHRcdFx0RW1iZWRDYWxlbmRhci5sb2FkRXZlbnREaXNwbGF5KHN0YXR1cyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdFNuYWNrYmFyLnNob3dTbmFja2JhcihcIkVSUk9SXSBcIiArIHN0YXR1cy5tZXNzYWdlKTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIHN0YXRpYyBsb2FkRXZlbnREaXNwbGF5KHN0YXR1czogTmV0d29ya0NhbGxTdGF0dXMpIHtcblx0XHQvL0Rpc3BsYXkgdGhlIHNlbGVjdGVkIGRheSdzIGV2ZW50IGRldGFpbHMgZm9yIGVkaXRpbmcgYW5kIHN1Y2guXG5cdFx0bGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXZlbnRzLWNvbnRhaW5lclwiKSE7XG5cblx0XHR3aGlsZSAoY29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcblx0XHRcdGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBzdGF0dXMuYm9keS5ldmVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGxldCBldmVudCA9IG5ldyBFdmVudCgpLmZyb21Kc29uKHN0YXR1cy5ib2R5LmV2ZW50c1tpXSk7XG5cblx0XHRcdC8vQ3JlYXRlIFZpZXcgQnV0dG9uXG5cdFx0XHRsZXQgdmlld0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG5cdFx0XHR2aWV3QnV0dG9uLnR5cGUgPSBcImJ1dHRvblwiO1xuXHRcdFx0dmlld0J1dHRvbi5jbGFzc05hbWUgPVxuXHRcdFx0XHRcImJ0biBiZy1kaXNjb3JkLWJsdXJwbGUgYnRuLWRpc2NvcmQgYnRuLWJsb2NrIFwiICtcblx0XHRcdFx0XCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZSBldmVudC12aWV3LWJ0blwiO1xuXHRcdFx0dmlld0J1dHRvbi5zZXRBdHRyaWJ1dGUoXCJkYXRhLXRvZ2dsZVwiLCBcIm1vZGFsXCIpO1xuXHRcdFx0dmlld0J1dHRvbi5zZXRBdHRyaWJ1dGUoXCJkYXRhLXRhcmdldFwiLCBcIiNtb2RhbC1cIiArIGV2ZW50LmV2ZW50SWQpO1xuXHRcdFx0dmlld0J1dHRvbi5pbm5lckhUTUwgPSBcIlZpZXcgXCIgKyBldmVudC5zdW1tYXJ5O1xuXHRcdFx0Y29udGFpbmVyLmFwcGVuZENoaWxkKHZpZXdCdXR0b24pO1xuXG5cdFx0XHRjb250YWluZXIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblx0XHRcdGNvbnRhaW5lci5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG5cdFx0XHQvL0NyZWF0ZSBtb2RhbCBjb250YWluZXJcblx0XHRcdGxldCBtb2RhbENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0XHRtb2RhbENvbnRhaW5lci5jbGFzc05hbWUgPSBcIm1vZGFsIGZhZGVcIjtcblx0XHRcdG1vZGFsQ29udGFpbmVyLmlkID0gXCJtb2RhbC1cIiArIGV2ZW50LmV2ZW50SWQ7XG5cdFx0XHQvLyBAdHMtaWdub3JlXG5cdFx0XHRtb2RhbENvbnRhaW5lci5yb2xlID0gXCJkaWFsb2dcIjtcblx0XHRcdGNvbnRhaW5lci5hcHBlbmRDaGlsZChtb2RhbENvbnRhaW5lcik7XG5cblx0XHRcdC8vQ3JlYXRlIG1vZGFsLWRpYWxvZ1xuXHRcdFx0bGV0IG1vZGFsRGlhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblx0XHRcdG1vZGFsRGlhLmNsYXNzTmFtZSA9IFwibW9kYWwtZGlhbG9nXCI7XG5cdFx0XHRtb2RhbENvbnRhaW5lci5hcHBlbmRDaGlsZChtb2RhbERpYSk7XG5cblx0XHRcdC8vQ3JlYXRlIE1vZGFsIENvbnRlbnRcblx0XHRcdGxldCBtb2RhbENvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0XHRtb2RhbENvbi5jbGFzc05hbWUgPSBcIm1vZGFsLWNvbnRlbnQgYmctZGlzY2FsLW5vdC1ibGFja1wiO1xuXHRcdFx0bW9kYWxEaWEuYXBwZW5kQ2hpbGQobW9kYWxDb24pO1xuXG5cdFx0XHQvL0NyZWF0ZSBtb2RhbCBoZWFkZXIgYW5kIHRpdGxlXG5cdFx0XHRsZXQgbW9kYWxIZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXHRcdFx0bW9kYWxIZWFkZXIuY2xhc3NOYW1lID0gXCJtb2RhbC1oZWFkZXIgYmctZGlzY2FsLW5vdC1ibGFja1wiO1xuXHRcdFx0bW9kYWxDb24uYXBwZW5kQ2hpbGQobW9kYWxIZWFkZXIpO1xuXHRcdFx0bGV0IG1vZGFsVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDRcIik7XG5cdFx0XHRtb2RhbFRpdGxlLmNsYXNzTmFtZSA9IFwibW9kYWwtdGl0bGUgdGV4dC1kaXNjb3JkLWJsdXJwbGUgdGV4dC1jZW50ZXJcIjtcblx0XHRcdG1vZGFsVGl0bGUuaW5uZXJIVE1MID0gXCJWaWV3aW5nIEV2ZW50XCI7XG5cdFx0XHRtb2RhbEhlYWRlci5hcHBlbmRDaGlsZChtb2RhbFRpdGxlKTtcblxuXHRcdFx0Ly9DcmVhdGUgTW9kYWwgQm9keVxuXHRcdFx0bGV0IG1vZGFsQm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0XHRtb2RhbEJvZHkuY2xhc3NOYW1lID0gXCJtb2RhbC1ib2R5XCI7XG5cdFx0XHRtb2RhbENvbi5hcHBlbmRDaGlsZChtb2RhbEJvZHkpO1xuXG5cdFx0XHRsZXQgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuXHRcdFx0bW9kYWxCb2R5LmFwcGVuZENoaWxkKGZvcm0pO1xuXG5cdFx0XHQvL1N1bW1hcnlcblx0XHRcdGxldCBzdW1tYXJ5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRzdW1tYXJ5TGFiZWwuaW5uZXJIVE1MID0gXCJTdW1tYXJ5XCI7XG5cdFx0XHRzdW1tYXJ5TGFiZWwuY2xhc3NOYW1lID0gXCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZVwiO1xuXHRcdFx0c3VtbWFyeUxhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG5cdFx0XHRmb3JtLmFwcGVuZENoaWxkKHN1bW1hcnlMYWJlbCk7XG5cdFx0XHRsZXQgc3VtbWFyeSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcblx0XHRcdHN1bW1hcnkubmFtZSA9IFwic3VtbWFyeVwiO1xuXHRcdFx0c3VtbWFyeS50eXBlID0gXCJ0ZXh0XCI7XG5cdFx0XHQvLyBub2luc3BlY3Rpb24gSlNEZXByZWNhdGVkU3ltYm9sc1xuXHRcdFx0c3VtbWFyeS52YWx1ZSA9IGV2ZW50LnN1bW1hcnk7XG5cdFx0XHRzdW1tYXJ5LmlkID0gXCJlZGl0U3VtbWFyeS1cIiArIGV2ZW50LmV2ZW50SWQ7XG5cdFx0XHRzdW1tYXJ5LnJlYWRPbmx5ID0gdHJ1ZTtcblx0XHRcdHN1bW1hcnlMYWJlbC5hcHBlbmRDaGlsZChzdW1tYXJ5KTtcblx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblxuXHRcdFx0Ly9EZXNjcmlwdGlvblxuXHRcdFx0bGV0IGRlc2NyaXB0aW9uTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRkZXNjcmlwdGlvbkxhYmVsLmlubmVySFRNTCA9IFwiRGVzY3JpcHRpb25cIjtcblx0XHRcdGRlc2NyaXB0aW9uTGFiZWwuY2xhc3NOYW1lID0gXCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZVwiO1xuXHRcdFx0ZGVzY3JpcHRpb25MYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbkxhYmVsKTtcblx0XHRcdGxldCBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcblx0XHRcdGRlc2NyaXB0aW9uLm5hbWUgPSBcImVkaXQtZGVzY3JpcHRpb25cIjtcblx0XHRcdGRlc2NyaXB0aW9uLnR5cGUgPSBcInRleHRcIjtcblx0XHRcdGRlc2NyaXB0aW9uLnZhbHVlID0gZXZlbnQuZGVzY3JpcHRpb247XG5cdFx0XHRkZXNjcmlwdGlvbi5pZCA9IFwiZWRpdERlc2NyaXB0aW9uLVwiICsgZXZlbnQuZXZlbnRJZDtcblx0XHRcdGRlc2NyaXB0aW9uLnJlYWRPbmx5ID0gdHJ1ZTtcblx0XHRcdGRlc2NyaXB0aW9uTGFiZWwuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb24pO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG5cdFx0XHQvL1N0YXJ0IGRhdGUgYW5kIHRpbWVcblx0XHRcdGxldCBzZCA9IG5ldyBEYXRlKGV2ZW50LmVwb2NoU3RhcnQpO1xuXHRcdFx0bGV0IHN0YXJ0TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRzdGFydExhYmVsLmlubmVySFRNTCA9IFwiU3RhcnQgRGF0ZSBhbmQgVGltZVwiO1xuXHRcdFx0c3RhcnRMYWJlbC5jbGFzc05hbWUgPSBcInRleHQtZGlzY29yZC1mdWxsLXdoaXRlXCI7XG5cdFx0XHRzdGFydExhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG5cdFx0XHRmb3JtLmFwcGVuZENoaWxkKHN0YXJ0TGFiZWwpO1xuXHRcdFx0bGV0IHN0YXJ0RGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcblx0XHRcdHN0YXJ0RGF0ZS5uYW1lID0gXCJzdGFydC1kYXRlXCI7XG5cdFx0XHRzdGFydERhdGUudHlwZSA9IFwiZGF0ZVwiO1xuXHRcdFx0c3RhcnREYXRlLnZhbHVlQXNEYXRlID0gc2Q7XG5cdFx0XHRzdGFydERhdGUuaWQgPSBcImVkaXRTdGFydERhdGUtXCIgKyBldmVudC5ldmVudElkO1xuXHRcdFx0c3RhcnREYXRlLnJlYWRPbmx5ID0gdHJ1ZTtcblx0XHRcdHN0YXJ0TGFiZWwuYXBwZW5kQ2hpbGQoc3RhcnREYXRlKTtcblx0XHRcdGxldCBzdGFydFRpbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRzdGFydFRpbWUubmFtZSA9IFwic3RhcnQtdGltZVwiO1xuXHRcdFx0c3RhcnRUaW1lLnR5cGUgPSBcInRpbWVcIjtcblx0XHRcdHN0YXJ0VGltZS52YWx1ZSA9IChzZC5nZXRIb3VycygpIDwgMTAgPyBcIjBcIiA6IFwiXCIpICsgc2QuZ2V0SG91cnMoKSArIFwiOlwiICsgKHNkLmdldE1pbnV0ZXMoKSA8IDEwID8gXCIwXCIgOiBcIlwiKSArIHNkLmdldE1pbnV0ZXMoKTtcblx0XHRcdHN0YXJ0VGltZS5pZCA9IFwiZWRpdFN0YXJ0VGltZS1cIiArIGV2ZW50LmV2ZW50SWQ7XG5cdFx0XHRzdGFydFRpbWUucmVhZE9ubHkgPSB0cnVlO1xuXHRcdFx0c3RhcnRMYWJlbC5hcHBlbmRDaGlsZChzdGFydFRpbWUpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG5cdFx0XHQvL0VuZCBkYXRlIGFuZCB0aW1lXG5cdFx0XHRsZXQgZWQgPSBuZXcgRGF0ZShldmVudC5lcG9jaEVuZCk7XG5cdFx0XHRsZXQgZW5kTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRlbmRMYWJlbC5pbm5lckhUTUwgPSBcIkVuZCBEYXRlIGFuZCBUaW1lXCI7XG5cdFx0XHRlbmRMYWJlbC5jbGFzc05hbWUgPSBcInRleHQtZGlzY29yZC1mdWxsLXdoaXRlXCI7XG5cdFx0XHRlbmRMYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChlbmRMYWJlbCk7XG5cdFx0XHRsZXQgZW5kRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcblx0XHRcdGVuZERhdGUubmFtZSA9IFwiZW5kLWRhdGVcIjtcblx0XHRcdGVuZERhdGUudHlwZSA9IFwiZGF0ZVwiO1xuXHRcdFx0ZW5kRGF0ZS52YWx1ZUFzRGF0ZSA9IGVkO1xuXHRcdFx0ZW5kRGF0ZS5pZCA9IFwiZWRpdEVuZERhdGUtXCIgKyBldmVudC5ldmVudElkO1xuXHRcdFx0ZW5kRGF0ZS5yZWFkT25seSA9IHRydWU7XG5cdFx0XHRlbmRMYWJlbC5hcHBlbmRDaGlsZChlbmREYXRlKTtcblx0XHRcdGxldCBlbmRUaW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuXHRcdFx0ZW5kVGltZS5uYW1lID0gXCJlbmQtdGltZVwiO1xuXHRcdFx0ZW5kVGltZS50eXBlID0gXCJ0aW1lXCI7XG5cdFx0XHRlbmRUaW1lLnZhbHVlID0gKGVkLmdldEhvdXJzKCkgPCAxMCA/IFwiMFwiIDogXCJcIikgKyBlZC5nZXRIb3VycygpICsgXCI6XCIgKyAoZWQuZ2V0TWludXRlcygpIDwgMTAgPyBcIjBcIiA6IFwiXCIpICsgZWQuZ2V0TWludXRlcygpO1xuXHRcdFx0ZW5kVGltZS5pZCA9IFwiZWRpdEVuZFRpbWUtXCIgKyBldmVudC5ldmVudElkO1xuXHRcdFx0ZW5kVGltZS5yZWFkT25seSA9IHRydWU7XG5cdFx0XHRlbmRMYWJlbC5hcHBlbmRDaGlsZChlbmRUaW1lKTtcblx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblxuXHRcdFx0Ly9Mb2NhdGlvblxuXHRcdFx0bGV0IGxvY2F0aW9uTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRsb2NhdGlvbkxhYmVsLmlubmVySFRNTCA9IFwiTG9jYXRpb25cIjtcblx0XHRcdGxvY2F0aW9uTGFiZWwuY2xhc3NOYW1lID0gXCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZVwiO1xuXHRcdFx0bG9jYXRpb25MYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChsb2NhdGlvbkxhYmVsKTtcblx0XHRcdGxldCBsb2NhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcblx0XHRcdGxvY2F0aW9uLm5hbWUgPSBcImxvY2F0aW9uXCI7XG5cdFx0XHRsb2NhdGlvbi50eXBlID0gXCJ0ZXh0XCI7XG5cdFx0XHRsb2NhdGlvbi52YWx1ZSA9IGV2ZW50LmxvY2F0aW9uO1xuXHRcdFx0bG9jYXRpb24uaWQgPSBcImVkaXRMb2NhdGlvbi1cIiArIGV2ZW50LmV2ZW50SWQ7XG5cdFx0XHRsb2NhdGlvbi5yZWFkT25seSA9IHRydWU7XG5cdFx0XHRsb2NhdGlvbkxhYmVsLmFwcGVuZENoaWxkKGxvY2F0aW9uKTtcblx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblxuXHRcdFx0Ly9Db2xvclxuXHRcdFx0bGV0IGNvbG9yTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRjb2xvckxhYmVsLmlubmVySFRNTCA9IFwiQ29sb3JcIjtcblx0XHRcdGNvbG9yTGFiZWwuY2xhc3NOYW1lID0gXCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZVwiO1xuXHRcdFx0Y29sb3JMYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChjb2xvckxhYmVsKTtcblx0XHRcdGxldCBjb2xvclNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG5cdFx0XHRjb2xvclNlbGVjdC5uYW1lID0gXCJjb2xvclwiO1xuXHRcdFx0Y29sb3JTZWxlY3QuaWQgPSBcImVkaXRDb2xvci1cIiArIGV2ZW50LmV2ZW50SWQ7XG5cdFx0XHRjb2xvclNlbGVjdC5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRjb2xvckxhYmVsLmFwcGVuZENoaWxkKGNvbG9yU2VsZWN0KTtcblxuXHRcdFx0Zm9yIChsZXQgZWMgaW4gRXZlbnRDb2xvcikge1xuXHRcdFx0XHRsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcblx0XHRcdFx0b3B0aW9uLnZhbHVlID0gRXZlbnRDb2xvcltlY107XG5cdFx0XHRcdG9wdGlvbi50ZXh0ID0gRXZlbnRDb2xvcltlY107XG5cdFx0XHRcdG9wdGlvbi5zZWxlY3RlZCA9IChFdmVudENvbG9yW2V2ZW50LmNvbG9yXSA9PT0gRXZlbnRDb2xvcltlY10pO1xuXHRcdFx0XHRjb2xvclNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xuXHRcdFx0fVxuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG4gICAgICAgICAgICBpZiAoZXZlbnQuZG9lc1JlY3VyKSB7XG5cdFx0XHRcdC8vUmVjdXJyZW5jZVxuXHRcdFx0XHRsZXQgcmVjdXJyZW5jZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuXHRcdFx0XHRyZWN1cnJlbmNlTGFiZWwuaW5uZXJIVE1MID0gXCJSZWN1cnJlbmNlXCI7XG5cdFx0XHRcdHJlY3VycmVuY2VMYWJlbC5jbGFzc05hbWUgPSBcInRleHQtZGlzY29yZC1mdWxsLXdoaXRlXCI7XG5cdFx0XHRcdHJlY3VycmVuY2VMYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0XHRmb3JtLmFwcGVuZENoaWxkKHJlY3VycmVuY2VMYWJlbCk7XG5cblx0XHRcdFx0aWYgKGV2ZW50LmlzUGFyZW50KSB7XG5cdFx0XHRcdFx0bGV0IGVuYWJsZVJlY3VycmVuY2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRcdFx0ZW5hYmxlUmVjdXJyZW5jZS5uYW1lID0gXCJlbmFibGUtcmVjdXJyZW5jZVwiO1xuXHRcdFx0XHRcdGVuYWJsZVJlY3VycmVuY2UudHlwZSA9IFwiY2hlY2tib3hcIjtcblx0XHRcdFx0XHRlbmFibGVSZWN1cnJlbmNlLmNoZWNrZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRlbmFibGVSZWN1cnJlbmNlLnJlYWRPbmx5ID0gdHJ1ZTtcblx0XHRcdFx0XHRlbmFibGVSZWN1cnJlbmNlLmlkID0gXCJlZGl0RW5hYmxlUmVjdXItXCIgKyBldmVudC5ldmVudElkO1xuXHRcdFx0XHRcdHJlY3VycmVuY2VMYWJlbC5hcHBlbmRDaGlsZChlbmFibGVSZWN1cnJlbmNlKTtcblx0XHRcdFx0XHRmb3JtLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG5cdFx0XHRcdFx0Ly9GcmVxdWVuY3lcblx0XHRcdFx0XHRsZXQgZnJlcXVlbmN5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRcdFx0ZnJlcXVlbmN5TGFiZWwuaW5uZXJIVE1MID0gXCJSZWN1cnJlbmNlIC0gRnJlcXVlbmN5XCI7XG5cdFx0XHRcdFx0ZnJlcXVlbmN5TGFiZWwuY2xhc3NOYW1lID0gXCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZVwiO1xuXHRcdFx0XHRcdGZyZXF1ZW5jeUxhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChmcmVxdWVuY3lMYWJlbCk7XG5cdFx0XHRcdFx0bGV0IGZyZXFTZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xuXHRcdFx0XHRcdGZyZXFTZWxlY3QubmFtZSA9IFwiZnJlcXVlbmN5XCI7XG5cdFx0XHRcdFx0ZnJlcVNlbGVjdC5pZCA9IFwiZWRpdEZyZXF1ZW5jeS1cIiArIGV2ZW50LmV2ZW50SWQ7XG5cdFx0XHRcdFx0ZnJlcXVlbmN5TGFiZWwuYXBwZW5kQ2hpbGQoZnJlcVNlbGVjdCk7XG5cblx0XHRcdFx0XHRmb3IgKGxldCBmIGluIEV2ZW50RnJlcXVlbmN5KSB7XG5cdFx0XHRcdFx0XHRsZXQgb3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuXHRcdFx0XHRcdFx0b3AudmFsdWUgPSBFdmVudEZyZXF1ZW5jeVtmXTtcblx0XHRcdFx0XHRcdG9wLnRleHQgPSBFdmVudEZyZXF1ZW5jeVtmXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wLnNlbGVjdGVkID0gKEV2ZW50RnJlcXVlbmN5W2V2ZW50LnJlY3VycmVuY2UuZnJlcXVlbmN5XSA9PT0gRXZlbnRGcmVxdWVuY3lbZl0pO1xuXHRcdFx0XHRcdFx0ZnJlcVNlbGVjdC5hcHBlbmRDaGlsZChvcCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZnJlcVNlbGVjdC5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRcdFx0ZnJlcXVlbmN5TGFiZWwuYXBwZW5kQ2hpbGQoZnJlcVNlbGVjdCk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblxuXHRcdFx0XHRcdC8vQ291bnRcblx0XHRcdFx0XHRsZXQgY291bnRMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcblx0XHRcdFx0XHRjb3VudExhYmVsLmlubmVySFRNTCA9IFwiUmVjdXJyZW5jZSAtIENvdW50XCI7XG5cdFx0XHRcdFx0Y291bnRMYWJlbC5jbGFzc05hbWUgPSBcInRleHQtZGlzY29yZC1mdWxsLXdoaXRlXCI7XG5cdFx0XHRcdFx0Y291bnRMYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoY291bnRMYWJlbCk7XG5cdFx0XHRcdFx0bGV0IGNvdW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuXHRcdFx0XHRcdGNvdW50Lm5hbWUgPSBcImNvdW50XCI7XG5cdFx0XHRcdFx0Y291bnQudHlwZSA9IFwibnVtYmVyXCI7XG5cdFx0XHRcdFx0Y291bnQudmFsdWVBc051bWJlciA9IGV2ZW50LnJlY3VycmVuY2UuY291bnQ7XG5cdFx0XHRcdFx0Y291bnQubWluID0gXCItMVwiO1xuXHRcdFx0XHRcdGNvdW50LmlkID0gXCJlZGl0Q291bnQtXCIgKyBldmVudC5ldmVudElkO1xuXHRcdFx0XHRcdGNvdW50LnJlYWRPbmx5ID0gdHJ1ZTtcblx0XHRcdFx0XHRjb3VudExhYmVsLmFwcGVuZENoaWxkKGNvdW50KTtcblx0XHRcdFx0XHRmb3JtLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG5cdFx0XHRcdFx0Ly9JbnRlcnZhbFxuXHRcdFx0XHRcdGxldCBpbnRlcnZhbExhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuXHRcdFx0XHRcdGludGVydmFsTGFiZWwuaW5uZXJIVE1MID0gXCJSZWN1cnJlbmNlIC0gSW50ZXJ2YWxcIjtcblx0XHRcdFx0XHRpbnRlcnZhbExhYmVsLmNsYXNzTmFtZSA9IFwidGV4dC1kaXNjb3JkLWZ1bGwtd2hpdGVcIjtcblx0XHRcdFx0XHRpbnRlcnZhbExhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChpbnRlcnZhbExhYmVsKTtcblx0XHRcdFx0XHRsZXQgaW50ZXJ2YWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRcdFx0aW50ZXJ2YWwubmFtZSA9IFwiaW50ZXJ2YWxcIjtcblx0XHRcdFx0XHRpbnRlcnZhbC50eXBlID0gXCJudW1iZXJcIjtcblx0XHRcdFx0XHRpbnRlcnZhbC52YWx1ZUFzTnVtYmVyID0gZXZlbnQucmVjdXJyZW5jZS5pbnRlcnZhbDtcblx0XHRcdFx0XHRpbnRlcnZhbC5taW4gPSBcIjFcIjtcblx0XHRcdFx0XHRpbnRlcnZhbC5pZCA9IFwiZWRpdEludGVydmFsLVwiICsgZXZlbnQuZXZlbnRJZDtcblx0XHRcdFx0XHRpbnRlcnZhbC5yZWFkT25seSA9IHRydWU7XG5cdFx0XHRcdFx0aW50ZXJ2YWxMYWJlbC5hcHBlbmRDaGlsZChpbnRlcnZhbCk7XG5cdFx0XHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vQ2Fubm90IGVkaXQgcmVjdXJyZW5jZVxuXHRcdFx0XHRcdGxldCBjYW5ub3RFZGl0UmVjdXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRcdFx0Y2Fubm90RWRpdFJlY3VyLm5hbWUgPSBcImlnbm9yZS1jZXJcIjtcblx0XHRcdFx0XHRjYW5ub3RFZGl0UmVjdXIudHlwZSA9IFwidGV4dFwiO1xuXHRcdFx0XHRcdGNhbm5vdEVkaXRSZWN1ci5yZWFkT25seSA9IHRydWU7XG5cdFx0XHRcdFx0Y2Fubm90RWRpdFJlY3VyLnZhbHVlID0gXCJDYW5ub3QgZWRpdCBjaGlsZFwiO1xuXHRcdFx0XHRcdHJlY3VycmVuY2VMYWJlbC5hcHBlbmRDaGlsZChjYW5ub3RFZGl0UmVjdXIpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcm0uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpKTtcblx0XHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0fVxuXG5cdFx0XHQvL0ltYWdlXG5cdFx0XHRsZXQgaW1hZ2VMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcblx0XHRcdGltYWdlTGFiZWwuaW5uZXJIVE1MID0gXCJJbWFnZVwiO1xuXHRcdFx0aW1hZ2VMYWJlbC5jbGFzc05hbWUgPSBcInRleHQtZGlzY29yZC1mdWxsLXdoaXRlXCI7XG5cdFx0XHRpbWFnZUxhYmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG5cdFx0XHRmb3JtLmFwcGVuZENoaWxkKGltYWdlTGFiZWwpO1xuXHRcdFx0bGV0IGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuXHRcdFx0aW1hZ2UubmFtZSA9IFwiaW1hZ2VcIjtcblx0XHRcdGltYWdlLnR5cGUgPSBcInRleHRcIjtcblx0XHRcdGltYWdlLnZhbHVlID0gZXZlbnQuaW1hZ2U7XG5cdFx0XHRpbWFnZS5pZCA9IFwiZWRpdEltYWdlLVwiICsgZXZlbnQuZXZlbnRJZDtcblx0XHRcdGltYWdlLnJlYWRPbmx5ID0gdHJ1ZTtcblx0XHRcdGltYWdlTGFiZWwuYXBwZW5kQ2hpbGQoaW1hZ2UpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG5cdFx0XHQvL0lEIChyZWFkb25seSkgZm9yIEFQSVxuXHRcdFx0bGV0IGlkTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG5cdFx0XHRpZExhYmVsLmlubmVySFRNTCA9IFwiRXZlbnQgSURcIjtcblx0XHRcdGlkTGFiZWwuY2xhc3NOYW1lID0gXCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZVwiO1xuXHRcdFx0aWRMYWJlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChpZExhYmVsKTtcblx0XHRcdGxldCBoaWRkZW5JZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcblx0XHRcdGhpZGRlbklkLnR5cGUgPSBcInRleHRcIjtcblx0XHRcdGhpZGRlbklkLm5hbWUgPSBcImlkXCI7XG5cdFx0XHRoaWRkZW5JZC52YWx1ZSA9IGV2ZW50LmV2ZW50SWQ7XG5cdFx0XHRoaWRkZW5JZC5pZCA9IFwiZWRpdElkLVwiICsgZXZlbnQuZXZlbnRJZDtcblx0XHRcdGhpZGRlbklkLnJlYWRPbmx5ID0gdHJ1ZTtcblx0XHRcdGlkTGFiZWwuYXBwZW5kQ2hpbGQoaGlkZGVuSWQpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXHRcdFx0Zm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuXG5cdFx0XHQvL0NyZWF0ZSBtb2RhbCBmb290ZXJcblx0XHRcdGxldCBtb2RhbEZvb3RlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0XHRtb2RhbEZvb3Rlci5jbGFzc05hbWUgPSBcIm1vZGFsLWZvb3RlclwiO1xuXHRcdFx0bW9kYWxDb24uYXBwZW5kQ2hpbGQobW9kYWxGb290ZXIpO1xuXG5cdFx0XHRsZXQgY2xvc2VCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXHRcdFx0Y2xvc2VCdXR0b24udHlwZSA9IFwiYnV0dG9uXCI7XG5cdFx0XHRjbG9zZUJ1dHRvbi5jbGFzc05hbWUgPSBcImJ0biBiZy1kaXNjb3JkLWJsdXJwbGUgYnRuLWRpc2NvcmQgYnRuLWJsb2NrIFwiICtcblx0XHRcdFx0XCJ0ZXh0LWRpc2NvcmQtZnVsbC13aGl0ZVwiO1xuXHRcdFx0Y2xvc2VCdXR0b24uc2V0QXR0cmlidXRlKFwiZGF0YS1kaXNtaXNzXCIsIFwibW9kYWxcIik7XG5cdFx0XHRjbG9zZUJ1dHRvbi5pbm5lckhUTUwgPSBcIkNsb3NlXCI7XG5cdFx0XHRtb2RhbEZvb3Rlci5hcHBlbmRDaGlsZChjbG9zZUJ1dHRvbik7XG5cdFx0XHQvL09oIG15IGdvZCBmaW5hbGx5IGRvbmUhISFcblx0XHR9XG5cdFx0RWxlbWVudFV0aWwuc2hvd0V2ZW50c0NvbnRhaW5lcigpO1xuXHR9XG59IiwiaW1wb3J0IHtFbWJlZENhbGVuZGFyfSBmcm9tIFwiQC9vYmplY3RzL2NhbGVuZGFyL0VtYmVkQ2FsZW5kYXJcIjtcblxuZXhwb3J0IGNsYXNzIEVtYmVkQ2FsZW5kYXJSdW5uZXIge1xuXHRwcml2YXRlIGVtYmVkQ2FsZW5kYXI6IEVtYmVkQ2FsZW5kYXI7XG5cblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmVtYmVkQ2FsZW5kYXIgPSBuZXcgRW1iZWRDYWxlbmRhcigpO1xuXHR9XG5cblx0aW5pdChrZXk6IHN0cmluZywgdXJsOiBzdHJpbmcpIHtcblx0XHR0aGlzLmVtYmVkQ2FsZW5kYXIuaW5pdChrZXksIHVybCk7XG5cblx0XHQvKipsb29wIHRocm91Z2ggc3R1ZmYgYW5kIGFzc2lnbiBvbmNsaWNrIHRvIHRoZSBmdW5jdGlvbnMgaGVyZSBzaW5jZSB3ZSBjYW4ndCBkbyBpdCBpbiBodG1sXG5cdFx0ICpkdWUgdG8gaG93IHRoZSBjb2RlIGlzIGNvbXBpbGVkIGFuZCBtaW5pZmllZCwgbWFraW5nIGl0IGltcG9zc2libGUgdG8gY2FsbCB0aGVzZSBmdW5jdGlvbnNcblx0XHQgKiovXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmV2aW91cy1tb250aFwiKSEub25jbGljayA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoaXMucHJldmlvdXNNb250aCgpO1xuXHRcdH0uYmluZCh0aGlzKTtcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5leHQtbW9udGhcIikhLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aGlzLm5leHRNb250aCgpO1xuXHRcdH0uYmluZCh0aGlzKTtcblxuXHRcdGxldCBkYXRlRGlzcGxheXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2FsLWRhdGVcIik7XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBkYXRlRGlzcGxheXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGxldCBlID0gKDxIVE1MRWxlbWVudD5kYXRlRGlzcGxheXNbaV0pO1xuXHRcdFx0ZS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR0aGlzLnNlbGVjdERhdGUoZS5pZCk7XG5cdFx0XHR9LmJpbmQodGhpcyk7XG5cdFx0fVxuXHR9XG5cblx0Ly9IYW5kbGUgdXNlciBpbnB1dCBmb3IgdGhlIGNhbGVuZGFyLi4uLlxuXHRwcmV2aW91c01vbnRoKCkge1xuXHRcdHRoaXMuZW1iZWRDYWxlbmRhci5zZWxlY3RlZERhdGUuc2V0TW9udGgodGhpcy5lbWJlZENhbGVuZGFyLnNlbGVjdGVkRGF0ZS5nZXRNb250aCgpIC0gMSk7XG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLnNlbGVjdGVkRGF0ZS5zZXREYXRlKDEpO1xuXG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLnNldE1vbnRoKHRoaXMuZW1iZWRDYWxlbmRhci5zZWxlY3RlZERhdGUpO1xuXG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLmdldEV2ZW50c0Zvck1vbnRoKCk7XG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLmdldEV2ZW50c0ZvclNlbGVjdGVkRGF0ZSgpO1xuXHR9XG5cblx0bmV4dE1vbnRoKCkge1xuXHRcdHRoaXMuZW1iZWRDYWxlbmRhci5zZWxlY3RlZERhdGUuc2V0TW9udGgodGhpcy5lbWJlZENhbGVuZGFyLnNlbGVjdGVkRGF0ZS5nZXRNb250aCgpICsgMSk7XG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLnNlbGVjdGVkRGF0ZS5zZXREYXRlKDEpO1xuXG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLnNldE1vbnRoKHRoaXMuZW1iZWRDYWxlbmRhci5zZWxlY3RlZERhdGUpO1xuXG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLmdldEV2ZW50c0Zvck1vbnRoKCk7XG5cdFx0dGhpcy5lbWJlZENhbGVuZGFyLmdldEV2ZW50c0ZvclNlbGVjdGVkRGF0ZSgpO1xuXHR9XG5cblx0c2VsZWN0RGF0ZShjbGlja2VkSWQ6IHN0cmluZykge1xuXHRcdGxldCBlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY2xpY2tlZElkKSE7XG5cdFx0bGV0IGRhdGVTdHJpbmcgPSBlLmlubmVySFRNTC5zcGxpdChcIltcIilbMF07XG5cdFx0aWYgKGRhdGVTdHJpbmcgIT09IFwiXCIpIHtcblx0XHRcdGxldCBkYXRlTnVtID0gcGFyc2VJbnQoZGF0ZVN0cmluZyk7XG5cblx0XHRcdHRoaXMuZW1iZWRDYWxlbmRhci5zZWxlY3RlZERhdGUuc2V0RGF0ZShkYXRlTnVtKTtcblx0XHRcdHRoaXMuZW1iZWRDYWxlbmRhci5nZXRFdmVudHNGb3JTZWxlY3RlZERhdGUoKTtcblxuXHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNlbGVjdGVkXCIpWzBdLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcblx0XHRcdGUuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xuXHRcdH1cblx0fVxufSIsImltcG9ydCB7RGFzaGJvYXJkR3VpbGRSdW5uZXJ9IGZyb20gXCJAL2Rhc2hib2FyZC9ndWlsZFwiO1xuaW1wb3J0IHtFbWJlZENhbGVuZGFyUnVubmVyfSBmcm9tIFwiQC9lbWJlZC9jYWxlbmRhclwiO1xuXG5mdW5jdGlvbiBsb2FkRGFzaGJvYXJkR3VpbGRQYWdlKGFwaUtleTogc3RyaW5nLCBhcGlVcmw6IHN0cmluZywgdXNlcklkOiBzdHJpbmcpIHtcblx0bGV0IGRyZyA9IG5ldyBEYXNoYm9hcmRHdWlsZFJ1bm5lcihhcGlLZXksIGFwaVVybCwgcGFyc2VJbnQodXNlcklkKSk7XG5cdGRyZy5zdGFydERhc2hib2FyZEd1aWxkUGFnZSgpO1xufVxuXG5mdW5jdGlvbiBsb2FkRW1iZWRDYWxlbmRhcihlbWJlZEtleTogc3RyaW5nLCBhcGlVcmw6IHN0cmluZykge1xuXHRsZXQgZW1iZWRSdW5uZXIgPSBuZXcgRW1iZWRDYWxlbmRhclJ1bm5lcigpO1xuXHRlbWJlZFJ1bm5lci5pbml0KGVtYmVkS2V5LCBhcGlVcmwpO1xufVxuXG5jb25zdCBib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYWdlLXRvcFwiKTtcbmlmIChib2R5IS5kYXRhc2V0LmVtYmVkS2V5ICE9IG51bGwpIHtcblx0bG9hZEVtYmVkQ2FsZW5kYXIoPHN0cmluZz5ib2R5IS5kYXRhc2V0LmVtYmVkS2V5LCA8c3RyaW5nPmJvZHkhLmRhdGFzZXQuYXBpVXJsKTtcbn0gZWxzZSBpZiAoYm9keSEuZGF0YXNldC5hcGlLZXkgIT0gbnVsbCkge1xuXHRsb2FkRGFzaGJvYXJkR3VpbGRQYWdlKDxzdHJpbmc+Ym9keSEuZGF0YXNldC5hcGlLZXksXG5cdFx0PHN0cmluZz5ib2R5IS5kYXRhc2V0LmFwaVVybCwgPHN0cmluZz5ib2R5IS5kYXRhc2V0LnVzZXJJZClcbn1cblxuKGZ1bmN0aW9uICgkKSB7XG5cdC8vIFRvZ2dsZSB0aGUgc2lkZSBuYXZpZ2F0aW9uXG5cdCQoXCIjc2lkZWJhclRvZ2dsZSwgI3NpZGViYXJUb2dnbGVUb3BcIikub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuXHRcdCQoXCJib2R5XCIpLnRvZ2dsZUNsYXNzKFwic2lkZWJhci10b2dnbGVkXCIpO1xuXHRcdGxldCBzaWRlYmFyOiBhbnkgPSAkKCcuc2lkZWJhcicpO1xuXHRcdHNpZGViYXIudG9nZ2xlQ2xhc3MoXCJ0b2dnbGVkXCIpO1xuXHRcdGlmIChzaWRlYmFyLmhhc0NsYXNzKFwidG9nZ2xlZFwiKSkge1xuXHRcdFx0KDxhbnk+JCgnLnNpZGViYXIgLmNvbGxhcHNlJykpLmNvbGxhcHNlKHRydWUpO1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gQ2xvc2UgYW55IG9wZW4gbWVudSBhY2NvcmRpb25zIHdoZW4gd2luZG93IGlzIHJlc2l6ZWQgYmVsb3cgNzY4cHhcblx0JCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKCQod2luZG93KS53aWR0aCgpISA8IDc2OCkge1xuXHRcdFx0KDxhbnk+JCgnLnNpZGViYXIgLmNvbGxhcHNlJykpLmNvbGxhcHNlKHRydWUpO1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gUHJldmVudCB0aGUgY29udGVudCB3cmFwcGVyIGZyb20gc2Nyb2xsaW5nIHdoZW4gdGhlIGZpeGVkIHNpZGUgbmF2aWdhdGlvbiBob3ZlcmVkIG92ZXJcblx0JCgnYm9keS5maXhlZC1uYXYgLnNpZGViYXInKS5vbignbW91c2V3aGVlbCBET01Nb3VzZVNjcm9sbCB3aGVlbCcsIGZ1bmN0aW9uIChlKSB7XG5cdFx0aWYgKCQod2luZG93KS53aWR0aCgpISA+IDc2OCkge1xuXHRcdFx0Y29uc3QgZTA6IGFueSA9IGUub3JpZ2luYWxFdmVudCxcblx0XHRcdFx0ZGVsdGEgPSBlMC53aGVlbERlbHRhIHx8IC1lMC5kZXRhaWw7XG5cdFx0XHR0aGlzLnNjcm9sbFRvcCArPSAoZGVsdGEgPCAwID8gMSA6IC0xKSAqIDMwO1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gU2Nyb2xsIHRvIHRvcCBidXR0b24gYXBwZWFyXG5cdCQoZG9jdW1lbnQpLm9uKCdzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XG5cdFx0Y29uc3Qgc2Nyb2xsRGlzdGFuY2UgPSAkKHRoaXMpLnNjcm9sbFRvcCgpO1xuXHRcdGlmIChzY3JvbGxEaXN0YW5jZSEgPiAxMDApIHtcblx0XHRcdCQoJy5zY3JvbGwtdG8tdG9wJykuZmFkZUluKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdCQoJy5zY3JvbGwtdG8tdG9wJykuZmFkZU91dCgpO1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gU21vb3RoIHNjcm9sbGluZyB1c2luZyBqUXVlcnkgZWFzaW5nXG5cdCQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdhLnNjcm9sbC10by10b3AnLCBmdW5jdGlvbiAoZSkge1xuXHRcdGNvbnN0ICRhbmNob3I6IGFueSA9ICQodGhpcyk7XG5cdFx0JCgnaHRtbCwgYm9keScpLnN0b3AoKS5hbmltYXRlKHtcblx0XHRcdHNjcm9sbFRvcDogJCgkYW5jaG9yLmF0dHIoJ2hyZWYnKSkhLm9mZnNldCgpIS50b3Bcblx0XHR9LCAxMDAwLCAnZWFzZUluT3V0RXhwbycpO1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0fSk7XG5cbn0pKGpRdWVyeSk7Il0sInNvdXJjZVJvb3QiOiIifQ==